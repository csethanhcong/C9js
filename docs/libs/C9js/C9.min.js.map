{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///C9.min.js","webpack:///webpack/bootstrap c8874f7803bbf5165cd4","webpack:///./src/index.js","webpack:///./src/helper/C9.Helper.js","webpack:///./src/helper/C9.DataAdapter.js","webpack:///./src/charts/utils/C9.Tooltip.js","webpack:///./src/charts/C9.Chart.js","webpack:///./src/charts/utils/C9.Axis.js","webpack:///./src/charts/utils/C9.Legend.js","webpack:///./src/charts/utils/C9.Table.js","webpack:///./src/charts/utils/C9.Title.js","webpack:///./src/charts/C9.BarChart.js","webpack:///./src/charts/C9.DonutChart.js","webpack:///./src/charts/C9.LineChart.js","webpack:///./src/charts/C9.PieChart.js","webpack:///./src/charts/C9.TimeLine.js","webpack:///./src/map/C9.Map.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_C","_C2","_C3","_C4","_C5","_C6","_C7","_C8","_C9","_C10","_C11","_C12","_C13","_C14","_C15","_C16","_C17","BarChart","DonutChart","LineChart","PieChart","TimeLine","Map","DataAdapter","Helper","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","mergeDeep","target","source","Util","isObject","isEmpty","assign","_typeof","Symbol","iterator","constructor","prototype","each","loopable","callback","self","reverse","len","keys","setValue","setPrefix","config","constPrefix","undefined","object","array","toString","isFunction","func","merge","obj3","attrname","get","_key","_data","_keys","split","_current","set","_value","_context","_handle","max","Math","apply","min","sum","reduce","a","b","guid","replace","r","random","v","getMinMax","data","type","isLogaric","_temp","_min","_max","forEach","d","s","y0","push","y1","_newMin","_newMax","dateParser","format","d3","time","parse","dateFormatter","shadeColor","to","convertColorToHex","sbcRip","l","RGB","slice","parseFloat","parseInt","round","h","f","t","scroll","element","duration","difference","scrollTop","perTick","setTimeout","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","protoProps","staticProps","options","chartType","name","x","y","coor","icon","groups","stacks","timeFormat","colorRange","_groups","_stacks","_timeFormat","_colorRange","_dataSource","_dataTarget","_dataRefs","_options","_chartType","_callback","updateConfig","plain","file","url","dataSource","getCsv","getTsv","getText","getJson","getXml","hasFile","executeFile","generateDataTarget","dataTarget","hasPlainData","executePlainData","getDataTargetForBarChart","getDataTargetForLineChart","getDataTargetForPieChart","getDataTargetForDonutChart","getDataTargetForTimelineChart","getDataTargetForMap","groupRefs","_ret","getDataTypeForBarChart","color","index","group","data-ref","enable","_dsArray","_stack","_stackItem","group-ref","_negBase","_posBase","_valueArray","_valueItem","start","end","Date","_valueXArray","_valueYArray","valueX","valueY","_parser","getDataValue","_v","getData","k","csv","err","tsv","text","json","xml","map","querySelectorAll","querySelector","textContent","arg","_file","Tooltip","show","position","backgroundColor","fontColor","fontSize","chart","eventType","select","selectAll","remove","selector","divOnHover","append","attr","getTriangleClass","style","eventFactory","mouseover","html","getFormatByChartType","transition","getCoordinate","mousemove","mouseout","_format","itemHeight","offset","getOffset","left","event","pageX","top","pageY","elem","box","getBoundingClientRect","window","pageYOffset","clientTop","pageXOffset","scrollLeft","clientLeft","setDefaultFormatByChartType","_eventFactory","Chart","width","height","margin","right","bottom","hover","template","onMouseOver","fadeIn","onMouseOut","fadeOut","onMouseMove","click","title","legend","size","fontWeight","space","tooltip","table","container","headings","serial","axis","tick","rotate","count","padding","values","hours","interval","label","grid","subchart","initConfig","dataOption","exit","svg","body","dataConfig","_container","_id","_width","_height","_actualWidth","_actualHeight","scale","ordinal","range","_margin","_dataOption","_svg","_body","_hover","_click","_x","_y","_title","_axis","_legend","_table","_tooltip","Axis","_chart","isLogaricVariant","xScale","domain","starting","ending","xAxis","orient","tickFormat","ticks","tickPadding","tickValues","yAxis","innerTickSize","outerTickSize","textAnchor","angle","sin","PI","toFixed","textDx","textY","update","_xAxis","_yAxis","Legend","maxWidth","maxHeight","item","enter","getSize","getXY","xy","items","numItemsCol","floor","maxWidthCol","n","pos","preItem","newR","prePos","hoverOptions","onMouseOverCallback","onMouseOutCallback","onClickCallback","itemEventFactory","dataSet","totalEnable","newData","updateDomain","subChartX","subChartY","subChartXAxis","updateSubChart","updateOverlay","updateInteraction","legendSelector","lightenLegendItem","normalizeLegendItem","on","path","pie","currentData","arc","chartInnerBefore","innerRadius","chartOuterBefore","radius","outerRadius","chartInnerAfter","chartOuterAfter","selectAllPath","attrTween","interpolate","ease","dataBackup","enableSet","enableSetOld","negElement","posElement","e","isGroup","updateLegendInteraction","filter","_item","_itemEventFactory","_maxWidth","_maxHeight","Table","headTbl","thead","bodyTbl","getTableStyle","tbody","hRows","bRows","selectAllRow","Title","node","getComputedTextLength","setYLocation","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_get","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_Chart","_this","da","getDataTarget","barChartType","_groupNames","_isGroup","rangeRoundBands","log","linear","minMax","groupNames","xGroup","rangeBand","dataCfg","bar","bars","abs","groupNamesOld","newLabel","groupType","xGroupOld","midGroup","indexOf","lower","upper","d1","d2","hoverEnable","selectAllBar","tr","selectedItem","offsetTop","getLightenColor","draw","click.event","mouseover.event","mouseout.event","eventName","updateInteractionForBarChart","newDataConfig","newCfg","updateDataConfig","_groupType","_xGroup","R","layout","sort","arcs","updateInteractionForDonutPieChart","_pie","_arc","_currentData","point","fill","stroke","stroke-width","opacity","area","line","bisectDate","bisector","isTimeDomain","lineGen","areaGen","paddingX","hoverLine","hoverCircle","valueXArray","valueYArray","extent","xDomain","yDomain","paddingY","areaContainer","pathContainer","getLineStyle","pointContainer","_d","chartBox","getBBox","actualWidth","actualHeight","subChartWidth","subChartHeight","subChartMargin","_isTimeDomain","brush","empty","subChartAreaGen","subChart","subChartAreaContainer","selectRectLayer","onMouseMoveCallback","selectAllCircle","circle","mouse","mouseX","curValueX","invert","sameTimeArr","sameTimeValueArr","d0","idx","checkBoundary","bound","checkWidth","mousemove.event","updateHoverLine","updateInteractionForLineChart","_bisectDate","_hoverLine","_subChartX","_subChartY","_subChartWidth","_subChartHeight","_subChartMargin","_subChartXAxis","_brush","_subChartAreaGen","_lineGen","_areaGen","separatorColor","stack","itemMargin","labelMargin","striped","maxStack","stackList","minTime","maxTime","datum","labelContainer","barYAxis","bgContainer","insert","itemContainer","document","createElementNS","ns","prefix","getStackPosition","getXPos","lineYAxis","rowsDown","selectAllRect","isSubchart","ratio","_maxStack","_stackList","layers","view","lat","lon","zoom","initMapConfig","c9Layers","c9Objs","ol","Vector","c9GeojsonObjs","initLayer","popup","createElement","className","appendChild","c9View","View","center","proj","fromLonLat","minZoom","c9Map","interactions","interaction","defaults","doubleClickZoom","c9ObjsLayer","layer","c9Popup","Overlay","positioning","getElementById","addOverlay","c9CustomHover","Style","Stroke","Fill","addData","setSource","setupSource","vs","containFeature","getSource","getFeatures","readFormat","feature","result","getKeys","getProperties","getId","setStyle","once","getState","objs","o","condition","process","j","addLayer","createLayer","BingMaps","imagerySet","Stamen","TileJSON","crossOrigin","TileArcGISRest","extractStyles","Cluster","distance","ImageVector","OSM","LEFT_KEY","RIGHT_KEY","DEL_KEY","DURATION","LOAD_MAP_DELAY","getCenterLonLat","transform","getCenter","getGeometry","getExtent","transformCoordinates","panAnimation","pan","animation","beforeRender","setCenter","createMarkerEffect","animate","vectorContext","frameState","flashGeom","clone","elapsed","elapsedRatio","easing","easeOut","image","Circle","snapToPixel","drawGeometry","Observable","unByKey","listenerKey","render","getTime","distanceAndDirection","fCoordinates","sqrt","pow","formatPopup","capitalizeFirstLetter","string","charAt","toUpperCase","strongSpan","strong","span","evt","forEachFeatureAtPixel","pixel","lastHoveredObj","removeFeature","fStyle","strokeColor","strokeWidth","fillColor","getStroke","getColor","getWidth","getFill","newStyle","addFeature","getTargetElement","cursor","getElement","display","content","trim","innerHTML","setPosition","coordinate","lastSelectedObj","addEventListener","keydownAnimate","selectedFeature","minDistance","Infinity","checkAnimate","keyCode","createMarker","DEFAULT_SRC","DEFAULT_SCALE","imgSrc","marker","Feature","geometry","geom","Point","createMarkerStyle","Icon","anchor","src","coorAndType","normalizeCoordinate","Polygon","LineString","MultiPolygon","createObjStyle","objStyle","normCoor","error","isNaN","isArrayOrObject","check","pc","createObject","concat","eventFactoryViewport","getEventPixel","pointermove","postrender","getViewport","includes","alpha","currentColor","newColor"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,GAAAD,IAEAD,EAAA,GAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAsCA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GE7FxF,GAAAG,GAAAb,EAAA,GF2DKc,EAAML,EAAuBI,GE1DlCE,EAAAf,EAAA,IF8DKgB,EAAMP,EAAuBM,GE7DlCE,EAAAjB,EAAA,IFiEKkB,EAAMT,EAAuBQ,GEhElCE,EAAAnB,EAAA,IFoEKoB,EAAMX,EAAuBU,GEnElCE,EAAArB,EAAA,IFuEKsB,EAAOb,EAAuBY,GEpEnCE,EAAAvB,EAAA,IFwEKwB,EAAOf,EAAuBc,GErEnCE,EAAAzB,EAAA,GFyEK0B,EAAOjB,EAAuBgB,GExEnCE,EAAA3B,EAAA,GF4EK4B,EAAOnB,EAAuBkB,GEzEnCE,EAAA7B,EAAA,GF6EYS,GAAuBoB,EE3EnClC,GAAOD,SACNoC,sBACAC,wBACAC,uBACAC,sBACAC,sBAEAC,iBAEAC,yBACAC,sBF2FK,SAAS1C,EAAQD,GAEtB,YAIA,SAAS4C,GAAgB5B,EAAK6B,EAAKC,GAAiK,MAApJD,KAAO7B,GAAO+B,OAAOC,eAAehC,EAAK6B,GAAOC,MAAOA,EAAOG,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkBnC,EAAI6B,GAAOC,EAAgB9B,EAE3M,QAASoC,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GGoH3L,QAASO,GAAUC,EAAQC,GACvB,GAAIC,EAAKC,SAASH,IAAWE,EAAKC,SAASF,GACvC,IAAK,GAAMjB,KAAOiB,GACVC,EAAKC,SAASF,EAAOjB,KACjBF,EAAOsB,QAAQJ,EAAOhB,KACtBE,OAAOmB,OAAOL,EAAdjB,KACKC,OAGTe,EAAUC,EAAOhB,GAAMiB,EAAOjB,KAE9BE,OAAOmB,OAAOL,EAAdjB,KACKC,EAAMiB,EAAOjB,IAK9B,OAAOgB,GHzIV,GAAIM,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUrD,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXoD,SAAyBpD,EAAIsD,cAAgBF,QAAUpD,IAAQoD,OAAOG,UAAY,eAAkBvD,IG1HnQ2B,GAEA6B,KAAM,SAASC,EAAUC,EAAUC,EAAMC,GAErC,GAAIpB,GAAGqB,CACP,IAAIF,EAAKpB,QAAQkB,GAEb,GADAI,EAAMJ,EAASf,OACXkB,EACA,IAAKpB,EAAIqB,EAAM,EAAGrB,GAAK,EAAGA,IACtBkB,EAAS/D,KAAKgE,EAAMF,EAASjB,GAAIA,OAGrC,KAAKA,EAAI,EAAOqB,EAAJrB,EAASA,IACjBkB,EAAS/D,KAAKgE,EAAMF,EAASjB,GAAIA,OAGtC,IAAwB,YAApB,mBAAOiB,GAAP,YAAAN,EAAOM,IAAuB,CACrC,GAAIK,GAAO/B,OAAO+B,KAAKL,EAEvB,KADAI,EAAMC,EAAKpB,OACNF,EAAI,EAAOqB,EAAJrB,EAASA,IACjBkB,EAAS/D,KAAKgE,EAAMF,EAASK,EAAKtB,IAAKsB,EAAKtB,MAKxDuB,SAAU,SAASjC,EAAOD,GACtB,GAAI8B,GAAOvE,IACXuE,GAAK9B,GAAOC,GAGhBkC,UAAW,SAASC,GAChB,GAAIC,GAAc,GAClB,OAAID,GACOC,EAAcD,EADzB,QAKJhB,QAAS,SAASnB,GACd,MAAiB,QAAVA,GAA4BqC,SAAVrC,GAAwBiB,EAAKR,QAAQT,IAA2B,IAAjBA,EAAMY,QAAkBK,EAAKR,QAAQT,IAAUiB,EAAKE,QAAQnB,EAAM,KAG9IkB,SAAU,SAASoB,GACf,OAAQrB,EAAKE,QAAQmB,IAA8B,YAAnB,mBAAOA,GAAP,YAAAjB,EAAOiB,KAG3C7B,QAAS,SAAS8B,GACd,OAAQtB,EAAKE,QAAQoB,KAAW/B,MAAMC,QAAQ8B,IAAoD,mBAA1CtC,OAAOwB,UAAUe,SAAS3E,KAAK0E,KAG3FE,WAAY,SAASC,GACjB,OAAQzB,EAAKE,QAAQuB,IAA0B,kBAAVA,IAIzCC,MAAO,SAAS5B,EAAQC,GACpB,GAAI4B,KACJ,KAAK,GAAIC,KAAY7B,GAAeC,EAAKE,QAAQH,EAAO6B,MAAYD,EAAKC,GAAY7B,EAAO6B,GAC5F,KAAK,GAAIA,KAAY9B,GAAeE,EAAKE,QAAQJ,EAAO8B,MAAYD,EAAKC,GAAY9B,EAAO8B,GAC5F,OAAOD,IAIX9B,UAAW,SAASC,EAAQC,GACxB,MAAOF,GAAUC,EAAQC,IAG7B8B,IAAK,SAASC,EAAMC,GAIhB,IAAK,GAHDC,GAAQF,EAAKG,MAAM,KACnBC,EAAWH,EAENtC,EAAI,EAAGA,EAAIuC,EAAMrC,OAAQF,IAAK,CAEnC,GAAI,mBAAsByC,GAASF,EAAMvC,IACrC,MAAO,EAEPyC,GAAWA,EAASF,EAAMvC,IAIlC,MAAOyC,IAGXC,IAAK,SAASL,EAAMM,EAAQC,GAIxB,IAAI,GAHAH,GAAWG,EACXL,EAAQF,EAAKG,MAAM,KACnBnB,EAAMkB,EAAMrC,OACRF,EAAI,EAAOqB,EAAI,EAARrB,EAAWA,IAAK,CAC3B,GAAI6C,GAAUN,EAAMvC,EACfyC,GAASI,KAAWJ,EAASI,OAClCJ,EAAWA,EAASI,GAGxBJ,EAASF,EAAMlB,EAAI,IAAMsB,GAG7BG,IAAK,SAASjD,GACV,MAAOkD,MAAKD,IAALE,MAAAD,KAAAnD,EAAYC,KAGvBoD,IAAK,SAASpD,GACV,MAAOkD,MAAKE,IAALD,MAAAD,KAAAnD,EAAYC,KAGvBqD,IAAK,SAASrD,GACV,MAAOA,GAAIsD,OAAO,SAASC,EAAGC,GAAK,MAAOD,GAAIC,GAAM,IAGxDC,KAAM,WACF,MAAO,sBAAsBC,QAAQ,QAAS,SAASlG,GACnD,GAAImG,GAAkB,GAAdT,KAAKU,SAAY,EACrBC,EAAS,KAALrG,EAAWmG,EAAO,EAAFA,EAAM,CAC9B,OAAOE,GAAE5B,SAAS,OAI1B6B,UAAW,SAASC,EAAMC,EAAMC,GAC5B,GAAI3C,GAAQvE,KACRmH,EAAQ,GAAIjE,OACZkE,EAAQ,EACRC,EAAQ,CACA,UAARJ,EACAD,EAAKM,QAAQ,SAAUC,GACnBA,EAAED,QAAQ,SAAUE,GACZA,EAAEC,GAAK,EACPN,EAAMO,KAAKF,EAAEG,IAEbR,EAAMO,KAAKF,EAAEG,GAAKH,EAAEC,QAIhCT,EAAKM,QAAQ,SAAUC,GACnBA,EAAED,QAAQ,SAAUE,GAChBL,EAAMO,KAAKF,EAAEC,OAMzB,IAAIG,GAAUrD,EAAK8B,IAAIc,GACnBU,EAAUtD,EAAK2B,IAAIiB,EAMvB,QALcC,EAAVQ,GAAkBV,KAClBE,EAAOQ,GACPC,EAAUR,IACVA,EAAOQ,IAEHxB,IAAKe,EAAMlB,IAAKmB,IAE5BS,WAAY,SAASC,GACjB,MAAOC,IAAGC,KAAKF,OAAOA,GAAQG,OAElCC,cAAe,SAASJ,GACpB,MAAOC,IAAGC,KAAKF,OAAOA,IAI1BK,WAAY,SAAS1H,EAAG6C,EAAM8E,GAI1B,GAFA9E,EAAOI,EAAK2E,kBAAkB/E,IAASA,EAEzB,gBAAJ7C,IAAgB,GAAFA,GAAMA,EAAE,GAAiB,gBAAP6C,IAA2B,KAATA,EAAK,IAAkB,KAATA,EAAK,IAAuB,gBAAL8E,IAA2B,mBAALA,GAAkB,MAAO,KAC5IrI,MAAKuI,SACLvI,KAAKuI,OAAO,SAAShB,GACjB,GAAIiB,GAAEjB,EAAEjE,OAAOmF,EAAI,GAAI9F,OACvB,IAAG6F,EAAE,EAAE,CAEH,GADAjB,EAAEA,EAAE3B,MAAM,KACP2B,EAAEjE,OAAO,GAAGiE,EAAEjE,OAAO,EAAE,MAAO,KACjCmF,GAAI,GAAGrF,EAAEmE,EAAE,GAAGmB,MAAM,IAAID,EAAI,GAAGrF,EAAEmE,EAAE,IAAIkB,EAAI,GAAGrF,EAAEmE,EAAE,IAAIkB,EAAI,GAAGlB,EAAE,GAAGoB,WAAWpB,EAAE,IAAI,OAClF,CACD,GAAM,GAAHiB,GAAS,GAAHA,GAAQ,EAAFA,EAAI,MAAO,KACrB,GAAFA,IAAIjB,EAAE,IAAIA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAAIiB,EAAE,EAAEjB,EAAE,GAAG,GAAGA,EAAE,GAAG,KAC7DA,EAAEnE,EAAEmE,EAAEmB,MAAM,GAAG,IAAID,EAAI,GAAGlB,GAAG,GAAG,IAAIkB,EAAI,GAAGlB,GAAG,EAAE,IAAIkB,EAAI,GAAK,IAAFlB,EAAMkB,EAAI,GAAM,GAAHD,GAAS,GAAHA,EAAK5B,GAAIW,GAAG,GAAG,KAAK,IAAK,KAAO,IAAM,GAExH,MAAOkB,IAEf,IAAIrF,GAAEwF,SAAShC,EAAET,KAAK0C,MAAMC,EAAEvF,EAAKD,OAAO,EAAEwF,EAAc,gBAALT,GAAcA,EAAG/E,OAAO,GAAE,EAAS,KAAJ+E,GAASS,GAAE,EAAMA,EAAErC,EAAI,EAAF/F,EAAIA,EAAE+F,EAAI,GAAF/F,EAAKA,EAAE2H,EAAGA,GAAQ,KAAJA,EAAQA,EAAG5B,EAAE,UAAU,UAAUsC,EAAE/I,KAAKuI,OAAOhF,GAAMyF,EAAEhJ,KAAKuI,OAAOF,EAClM,OAAIU,IAAIC,EACLF,EAAS,OAAOlC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,IAAI,IAAInC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,IAAI,IAAInC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,KAAKA,EAAE,GAAG,GAAGC,EAAE,GAAG,EAAE,IAAI,KAAKD,EAAE,GAAG,IAAIC,EAAE,GAAG,GAAGpC,EAAuB,MAAnBoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,KAAW,IAAMC,EAAE,GAAG,EAAED,EAAE,GAAGC,EAAE,IAAI,KACjL,KAAK,WAAuG,UAA1FD,EAAE,GAAG,IAAIC,EAAE,GAAG,GAAGpC,EAAuB,MAAnBoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,KAASC,EAAE,GAAG,GAAGpC,EAAO,IAALoC,EAAE,IAAQD,EAAE,GAAG,GAAGnC,EAAO,IAALmC,EAAE,IAAQ,KAAqC,MAAtBnC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,IAAkC,IAAtBnC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,IAAUnC,GAAGoC,EAAE,GAAGD,EAAE,IAAIrI,EAAEqI,EAAE,KAAK7D,SAAS,IAAIwD,MAAMK,EAAE,GAAG,IAAIC,EAAE,GAAG,GAAG,EAAE,GAFxO,MAKrBC,OAAQ,SAASC,EAASb,EAAIc,GAC1B,GAAI5E,GAAOvE,IACX,MAAgB,GAAZmJ,GAAJ,CACA,GAAIC,GAAaf,EAAKa,EAAQG,UAC1BC,EAAUF,EAAaD,EAAW,EAEtCI,YAAW,WACPL,EAAQG,UAAYH,EAAQG,UAAYC,EACpCJ,EAAQG,YAAchB,GAC1B9D,EAAK0E,OAAOC,EAASb,EAAIc,EAAW,KACrC,OAIPxF,GACAE,QAAS,SAASnB,GACd,MAAiB,QAAVA,GAA4BqC,SAAVrC,GAG7BS,QAAS,SAAS8B,GACd,MAAO/B,OAAMC,QAAQ8B,IAAoD,mBAA1CtC,OAAOwB,UAAUe,SAAS3E,KAAK0E,IAGlErB,SAAU,SAASoB,GACf,MAAQA,IAA4B,YAAlB,mBAAOA,GAAP,YAAAjB,EAAOiB,MAAwB9B,MAAMC,QAAQ6B,IAGnEsD,kBAAmB,SAASkB,GACxB,GAAIC,IACAC,UAAY,UAAUC,aAAe,UAAUC,KAAO,UAAUC,WAAa,UAAUC,MAAQ,UAC/FC,MAAQ,UAAUC,OAAS,UAAUC,MAAQ,UAAUC,eAAiB,UAAUC,KAAO,UAAUC,WAAa,UAAUC,MAAQ,UAAUC,UAAY,UACxJC,UAAY,UAAUC,WAAa,UAAUC,UAAY,UAAUC,MAAQ,UAAUC,eAAiB,UAAUC,SAAW,UAAUC,QAAU,UAAUC,KAAO,UAChKC,SAAW,UAAUC,SAAW,UAAUC,cAAgB,UAAUC,SAAW,UAAUC,UAAY,UAAUC,UAAY,UAAUC,YAAc,UAAUC,eAAiB,UAC9KC,WAAa,UAAUC,WAAa,UAAUC,QAAU,UAAUC,WAAa,UAAUC,aAAe,UAAUC,cAAgB,UAAUC,cAAgB,UAAUC,cAAgB,UACtLC,WAAa,UAAUC,SAAW,UAAUC,YAAc,UAAUC,QAAU,UAAUC,WAAa,UACrGC,UAAY,UAAUC,YAAc,UAAUC,YAAc,UAAUC,QAAU,UAChFC,UAAY,UAAUC,WAAa,UAAUC,KAAO,UAAUC,UAAY,UAAUC,KAAO,UAAUC,MAAQ,UAAUC,YAAc,UACrIC,SAAW,UAAUC,QAAU,UAC/BC,aAAa,UAAUC,OAAS,UAAUC,MAAQ,UAAUC,MAAQ,UACpEC,SAAW,UAAUC,cAAgB,UAAUC,UAAY,UAAUC,aAAe,UAAUC,UAAY,UAAUC,WAAa,UAAUC,UAAY,UAAUC,qBAAuB,UACxLC,UAAY,UAAUC,WAAa,UAAUC,UAAY,UAAUC,YAAc,UAAUC,cAAgB,UAAUC,aAAe,UAAUC,eAAiB,UAAUC,eAAiB,UAC1LC,YAAc,UAAUC,KAAO,UAAUC,UAAY,UAAUC,MAAQ,UACvEC,QAAU,UAAUC,OAAS,UAAUC,iBAAmB,UAAUC,WAAa,UAAUC,aAAe,UAAUC,aAAe,UAAUC,eAAiB,UAAUC,gBAAkB,UAC1LC,kBAAoB,UAAUC,gBAAkB,UAAUC,gBAAkB,UAAUC,aAAe,UAAUC,UAAY,UAAUC,UAAY,UAAUC,SAAW,UACtKC,YAAc,UAAUC,KAAO,UAC/BC,QAAU,UAAUC,MAAQ,UAAUC,UAAY,UAAUC,OAAS,UAAUC,UAAY,UAAUC,OAAS,UAC9GC,cAAgB,UAAUC,UAAY,UAAUC,cAAgB,UAAUC,cAAgB,UAAUC,WAAa,UAAUC,UAAY,UAAUC,KAAO,UAAUC,KAAO,UAAUC,KAAO,UAAUC,WAAa,UAAUC,OAAS,UACpOC,IAAM,UAAUC,UAAY,UAAUC,UAAY,UAClDC,YAAc,UAAUC,OAAS,UAAUC,WAAa,UAAUC,SAAW,UAAUC,SAAW,UAAUC,OAAS,UAAUC,OAAS,UAAUC,QAAU,UAAUC,UAAY,UAAUC,UAAY,UAAUC,KAAO,UAAUC,YAAc,UAAUC,UAAY,UACvQC,IAAM,UAAUC,KAAO,UAAUC,QAAU,UAAUC,OAAS,UAAUC,UAAY,UACpFC,OAAS,UACTC,MAAQ,UAAUC,MAAQ,UAAUC,WAAa,UACjDC,OAAS,UAAUC,YAAc,UAGrC,OAA4C,mBAAjC5I,GAAQD,EAAO8I,eACf7I,EAAQD,EAAO8I,gBAEnB,GA2BfzS,GAAOD,QAAU2C,GHmIX,SAAS1C,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIqB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUrD,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXoD,SAAyBpD,EAAIsD,cAAgBF,QAAUpD,IAAQoD,OAAOG,UAAY,eAAkBvD,IAElQ+R,EAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MItZjiB1R,EAAAb,EAAA,GJ0ZKc,EAAML,EAAuBI,GIxZbuB,EJ8ZF,WI5Zf,QAAAA,GAAY2Q,EAASC,EAAW5O,GAAUiO,EAAAvS,KAAAsC,EAEtC,IAAIiC,GAAOvE,KAEP6E,GAEAH,MACIyO,KAAM,OACNzQ,MAAO,QACP0Q,EAAG,UACHC,EAAG,QACHC,KAAM,OACNC,KAAM,QAEVC,UACAC,UACAC,YAAY,EAIZC,WAAY,KAGhBpP,GAAKoB,MAAa3E,aAAOqE,MAAM4N,EAAQvO,KAAMG,EAAOH,MACpDH,EAAKqP,QAAaX,EAAQO,QAAa3O,EAAO2O,OAC9CjP,EAAKsP,QAAaZ,EAAQQ,QAAa5O,EAAO4O,OAC9ClP,EAAKuP,YAAiBb,EAAQS,YAAiB7O,EAAO6O,WACtDnP,EAAKwP,YAAad,EAAQU,YAAa9O,EAAO8O,WAE9CpP,EAAKyP,eACLzP,EAAK0P,eACL1P,EAAK2P,aAEL3P,EAAK4P,SAAWlB,EAChB1O,EAAK6P,WAAalB,EAClB3O,EAAK8P,UAAY/P,EAEjBC,EAAK+P,aAAazP,GJyrCrB,MAnxBA8N,GAAarQ,IACTG,IAAK,eAOLC,MAAO,SI9TCmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,YJgV5CxQ,IAAK,eACLC,MAAO,WI/TR,GAAI6B,GAAOvE,IAGX,QAAQgB,aAAO6C,QAAQU,EAAK0O,QAAQsB,UJmUnC9R,IAAK,UACLC,MAAO,WIhUR,GAAI6B,GAAOvE,IAEX,OAAOgB,cAAO4C,SAASW,EAAK0O,QAAQuB,QAC5BxT,aAAO6C,QAAQU,EAAK0O,QAAQuB,KAAKC,OACjCzT,aAAO6C,QAAQU,EAAK0O,QAAQuB,KAAKvN,SJkUxCxE,IAAK,mBACLC,MAAO,SIhUK4B,GACb,GAAIC,GAAOvE,IAEXuE,GAAKmQ,WAAanQ,EAAK0O,QAAQsB,MAE/BjQ,EAAS/D,KAAKgE,EAAMA,EAAKmQ,eJmUxBjS,IAAK,cACLC,MAAO,SIjUA4B,GACR,GAAIC,GAAOvE,IAIX,IAFAuE,EAAKiQ,KAAQjQ,EAAK0O,QAAQuB,MAErBxT,aAAO6C,QAAQU,EAAKiQ,MAErB,OAAOjQ,EAAKiQ,KAAKvN,MACb,IAAK,MACD1C,EAAKoQ,OAAOrQ,EACZ,MACJ,KAAK,MACDC,EAAKqQ,OAAOtQ,EACZ,MACJ,KAAK,OACDC,EAAKsQ,QAAQvQ,EACb,MACJ,KAAK,OACDC,EAAKuQ,QAAQxQ,EACb,MACJ,KAAK,MACDC,EAAKwQ,OAAOzQ,EACZ,MACJ,KAAK,MACDC,EAAKuQ,QAAQxQ,EACb,MACJ,SACIC,EAAKuQ,QAAQxQ,OJuUxB7B,IAAK,yBACLC,MAAO,WIjUR,GAAI6B,GAAOvE,IAEX,KAAKgB,aAAO6C,QAAQU,EAAKiP,SAAWxS,aAAOmC,QAAQoB,EAAKiP,SAAkC,IAAvBjP,EAAKiP,OAAOlQ,OAC3E,MAAO,OACJ,KAAKtC,aAAO6C,QAAQU,EAAKkP,SAAWzS,aAAOmC,QAAQoB,EAAKkP,QAC3D,MAAO,OAIX,KAAK,GAAIrQ,GAAImB,EAAKmQ,WAAWpR,OAAS,EAAGF,GAAK,EAAGA,IAC7C,GAAIpC,aAAOmC,QAAQnC,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAO6B,EAAKmQ,WAAWtR,KAC3D,MAAO,OAGf,OAAO,YJoUNX,IAAK,gBACLC,MAAO,SIlUEuE,EAAM3C,GAChB,GAAIC,GAAOvE,IAGPuE,GAAKyQ,UACLzQ,EAAK0Q,YAAY,SAASjO,GACtBzC,EAAKmQ,WAAa1N,EAClBzC,EAAK2Q,mBAAmBjO,GACxB3C,EAAS/D,KAAKgE,EAAMA,EAAK4Q,cAGtB5Q,EAAK6Q,gBACZ7Q,EAAK8Q,iBAAiB,SAASrO,GAC3BzC,EAAKmQ,WAAa1N,EAClBzC,EAAK2Q,mBAAmBjO,GACxB3C,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBJsUhC1S,IAAK,qBACLC,MAAO,SIlUOuE,GACf,GAAI1C,GAAOvE,IAEX,QAAOiH,GACH,IAAK,MACD1C,EAAK+Q,0BACL,MAEJ,KAAK,OACD/Q,EAAKgR,2BACL,MAEJ,KAAK,MACDhR,EAAKiR,0BACL,MAEJ,KAAK,QACDjR,EAAKkR,4BACL,MAEJ,KAAK,WACDlR,EAAKmR,+BACL,MAEJ,KAAK,MACDnR,EAAKoR,qBACL,MAEJ,SACIpR,EAAK4Q,WAAa5Q,EAAKmQ,eJuU9BjS,IAAK,UACLC,MAAO,SInUJoE,GACJ,MAAOA,GAAEqM,QJsUR1Q,IAAK,WACLC,MAAO,SIpUHoE,GACL,GAAIvC,GAAOvE,IAEX,OAAOgB,cAAOwE,IAAIjB,EAAKG,KAAMoC,MJ8U5BrE,IAAK,2BACLC,MAAO,WItUR,GA0BYkT,GAiEAnC,EACAmC,EA5FRrR,EAAOvE,KADY6V,EAAA,WAGvB,OAAOtR,EAAKuR,0BACR,IAAK,SACD,GAAIC,GAAQxR,EAAKoP,WACbH,EAASjP,EAAKiP,MAElBjP,GAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAItQ,KACAyN,KAASnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACpCtE,MAAS1B,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GACrCS,GAAOzG,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GACnCW,GAAO3G,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GACnCiP,MAASzC,EAAO,IAAM,QACtB0C,WAAYlV,aAAO0F,OACnByP,QAAW,EACXJ,MAASA,EAAM,IAEnBxR,GAAK4Q,WAAWzN,KAAKhC,IAIzB,MAEJ,KAAK,QA+DD,MA9DI8N,GAASjP,EAAKiP,OACdoC,KAEJrR,EAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAII,GAAcpV,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GAE1CqP,KACAC,GACIP,MAAS,UACTtO,GAAM,EACNE,GAAM,EACNsO,MAAS,GACT9C,KAAQ,GACR+C,WAAY,GACZK,YAAa,GACbJ,QAAc,GAElBJ,EAAQxR,EAAKoP,UAGb3S,cAAOmC,QAAQiT,GACfA,EAAS9O,QAAQ,SAASC,EAAGnE,GACrBwS,EAAUtS,OAAS,EAAIF,GACvBwS,EAAUlO,KAAK1G,aAAO0F,QACtB1F,aAAO6C,QAAQ2P,EAAOpQ,KACtBoQ,EAAO9L,KAAK,QAAUtE,EAAE,IAC5BkT,GACIP,MAASA,EAAM3S,GACfqE,GAAMF,EACNI,GAAMJ,EAAI,EAAIA,EAAI,EAClB0O,MAASzC,EAAOpQ,GAChB+P,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnCtE,MAAS6E,EACT2O,WAAYlV,aAAO0F,OACnB6P,YAAaX,EAAUxS,GACvB+S,QAAc,GAElBE,EAAO3O,KAAK4O,MAGQ,GAApBV,EAAUtS,QACVsS,EAAUlO,KAAK1G,aAAO0F,QACtB1F,aAAO6C,QAAQ2P,EAAO,KACtBA,EAAO9L,KAAK,SAChB4O,GACIP,MAASA,EAAM,GACftO,GAAM2O,EACNzO,GAAMyO,EAAW,EAAIA,EAAW,EAChCH,MAASzC,EAAO,GAChBL,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnCtE,MAAS0T,EACTF,WAAYlV,aAAO0F,OACnB6P,YAAaX,EAAU,GACvBO,QAAc,GAElBE,EAAO3O,KAAK4O,IAGhB/R,EAAK4Q,WAAWzN,KAAK2O,KAGzB9R,EAAKiP,OAASA,GACd1M,EAAOvC,EAAK4Q,WAGhB,KAAK,QAkED,MAjEI1B,GAASlP,EAAKkP,OACdmC,KAEJrR,EAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAII,GAAcpV,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GAE1CqP,KACAC,GACIP,MAAS,UACTtO,GAAM,EACNE,GAAM,EACNsO,MAAS,GACT9C,KAAQ,GACR+C,WAAY,GACZC,QAAc,GAElBJ,EAAQxR,EAAKoP,UAGb3S,cAAOmC,QAAQiT,IAAW,WAC1B,GAAII,GAAW,EACXC,EAAW,CACfL,GAAS9O,QAAQ,SAASC,EAAGnE,GACrBwS,EAAUtS,OAAS,EAAIF,GACvBwS,EAAUlO,KAAK1G,aAAO0F,QACtB1F,aAAO6C,QAAQ4P,EAAOrQ,KACtBqQ,EAAO/L,KAAK,QAAUtE,EAAE,IAC5BkT,GACIP,MAASA,EAAM3S,GACfqE,GAAMF,EACNI,GAAMJ,EAAI,EAAIA,EAAIkP,EAAWD,EAC7BP,MAASxC,EAAOrQ,GAChB+P,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnCtE,MAAS6E,EACT2O,WAAYlV,aAAO0F,OACnB6P,YAAaX,EAAUxS,GACvB+S,QAAc,GAElBE,EAAO3O,KAAK4O,GACR/O,EAAI,EAAGkP,GAAYlP,EAClBiP,GAAYjP,QAGG,GAApBqO,EAAUtS,QACVsS,EAAUlO,KAAK1G,aAAO0F,QACtB1F,aAAO6C,QAAQ4P,EAAO,KACtBA,EAAO/L,KAAK,SAChB4O,GACIP,MAASA,EAAM,GACftO,GAAM2O,EACNzO,GAAMyO,EAAW,EAAIA,EAAW,EAChCH,MAASxC,EAAO,GAChBN,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnCtE,MAAS0T,EACTF,WAAYlV,aAAO0F,OACnB6P,YAAaX,EAAU,GACvBO,QAAc,GAElBE,EAAO3O,KAAK4O,IAGhB/R,EAAK4Q,WAAWzN,KAAK2O,KAGzB9R,EAAKkP,OAASA,GACd3M,EAAOvC,EAAK4Q,WAGhB,SACI,OAAArO,EAAOvC,EAAKmQ,eAjKG,sCAAAmB,GAAA,YAAA9R,EAAA8R,MAAA/O,EAAA,UJuftBrE,IAAK,2BACLC,MAAO,WIhVR,GAAI6B,GAAOvE,KAEP+V,EAAQxR,EAAKoP,UAYjB,OAXApP,GAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAItQ,IACAqQ,MAAcA,EAAMC,GACpB7C,KAAcnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACzCtE,MAAc1B,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GAC1CkP,WAAclV,aAAO0F,OACrByP,QAAc,EAElB5R,GAAK4Q,WAAWzN,KAAKhC,KAGlBnB,EAAK4Q,cJoVX1S,IAAK,6BACLC,MAAO,WIhVR,GAAI6B,GAAOvE,KAEP+V,EAAQxR,EAAKoP,UAajB,OAZApP,GAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAItQ,IACAqQ,MAAcA,EAAMC,GACpBE,WAAclV,aAAO0F,OACrByP,QAAc,EACdhD,KAAcnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACzCtE,MAAc1B,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GAG9CzC,GAAK4Q,WAAWzN,KAAKhC,KAGlBnB,EAAK4Q,cJoVX1S,IAAK,gCACLC,MAAO,WIhVR,GAAI6B,GAAOvE,KAEP+V,EAAQxR,EAAKoP,UAsDjB,OApDApP,GAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GAEnC,GAAItQ,IAEA6N,KAAcvS,aAAOwE,IAAIjB,EAAKG,KAAK6O,KAAMvM,GACzCmM,KAAcnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACzCtE,SACAwT,WAAclV,aAAO0F,OACrByP,QAAc,GAGdC,EAAcpV,aAAOwE,IAAIjB,EAAKG,KAAKhC,MAAOsE,GAC1C0P,KACAC,GACIxD,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnC4P,MAAS,KACTC,IAAO,KACPd,MAAS,OACTG,WAAY,KACZC,QAAU,EACV5C,KAAQ,KAGZvS,cAAOmC,QAAQiT,GACfA,EAAS9O,QAAQ,SAASC,EAAGnE,GACzBuT,GACIxD,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnC4P,MAAS,GAAIE,MAAKvP,EAAEqP,OACpBC,IAAO,GAAIC,MAAKvP,EAAEsP,KAClBd,MAASA,EAAMC,GACfE,WAAYlV,aAAO0F,OACnByP,QAAU,EACV5C,KAAQvS,aAAOwE,IAAIjB,EAAKG,KAAK6O,KAAMvM,IAEvC0P,EAAYhP,KAAKiP,MAGrBA,GACIxD,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnC4P,MAAS,GAAIE,MAAKV,EAASQ,OAC3BC,IAAO,GAAIC,MAAKV,EAASS,KACzBd,MAASA,EAAMC,GACfE,WAAYlV,aAAO0F,OACnByP,QAAU,EACV5C,KAAQvS,aAAOwE,IAAIjB,EAAKG,KAAK6O,KAAMvM,IAEvC0P,EAAYhP,KAAKiP,IAErBjR,EAAMhD,MAAQgU,EAEdnS,EAAK4Q,WAAWzN,KAAKhC,KAElBnB,EAAK4Q,cJoVX1S,IAAK,4BACLC,MAAO,WIhVR,GAAI6B,GAAOvE,KAEP+V,EAAQxR,EAAKoP,UAuFjB,OAtFApP,GAAKmQ,WAAWpN,QAAQ,SAASN,EAAMgP,GACnC,GAAItQ,IACAqQ,MAAcA,EAAMC,GACpB7C,KAAcnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACzCtE,SACAwT,WAAclV,aAAO0F,OACrByP,QAAc,GAGdY,EAAe/V,aAAOwE,IAAIjB,EAAKG,KAAK0O,EAAGpM,GACvCgQ,EAAehW,aAAOwE,IAAIjB,EAAKG,KAAK2O,EAAGrM,GACvC0P,KACAC,GACIxD,KAAUnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACrCiQ,OAAU,KACVC,OAAU,KACVhB,WAAYlV,aAAO0F,OACnByP,QAAU,EAGdnV,cAAOmC,QAAQ6T,KAOVhW,aAAOmC,QAAQ4T,GAmBhB/V,aAAOmC,QAAQ4T,KAAkBxS,EAAKmP,WACtCsD,EAAa1P,QAAQ,SAASC,EAAGnE,GAC7BuT,GACIxD,KAAUnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACrCiQ,OAAWjW,aAAO6C,QAAQkT,EAAa3T,IAAwBA,EAAlB2T,EAAa3T,GAC1D8T,OAAU3P,EACV2O,WAAYlV,aAAO0F,OACnByP,QAAU,GAEdO,EAAYhP,KAAKiP,KAUrB3V,aAAOmC,QAAQ4T,IAAiBxS,EAAKmP,aAAY,WACjD,GAAIyD,GAAUnW,aAAO8G,WAAWvD,EAAKmP,WAErCsD,GAAa1P,QAAQ,SAASC,EAAGnE,GAC7BuT,GACIxD,KAAUnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACrCiQ,OAAWjW,aAAO6C,QAAQkT,EAAa3T,IAAiCA,EAA3B+T,EAAQJ,EAAa3T,IAClE8T,OAAU3P,EACV2O,WAAYlV,aAAO0F,OACnByP,QAAU,GAEdO,EAAYhP,KAAKiP,QAhDrBK,EAAa1P,QAAQ,SAASC,EAAGnE,GAC7BuT,GACIxD,KAAUnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACrCiQ,OAAU7T,EACV8T,OAAU3P,EACV2O,WAAYlV,aAAO0F,OACnByP,QAAU,GAEdO,EAAYhP,KAAKiP,MA6C7BjR,EAAMhD,MAAQgU,EAEdnS,EAAK4Q,WAAWzN,KAAKhC,KAGlBnB,EAAK4Q,cJ4VX1S,IAAK,sBACLC,MAAO,WInVR,GAAI6B,GAAOvE,KAEPoX,EAAe,SAAS3U,EAAKuE,EAAM7D,GACnC,GAAIwC,GAAQlD,EAAImD,MAAM,KAClBG,EAAS/E,aAAOwE,IAAI/C,EAAKuE,GACzBqQ,QAOJ,OANoB,IAAhB1R,EAAMrC,QAA2B,SAAZqC,EAAM,IAAkBxC,GAG7CkU,EAAK,GAAI1U,QACT0U,EAAG1R,EAAMA,EAAMrC,OAAS,IAAMyC,GAH9BsR,EAAKtR,EAKFsR,GAGPC,EAAU,SAAStQ,GACnB,GAAItB,IACAyN,KAAQnS,aAAOwE,IAAIjB,EAAKG,KAAKyO,KAAMnM,GACnCsM,KAAQtS,aAAOwE,IAAIjB,EAAKG,KAAK4O,KAAMtM,GACnCtE,MAAS,KAYb,OAVI1B,cAAOmC,QAAQoB,EAAKG,KAAKhC,OACzB6B,EAAKG,KAAKhC,MAAM4E,QAAQ,SAASiQ,GAC7B,GAAIF,GAAKD,EAAaG,EAAGvQ,GAAM,EAC/BtB,GAAMhD,MAAQ1B,aAAOqE,MAAMK,EAAMhD,MAAO2U,KAI5C3R,EAAMhD,MAAQ0U,EAAa7S,EAAKG,KAAKhC,MAAOsE,GAAM,GAG/CtB,EAUX,OAPK1E,cAAOmC,QAAQoB,EAAKmQ,YAGrBnQ,EAAKmQ,WAAWpN,QAAQ,SAASN,GAC7BzC,EAAK4Q,WAAWzN,KAAK4P,EAAQtQ,MAHjCzC,EAAK4Q,WAAamC,EAAQ/S,EAAKmQ,YAM5BnQ,EAAK4Q,cJ0VX1S,IAAK,SACLC,MAAO,SIjVL4B,GAEH,GAAIC,GAAOvE,IAEXgI,IAAGwP,IAAIjT,EAAKiQ,KAAKC,IAAK,SAASgD,EAAKzQ,GAChC,GAAIyQ,EAAK,KAAMA,IAEVzW,aAAO6C,QAAQS,IAAatD,aAAOmE,WAAWb,IAC/CA,EAAS/D,KAAKgE,EAAMyC,QJoV3BvE,IAAK,SACLC,MAAO,SIjVL4B,GAEH,GAAIC,GAAOvE,IAEXgI,IAAG0P,IAAInT,EAAKiQ,KAAKC,IAAK,SAASgD,EAAKzQ,GAChC,GAAIyQ,EAAK,KAAMA,IAEVzW,aAAO6C,QAAQS,IAAatD,aAAOmE,WAAWb,IAC/CA,EAAS/D,KAAKgE,EAAMyC,QJoV3BvE,IAAK,UACLC,MAAO,SIhVJ4B,GAEJ,GAAIC,GAAOvE,IAEXgI,IAAG2P,KAAKpT,EAAKiQ,KAAKC,IAAK,SAASgD,EAAKzQ,GACjC,GAAIyQ,EAAK,KAAMA,IAEVzW,aAAO6C,QAAQS,IAAatD,aAAOmE,WAAWb,IAC/CA,EAAS/D,KAAKgE,EAAMyC,QJmV3BvE,IAAK,UACLC,MAAO,SI/UJ4B,GAEJ,GAAIC,GAAOvE,IAEXgI,IAAG4P,KAAKrT,EAAKiQ,KAAKC,IAAK,SAASgD,EAAKzQ,GACjC,GAAIyQ,EAAK,KAAMA,IAEVzW,aAAO6C,QAAQS,IAAatD,aAAOmE,WAAWb,IAC/CA,EAAS/D,KAAKgE,EAAMyC,QJkV3BvE,IAAK,SACLC,MAAO,SI/UL4B,GAEH,GAAIC,GAAOvE,IAEXgI,IAAG6P,IAAItT,EAAKiQ,KAAKC,IAAK,SAASgD,EAAKzQ,GAChC,GAAIyQ,EAAK,KAAMA,EAKfzQ,MAAU8Q,IAAIvX,KAAKyG,EAAK+Q,iBAAiB,QAAS,SAASxQ,GACvD,OACI4L,KAAM5L,EAAEyQ,cAAc,QAAQC,YAC9BvV,MAAO6E,EAAEyQ,cAAc,SAASC,gBAInCjX,aAAO6C,QAAQS,IAAatD,aAAOmE,WAAWb,IAC/CA,EAAS/D,KAAKgE,EAAMyC,QJqV3BvE,IAAK,UACL+C,IAAK,WIxkCN,MAAOxF,MAAKmU,UJilCXrO,IAAK,SIliCEoS,GACJA,IACAlY,KAAKmU,SAAW+D,MJsiCnBzV,IAAK,WACL+C,IAAK,WIplCN,MAAOxF,MAAKqU,aJwlCX5R,IAAK,YACL+C,IAAK,WIrlCN,MAAOxF,MAAKoU,cJylCX3R,IAAK,OACL+C,IAAK,WItlCN,MAAOxF,MAAKmY,OJylCXrS,IAAK,SIhjCDoS,GACDA,IACAlY,KAAKmY,MAAQD,MJojChBzV,IAAK,OACL+C,IAAK,WI5lCN,MAAOxF,MAAK2F,OJ+lCXG,IAAK,SIpjCDoS,GACDA,IACAlY,KAAK2F,MAAQuS,MJwjChBzV,IAAK,aACL+C,IAAK,WIlmCN,MAAOxF,MAAKgU,aJqmCXlO,IAAK,SIxjCKoS,GACPA,IACAlY,KAAKgU,YAAckE,MJ4jCtBzV,IAAK,aACL+C,IAAK,WIxmCN,MAAOxF,MAAKiU,aJ2mCXnO,IAAK,SI5jCKoS,GACPA,IACAlY,KAAKiU,YAAciE,MJgkCtBzV,IAAK,SACL+C,IAAK,WI9mCN,MAAOxF,MAAK4T,SJinCX9N,IAAK,SIhkCCoS,GACHA,IACAlY,KAAK4T,QAAUsE,MJokClBzV,IAAK,SACL+C,IAAK,WIpnCN,MAAOxF,MAAK6T,SJunCX/N,IAAK,SIpkCCoS,GACHA,IACAlY,KAAK6T,QAAUqE,MJwkClBzV,IAAK,aACL+C,IAAK,WI1nCN,MAAOxF,MAAK+T,aJ6nCXjO,IAAK,SIxkCKoS,GACPA,IACAlY,KAAK+T,YAAcmE,MJ4kCtBzV,IAAK,aACL+C,IAAK,WIhoCN,MAAOxF,MAAK8T,aJmoCXhO,IAAK,SI5kCKoS,GACPA,IACAlY,KAAK8T,YAAcoE,OJilCnB5V,IAGX1C,cInuCoB0C,GJuuCf,SAASzC,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIqB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUrD,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXoD,SAAyBpD,EAAIsD,cAAgBF,QAAUpD,IAAQoD,OAAOG,UAAY,eAAkBvD,IAElQ+R,EAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MKnvCjiB1R,EAAAb,EAAA,GLuvCKc,EAAML,EAAuBI,GKrvCbqX,EL2vCN,WK1vCX,QAAAA,GAAYnF,GAASV,EAAAvS,KAAAoY,EACjB,IAAI7T,GAAOvE,KAEP6E,GACAwT,MAAM,EACNC,SAAU,QACVC,gBAAiB,qBACjBC,UAAW,OACXC,SAAU,OACV1Q,OAAQ,KAGZxD,GAAK4P,SAAqBlB,EAE1B1O,EAAK+P,aAAazP,GLghDrB,MA3QA8N,GAAayF,IACT3V,IAAK,eAOLC,MAAO,SKjuCCmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,YLyuC5CxQ,IAAK,OACLC,MAAO,SKpuCPsE,EAAM0R,EAAOC,GACd,GAAIpU,GAAOvE,IAEEuE,GAAKwD,MAGlBC,IAAG4Q,OAAOF,EAAMrY,IAAIwY,UAAU,gCAAgCC,QAE9D,IAAIC,GAAW/Q,GAAG4Q,OAAOF,EAAMrY,IAI3B2Y,EAAaD,EAASE,OAAO,OACZC,KAAK,QAAS,WACX,MAAO,+BAAiC3U,EAAK4U,qBAGhDC,MAAM,UAAW,QACjBA,MAAM,WAAY,YAClBA,MAAM,iBAAkB,OACxBA,MAAM,mBAAoB7U,EAAK0O,QAAQsF,iBACvCa,MAAM,QAAS7U,EAAK0O,QAAQuF,WAC5BY,MAAM,YAAa7U,EAAK0O,QAAQwF,SAyDrD,IAlDAlU,EAAK8U,cAEDC,UAAa,SAAS5T,GAClBsT,EACKO,KAAK,WACF,MAAOhV,GAAKiV,qBAAqBd,EAAOhT,KAE3C+T,aAEAL,MAAM,OAAQ,WACX,MAAO7U,GAAKmV,cAAchB,GAAnB,OAGVU,MAAM,MAAO,WACV,MAAO7U,GAAKmV,cAAchB,GAAnB,MAEVvP,SAAS,KACTiQ,MAAM,UAAW,SACjBA,MAAM,iBAAkB,SAGjCO,UAAa,SAASjU,GAClBsT,EACKO,KAAK,WACF,MAAOhV,GAAKiV,qBAAqBd,EAAOhT,KAE3C+T,aAEAL,MAAM,OAAQ,WACX,MAAO7U,GAAKmV,cAAchB,GAAnB,OAGVU,MAAM,MAAO,WACV,MAAO7U,GAAKmV,cAAchB,GAAnB,MAEVvP,SAAS,KACTiQ,MAAM,UAAW,SACjBA,MAAM,iBAAkB,SAGjCQ,SAAY,SAASlU,GACjBsT,EACKS,aACAtQ,SAAS,KACTiQ,MAAM,UAAW,UAM1B7U,EAAK0O,QAAQoF,KAEb,OAAOM,GACH,IAAK,YACDpU,EAAK8U,aAAaC,UAAUtS,EAC5B,MACJ,KAAK,WACDzC,EAAK8U,aAAaO,SAAS5S,EAC3B,MACJ,KAAK,YACDzC,EAAK8U,aAAaM,UAAU3S,OLstCvCvE,IAAK,mBACLC,MAAO,WK/sCR,GAAI6B,GAAOvE,KACP4G,QAEJ,QAAOrC,EAAK0O,QAAQqF,UAChB,IAAK,MACD1R,EAAI,gBACJ,MACJ,KAAK,QACDA,EAAI,kBACJ,MACJ,KAAK,SACDA,EAAI,mBACJ,MACJ,KAAK,OACDA,EAAI,kBAGZ,MAAOA,MLmtCNnE,IAAK,8BACLC,MAAO,SKjtCgBgW,EAAO1R,GAE/B,GAAIzC,GAAOvE,KAEPkT,EAAYwF,EAAMxF,UAAWnL,QAEjC,QAAOmL,GACH,IAAK,MACDnL,EAAS,SAASf,GACd,MAAO,WAAaA,EAAKmM,KAAO,sBAA6BnM,EAAKtE,MAAQ,UAE9E,MACJ,KAAK,MACDqF,EAAS,SAASf,GACd,MAAO,WAAaA,EAAKA,KAAKmM,KAAO,sBAA6BnM,EAAKA,KAAKtE,MAAQ,UAExF,MACJ,KAAK,QACDqF,EAAS,SAASf,GACd,MAAO,WAAaA,EAAKA,KAAKmM,KAAO,sBAA6BnM,EAAKA,KAAKtE,MAAQ,UAExF,MACJ,KAAK,OACDqF,EAAS,SAASf,GACd,GAAI6S,GAAU,EAId,OAHA7S,GAAKM,QAAQ,SAASC,EAAGnE,GACrByW,GAAW,WAAatS,EAAE4L,KAAO,gCAAuC5L,EAAE0P,OAAS,8BAAqC1P,EAAE2P,OAAS,gBAEhI2C,EAEX,MACJ,KAAK,WACD9R,EAAS,SAASf,GACd,OAAQA,EAAKmM,KAAO,WAAanM,EAAKmM,KAAO,YAAc,YAAcnM,EAAKuM,KAAO,YAAcmF,EAAMzF,QAAQ6G,WAAa,aAAepB,EAAMzF,QAAQ6G,WAAa,MAAQ,wCAA0C9S,EAAK4P,MAAQ,6CAA+C5P,EAAK6P,IAAM,WAM7StS,EAAKwD,OAAaxD,EAAK0O,QAAQlL,QAAUA,KLstCxCtF,IAAK,gBACLC,MAAO,SKntCEgW,GACV,GAAInU,GAAOvE,KACP4G,SAEAmT,EAASxV,EAAKyV,UAAUhS,GAAG4Q,OAAOF,EAAMrY,IAAI,GAAG,GAEnD,QAAOkE,EAAK0O,QAAQqF,UAChB,IAAK,MACD1R,GACIqT,KAASjS,GAAGkS,MAAMC,MAAQJ,EAAOE,KAAO,GAAM,KAC9CG,IAAQpS,GAAGkS,MAAMG,MAAQN,EAAOK,IAAM,GAAM,KAEhD,MACJ,KAAK,QACDxT,GAEIqT,KAASjS,GAAGkS,MAAMC,MAAQJ,EAAOE,KAAQ,KAEzCG,IAAQpS,GAAGkS,MAAMG,MAAQN,EAAOK,IAAM,GAAM,KAEhD,MACJ,KAAK,SACDxT,GACIqT,KAASjS,GAAGkS,MAAMC,MAAQJ,EAAOE,KAAO,GAAM,KAC9CG,IAAQpS,GAAGkS,MAAMG,MAAQN,EAAOK,IAAM,GAAM,KAEhD,MACJ,KAAK,OACDxT,GAEIqT,KAASjS,GAAGkS,MAAMC,MAAQJ,EAAOE,KAAO,GAAM,KAE9CG,IAAQpS,GAAGkS,MAAMG,MAAQN,EAAOK,IAAM,GAAM,MAIxD,MAAOxT,MLstCNnE,IAAK,YACLC,MAAO,SKptCF4X,GACN,GAAIC,IAAQH,IAAK,EAAGH,KAAM,EAO1B,OAJ2ClV,UAAtChB,EAAOuW,EAAKE,yBACfD,EAAMD,EAAKE,0BAIXJ,IAAKG,EAAIH,KAASK,OAAOC,aAAeJ,EAAKjR,YAAiBiR,EAAKK,WAAc,GACjFV,KAAMM,EAAIN,MAASQ,OAAOG,aAAeN,EAAKO,aAAiBP,EAAKQ,YAAc,OLwtCnFrY,IAAK,uBACLC,MAAO,SKrtCSgW,EAAO1R,GACxB,GAAIzC,GAAOvE,IAEXuE,GAAKwW,4BAA4BrC,EAAO1R,EAExC,IAAIJ,GAAIrC,EAAKwD,OAAOf,EAEpB,OAAOJ,ML0tCNnE,IAAK,SACL+C,IAAK,WKr+CN,MAAOxF,MAAK6Z,SL8+CX/T,IAAK,SK/9CCoS,GACHA,IACAlY,KAAK6Z,QAAU3B,MLm+ClBzV,IAAK,eACL+C,IAAK,WKj/CN,MAAOxF,MAAKgb,eLo/CXlV,IAAK,SKn+COoS,GACTA,IACAlY,KAAKgb,cAAgB9C,MLu+CxBzV,IAAK,UACL+C,IAAK,WKv/CN,MAAOxF,MAAKmU,UL0/CXrO,IAAK,SKv+CEoS,GACJA,IACAlY,KAAKmU,SAAW+D,OL4+ChBE,IAGXxY,cKliDoBwY,GLsiDf,SAASvY,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAdhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIqB,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUrD,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXoD,SAAyBpD,EAAIsD,cAAgBF,QAAUpD,IAAQoD,OAAOG,UAAY,eAAkBvD,IAElQ+R,EAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MMljDjiB1R,EAAAb,EAAA,GNsjDKc,EAAML,EAAuBI,GMpjDbka,EN0jDR,WMzjDT,QAAAA,GAAYhI,GAASV,EAAAvS,KAAAib,EACjB,IAAI1W,GAAUvE,KACV6E,GAEAxE,GAAI,OAEJ6a,MAAO,IACPC,OAAQ,IACRC,QACIhB,IAAK,IACLH,KAAM,GACNoB,MAAO,GACPC,OAAQ,IAIZC,OACIpF,QAAQ,EACRlD,SACIuI,SAAU,GACVC,aACIC,OAAQ,IACRpX,SAAU,SAAS0C,MAIvB2U,YACIC,QAAS,IACTtX,SAAU,SAAS0C,MAIvB6U,aACIvX,SAAU,SAAS0C,QAO/B8U,OACIxX,SAAU,SAAS0C,MAMvB+U,OACI1D,MAAY,EACZV,KAAY,eACZW,SAAY,MACZG,SAAY,QAIhBuD,QACI3D,MAAY,EACZC,SAAY,MACZ2D,KAAY,GACZxD,SAAY,OACZD,UAAY,OACZ0D,WAAY,OACZd,QAAa,EAAG,EAAG,EAAG,GACtBe,MAAY,IAIhBC,SACI/D,MAAM,EACNC,SAAU,QACVC,gBAAiB,qBACjBC,UAAW,OACXC,SAAU,OACV1Q,OAAQ,MAIZsU,OACIC,UAAW,OACXjE,MAAM,EACNkE,UAAW,OAAQ,SACnBnD,MAAO,SACPoD,QAAQ,EACRjB,OACIpF,QAAQ,EACR7R,SAAU,MAEdwX,OACI3F,QAAQ,EACR7R,SAAU,OAKlBqP,WAAY,aAGZ3M,MAEIuN,SACAC,MACIvN,KAAM,KACNwN,IAAK,MAET/P,MACIyO,KAAM,OACNzQ,MAAO,QACPuF,KAAM,QAEVuL,UACAC,WAGJgJ,MACIrJ,GACIsJ,MACIC,OAAQ,EACRC,MAAO,GACPX,KAAM,EACNY,QAAS,EACT9U,OAAQhD,OACR+X,UAEA7V,KAAMe,GAAGC,KAAK8U,MACdC,SAAU,GAEdC,OACItF,KAAM,OACNW,SAAU,WAEdD,MAAM,EACN6E,MAAM,EACNjW,KAAM,IAEVoM,GACIqJ,MACIC,OAAQ,EACRC,MAAO,GACPX,KAAM,EACNY,QAAS,EACT9U,OAAQhD,OACR+X,WAEJG,OACItF,KAAM,QACNW,SAAU,WAEdD,MAAM,EACN6E,MAAM,EACNjW,KAAM,KAKdkW,UACI9E,MAAM,EACN8C,OAAQ,KAIhB5W,GAAK4P,SAAalB,EAElB1O,EAAK6Y,WAAWvY,GNi/DnB,MA7aA8N,GAAasI,IACTxY,IAAK,aAWLC,MAAO,SM9yCDmC,GACP,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,QAE7C,IAAIA,GAAU1O,EAAK0O,OAEnB1O,GAAKlE,GAAY4S,EAAQ5S,IAAawE,EAAOxE,GAC7CkE,EAAK2W,MAAYjI,EAAQiI,OAAarW,EAAOqW,MAC7C3W,EAAK4W,OAAYlI,EAAQkI,QAAatW,EAAOsW,OAC7C5W,EAAKoP,WAAYV,EAAQU,YAAa9O,EAAO8O,WAE7CpP,EAAK6W,OAAYpa,aAAOqE,MAAM4N,EAAQmI,OAAQvW,EAAOuW,QACrD7W,EAAKgX,MAAYva,aAAOqE,MAAM4N,EAAQsI,MAAO1W,EAAO0W,OACpDhX,EAAKuX,MAAY9a,aAAOqE,MAAM4N,EAAQ6I,MAAOjX,EAAOiX,OAEpDvX,EAAK8Y,WAAYrc,aAAOwC,UAAUqB,EAAOmC,KAAMiM,EAAQjM,MAEvDzC,EAAK0O,QAAQkK,SAAYnc,aAAOqE,MAAM4N,EAAQkK,SAAUtY,EAAOsY,UAC/D5Y,EAAK0O,QAAQoJ,MAAYrb,aAAOqE,MAAM4N,EAAQoJ,MAAOxX,EAAOwX,OAC5D9X,EAAK0O,QAAQmJ,QAAYpb,aAAOqE,MAAM4N,EAAQmJ,QAASvX,EAAOuX,SAC9D7X,EAAK0O,QAAQ+I,OAAYhb,aAAOqE,MAAM4N,EAAQ+I,OAAQnX,EAAOmX,QAC7DzX,EAAK0O,QAAQwJ,KAAYzb,aAAOwC,UAAUqB,EAAO4X,KAAMxJ,EAAQwJ,SNszC9Dha,IAAK,eACLC,MAAO,SMjzCCmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,QAE7C,IAAIA,GAAU1O,EAAK0O,OAEnB1O,GAAKlE,GAAY4S,EAAQ5S,IAAawE,EAAOxE,GAC7CkE,EAAK2W,MAAYjI,EAAQiI,OAAarW,EAAOqW,MAC7C3W,EAAK4W,OAAYlI,EAAQkI,QAAatW,EAAOsW,OAC7C5W,EAAKoP,WAAYV,EAAQU,YAAa9O,EAAO8O,WAE7CpP,EAAK6W,OAAYpa,aAAOqE,MAAM4N,EAAQmI,OAAQvW,EAAOuW,QACrD7W,EAAKgX,MAAYva,aAAOqE,MAAM4N,EAAQsI,MAAO1W,EAAO0W,OACpDhX,EAAKuX,MAAY9a,aAAOqE,MAAM4N,EAAQ6I,MAAOjX,EAAOiX,OAEpDvX,EAAK8Y,WAAYrc,aAAOwC,UAAUqB,EAAOmC,KAAMiM,EAAQjM,MAEvDzC,EAAK0O,QAAQkK,SAAYnc,aAAOqE,MAAM4N,EAAQkK,SAAUtY,EAAOsY,UAC/D5Y,EAAK0O,QAAQoJ,MAAYrb,aAAOqE,MAAM4N,EAAQoJ,MAAOxX,EAAOwX,OAC5D9X,EAAK0O,QAAQmJ,QAAYpb,aAAOqE,MAAM4N,EAAQmJ,QAASvX,EAAOuX,SAC9D7X,EAAK0O,QAAQ+I,OAAYhb,aAAOqE,MAAM4N,EAAQ+I,OAAQnX,EAAOmX,QAC7DzX,EAAK0O,QAAQwJ,KAAYzb,aAAOwC,UAAUqB,EAAO4X,KAAMxJ,EAAQwJ,SNyzC9Dha,IAAK,OACLC,MAAO,WMnzCR,GAAI6B,GAAOvE,KAEPob,EAAU7W,EAAK6W,OACf/a,EAAUkE,EAAKlE,GACf6a,EAAU3W,EAAK2W,MAAQE,EAAOnB,KAAOmB,EAAOC,MAC5CF,EAAU5W,EAAK4W,OAASC,EAAOhB,IAAMgB,EAAOE,MAEhD/W,GAAK+X,UAAYtU,GAAG4Q,OAAOvY,GAG3BkE,EAAK+X,UAAUzD,UAAU,WAAW7R,SAASsW,OAAOxE,SAEpDvU,EAAKgZ,IAAMvV,GAAG4Q,OAAOvY,GAChB+Y,MAAM,WAAY,YAClBH,OAAO,OACPC,KAAK,QAAS,UACdA,KAAK,QAAS3U,EAAK2W,OACnBhC,KAAK,SAAU3U,EAAK4W,QACpB/B,MAAM,WAAY,WAGvB7U,EAAKgZ,IAAItE,OAAO,QACXA,OAAO,YACHC,KAAK,KAAM,QACfD,OAAO,QACHC,KAAK,QAASgC,GACdhC,KAAK,SAAUiC,GAExB5W,EAAKiZ,KAAOjZ,EAAKgZ,IACJtE,OAAO,KACPC,KAAK,QAAS,gCACdA,KAAK,YAAa,aAAekC,EAAOnB,KAAO,IAAMmB,EAAOhB,IAAM,QN+yC9E3X,IAAK,kBACLC,MAAO,SMxyCIqT,GACZ,MAAO/U,cAAOoH,WAAW,GAAK2N,MNuzC7BtT,IAAK,KACLC,MAAO,SM3yCTiW,EAAWrU,ONozCT7B,IAAK,YACLC,MAAO,SM5yCFD,EAAKC,GACX,GAAI6B,GAAOvE,IAEXgB,cAAO8E,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAI5B1O,EAAK+P,aAAa/P,EAAK0O,YNszCtBxQ,IAAK,aACLC,MAAO,SM/yCDsE,EAAMyW,ONmzCZhb,IAAK,YACL+C,IAAK,WMrtDN,MAAOxF,MAAK0d,YN8tDX5X,IAAK,SMlmDIoS,GACNA,IACAlY,KAAK0d,WAAaxF,MNsmDrBzV,IAAK,KACL+C,IAAK,WMjuDN,MAAiB,SAAbxF,KAAK2d,IACE,IAAM3d,KAAK2d,IAEf3d,KAAK2d,KNouDX7X,IAAK,SMzmDHoS,GACCA,IACAlY,KAAK2d,IAAMzF,MN6mDdzV,IAAK,QACL+C,IAAK,WMvuDN,MAAOxF,MAAK4d,QN0uDX9X,IAAK,SM7mDAoS,GACFA,IACAlY,KAAK4d,OAAS1F,MNinDjBzV,IAAK,SACL+C,IAAK,WM7uDN,MAAOxF,MAAK6d,SNgvDX/X,IAAK,SMjnDCoS,GACHA,IACAlY,KAAK6d,QAAU3F,MNqnDlBzV,IAAK,cACL+C,IAAK,WMnvDN,MAAOxF,MAAK8d,cNsvDXhY,IAAK,SMrnDMoS,GACRA,IACAlY,KAAK8d,aAAe5F,MNynDvBzV,IAAK,eACL+C,IAAK,WMzvDN,MAAOxF,MAAK+d,eNkwDXjY,IAAK,SM/nDOoS,GACTA,IACAlY,KAAK+d,cAAgB7F,MNmoDxBzV,IAAK,aACL+C,IAAK,WMjwDN,GAAIuQ,GAAQ/V,KAAK+T,WAEjB,IAAoB,gBAATgC,GACP,IACI,MAAO/N,IAAGgW,MAAMjI,KAEpB,MAAM0B,GACF,MAAO,UAASrU,GACZ,MAAO2S,QAGZ,IAAoB,WAAhB,mBAAOA,GAAP,YAAAhS,EAAOgS,IACd,MAAO/N,IAAGgW,MAAMC,UAAUC,MAAMnI,INowDnCjQ,IAAK,SM/oDKoS,GACPA,IACAlY,KAAK+T,YAAcmE,MNmpDtBzV,IAAK,SACL+C,IAAK,WMtwDN,MAAOxF,MAAKme,SNywDXrY,IAAK,SMnpDCoS,GACHA,IACAlY,KAAKme,QAAUjG,MNupDlBzV,IAAK,aACL+C,IAAK,WM5wDN,MAAOxF,MAAKoe,aN+wDXtY,IAAK,SMvpDKoS,GACPA,IACAlY,KAAKoe,YAAclG,MN2pDtBzV,IAAK,MACL+C,IAAK,WMlxDN,MAAOxF,MAAKqe,MNqxDXvY,IAAK,SM3pDFoS,GACAA,IACAlY,KAAKqe,KAAOnG,MN+pDfzV,IAAK,OACL+C,IAAK,WMxxDN,MAAOxF,MAAKse,ON2xDXxY,IAAK,SM/pDDoS,GACDA,IACAlY,KAAKse,MAAQpG,MNmqDhBzV,IAAK,UACL+C,IAAK,WM9xDN,MAAOxF,MAAKmU,UNiyDXrO,IAAK,SMnqDEoS,GACJA,IACAlY,KAAKmU,SAAW+D,MNuqDnBzV,IAAK,QACL+C,IAAK,WMpyDN,MAAOxF,MAAKue,QNuyDXzY,IAAK,SMvqDAoS,GACFA,IACAlY,KAAKue,OAASrG,MN2qDjBzV,IAAK,QACL+C,IAAK,WM1yDN,MAAOxF,MAAKwe,QN6yDX1Y,IAAK,SM3qDAoS,GACFA,IACAlY,KAAKwe,OAAStG,MN+qDjBzV,IAAK,aACL+C,IAAK,WMhzDN,MAAOxF,MAAKiU,aNmzDXnO,IAAK,SM/qDKoS,GACPA,IACAlY,KAAKiU,YAAciE,MNmrDtBzV,IAAK,aACL+C,IAAK,WMtzDN,MAAOxF,MAAKgU,aNyzDXlO,IAAK,SMnrDKoS,GACPA,IACAlY,KAAKgU,YAAckE,MNurDtBzV,IAAK,eACL+C,IAAK,WM5zDN,MAAOxF,MAAKgb,eN+zDXlV,IAAK,SMvrDOoS,GACTA,IACAlY,KAAKgb,cAAgB9C,MN2rDxBzV,IAAK,IACL+C,IAAK,WMl0DN,MAAOxF,MAAKye,INq0DX3Y,IAAK,SM3rDJoS,GACEA,IACAlY,KAAKye,GAAKvG,MN+rDbzV,IAAK,IACL+C,IAAK,WMx0DN,MAAOxF,MAAK0e,IN20DX5Y,IAAK,SM/rDJoS,GACEA,IACAlY,KAAK0e,GAAKxG,MNmsDbzV,IAAK,YACL+C,IAAK,WM90DN,MAAOxF,MAAKoU,YNi1DXtO,IAAK,SMnsDIoS,GACNA,IACAlY,KAAKoU,WAAa8D,MNusDrBzV,IAAK,QACL+C,IAAK,WMp1DN,MAAOxF,MAAK2e,QNu1DX7Y,IAAK,SMvsDAoS,GACFA,IACAlY,KAAK2e,OAASzG,MN2sDjBzV,IAAK,OACL+C,IAAK,WM11DN,MAAOxF,MAAK4e,ON61DX9Y,IAAK,SM3sDDoS,GACDA,IACAlY,KAAK4e,MAAQ1G,MN+sDhBzV,IAAK,SACL+C,IAAK,WMh2DN,MAAOxF,MAAK6e,SNm2DX/Y,IAAK,SM/sDCoS,GACHA,IACAlY,KAAK6e,QAAU3G,MNmtDlBzV,IAAK,QACL+C,IAAK,WMt2DN,MAAOxF,MAAK8e,QNy2DXhZ,IAAK,SMntDAoS,GACFA,IACAlY,KAAK8e,OAAS5G,MNutDjBzV,IAAK,UACL+C,IAAK,WM52DN,MAAOxF,MAAK+e,UN+2DXjZ,IAAK,SMvtDEoS,GACJA,IACAlY,KAAK+e,SAAW7G,ON4tDhB+C,IAGXrb,cMvpEoBqb,GN2pEf,SAASpb,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MOrqEjiB1R,EAAAb,EAAA,GPyqEKc,EAAML,EAAuBI,GOvqEbie,EP6qET,WO5qER,QAAAA,GAAY/L,EAASyF,EAAOwC,EAAOC,GAAQ5I,EAAAvS,KAAAgf,EACvC,IAAIza,GAAOvE,KAEP6E,GACIuO,GACIsJ,MACIC,OAAQ,EACRC,MAAO,GACPX,KAAM,EACNY,QAAS,EACT9U,OAAQhD,OACR+X,UAEA7U,KAAMlD,OACNiY,SAAU,GAEdC,OACItF,KAAM,OACNW,SAAU,WAEdD,MAAM,EACN6E,MAAM,EACNjW,KAAM,IAEVoM,GACIqJ,MACIC,OAAQ,EACRC,MAAO,GACPX,KAAM,EACNY,QAAS,EACT9U,OAAQhD,OACR+X,WAEJG,OACItF,KAAM,QACNW,SAAU,WAEdD,MAAM,EACN6E,MAAM,EACNjW,KAAM,IAIlB1C,GAAK4P,SAAalB,EAClB1O,EAAK0a,OAAavG,EAClBnU,EAAKqZ,OAAa1C,EAClB3W,EAAKsZ,QAAa1C,EAElB5W,EAAK+P,aAAazP,GP45ErB,MAtOA8N,GAAaqM,IACTvc,IAAK,eAQLC,MAAO,SOllECmC,GACT,GAAIN,GAAOvE,IAUX,IARAuE,EAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK6O,EAAI7O,EAAKmU,MAAMtF,EACpB7O,EAAK8O,EAAI9O,EAAKmU,MAAMrF,EAEpB9O,EAAKyC,KAAazC,EAAKmU,MAAMvD,WAC7B5Q,EAAK2a,iBAAmB3a,EAAKmU,MAAMzF,QAAQ/L,UAEf,YAAxB3C,EAAKmU,MAAMxF,UAAyB,CACpC,GAAIiM,GAASnX,GAAGC,KAAK+V,QAChBoB,QAAQ7a,EAAKmU,MAAMzF,QAAQoM,SAAU9a,EAAKmU,MAAMzF,QAAQqM,SACxDpB,OAAO,EAAG3Z,EAAK2W,OAEpB3W,GAAKgb,MAAQvX,GAAGuV,IAAId,OACfuB,MAAMmB,GACNK,OAAO,UACPC,WAA0C1a,SAA/BR,EAAK0O,QAAQG,EAAEsJ,KAAK3U,OAAuBC,GAAGC,KAAKF,OAAO,SAAWxD,EAAK0O,QAAQG,EAAEsJ,KAAK3U,QAEpG2X,MAAMnb,EAAK0O,QAAQG,EAAEsJ,KAAKzU,MAAQ1D,EAAK0O,QAAQG,EAAEsJ,KAAKE,MAAOrY,EAAK0O,QAAQG,EAAEsJ,KAAKM,cAItFzY,GAAKgb,MAAQvX,GAAGuV,IAAId,OACfuB,MAAMzZ,EAAK6O,GACXoM,OAAO,UACPG,YAAYpb,EAAK0O,QAAQG,EAAEsJ,KAAKG,SAChC6C,MAAMnb,EAAK0O,QAAQG,EAAEsJ,KAAKE,OAC1BgD,WAAWrb,EAAK0O,QAAQG,EAAEsJ,KAAKI,OAAOxZ,OAAS,EAAIiB,EAAK0O,QAAQG,EAAEsJ,KAAKI,OAAS/X,QAChF0a,WAAkC,cAAvBlb,EAAK0O,QAAQG,EAAEnM,KAAuB1C,EAAK0O,QAAQG,EAAEsJ,KAAK3U,QAAUC,GAAGC,KAAKF,OAAO,YAAcxD,EAAK0O,QAAQG,EAAEsJ,KAAK3U,OAASxD,EAAK0O,QAAQG,EAAEsJ,KAAK3U,OAAShD,QAKvKR,EAAK2a,iBACL3a,EAAKsb,MAAQ7X,GAAGuV,IAAId,OACfuB,MAAMzZ,EAAK8O,GACXmM,OAAO,QACPE,MAAMnb,EAAK0O,QAAQI,EAAEqJ,KAAKE,MAA8B,cAAvBrY,EAAK0O,QAAQI,EAAEpM,KAAuB1C,EAAK0O,QAAQI,EAAEqJ,KAAK3U,QAAUC,GAAGC,KAAKF,OAAO,YAAcxD,EAAK0O,QAAQI,EAAEqJ,KAAK3U,OAASxD,EAAK0O,QAAQI,EAAEqJ,KAAK3U,OAAShD,QAC5L4a,YAAYpb,EAAK0O,QAAQI,EAAEqJ,KAAKG,SAChC+C,WAAWrb,EAAK0O,QAAQI,EAAEqJ,KAAKI,OAAOxZ,OAAS,EAAIiB,EAAK0O,QAAQI,EAAEqJ,KAAKI,OAAS/X,QAErFR,EAAKsb,MAAQ7X,GAAGuV,IAAId,OACfuB,MAAMzZ,EAAK8O,GACXmM,OAAO,QACPE,MAAMnb,EAAK0O,QAAQI,EAAEqJ,KAAKE,OAC1B+C,YAAYpb,EAAK0O,QAAQI,EAAEqJ,KAAKG,SAChC+C,WAAWrb,EAAK0O,QAAQI,EAAEqJ,KAAKI,OAAOxZ,OAAS,EAAIiB,EAAK0O,QAAQI,EAAEqJ,KAAKI,OAAS/X,QAChF0a,WAAkC,cAAvBlb,EAAK0O,QAAQI,EAAEpM,KAAuB1C,EAAK0O,QAAQI,EAAEqJ,KAAK3U,QAAUC,GAAGC,KAAKF,OAAO,YAAcxD,EAAK0O,QAAQI,EAAEqJ,KAAK3U,OAASxD,EAAK0O,QAAQI,EAAEqJ,KAAK3U,OAAShD;AAIvJ,YAAxBR,EAAKmU,MAAMxF,YAEP3O,EAAK0O,QAAQG,EAAE8J,MACf3Y,EAAKgb,MAAMO,eAAevb,EAAK4W,QAC1B4E,cAAc,GAGnBxb,EAAK0O,QAAQI,EAAE6J,MACf3Y,EAAKsb,MAAMC,eAAevb,EAAK2W,OAC1B6E,cAAc,GAI3B,IAAIC,GAAa,SAASC,GACtB,GAAIC,GAAM/Z,KAAK+Z,IAAID,EAAQ9Z,KAAKga,GAAK,KAAKC,QAAQ,GAClD,OAAc,IAAPF,EAAW,SAAYA,EAAM,EAAI,QAAU,OAGlDG,EAAS,SAASJ,GAClB,GAAIC,GAAM/Z,KAAK+Z,IAAID,EAAQ9Z,KAAKga,GAAK,KAAKC,QAAQ,GAClD,OAAO,GAAIF,GAGXI,EAAQ,SAASL,GACjB,MAAO,MAAO,KAAOA,EAAQ,KAAOA,EAAQ,EAAI,EAAI,IAIxD1b,GAAKmU,MAAM8E,KAAKvE,OAAO,KAClBC,KAAK,QAAS,qBACdA,KAAK,YAAa,eAAkB3U,EAAK4W,OAAU,KACnD5a,KAAKgE,EAAKgb,OAGfhb,EAAKmU,MAAM6E,IAAI3E,OAAO,sBAAsBC,UAAU,QACjDO,MAAM,cAAe4G,EAAWzb,EAAK0O,QAAQG,EAAEsJ,KAAKC,SACpDzD,KAAK,IAAKoH,EAAM/b,EAAK0O,QAAQG,EAAEsJ,KAAKC,SACpCzD,KAAK,IAAK,GACVA,KAAK,KAAM,SACXA,KAAK,KAAMmH,EAAO9b,EAAK0O,QAAQG,EAAEsJ,KAAKC,SACtCzD,KAAK,YAAa,UAAY3U,EAAK0O,QAAQG,EAAEsJ,KAAKC,OAAS,KAEhEpY,EAAKmU,MAAM6E,IAAI3E,OAAO,sBACjBK,OAAO,QACPC,KAAK,QAAS,0BACdA,KAAK,KAAM,SACXA,KAAK,KAAM,UACXA,KAAK,IAAK3U,EAAK2W,MAAQ,IACvBhC,KAAK,IAAK,IACVE,MAAM,cAAe,SACrBzB,KAAKpT,EAAK0O,QAAQG,EAAE6J,MAAMtF,MAG1BpT,EAAK0O,QAAQG,EAAEiF,OAChB9T,EAAKmU,MAAM6E,IAAI3E,OAAO,8BAA8BQ,MAAM,UAAW,QAChE7U,EAAK0O,QAAQG,EAAE8J,MAAM3Y,EAAKmU,MAAM6E,IAAI1E,UAAU,kCAAkCO,MAAM,UAAW,SAG9E,YAAxB7U,EAAKmU,MAAMxF,YACX3O,EAAKmU,MAAM8E,KAAKvE,OAAO,KAClBC,KAAK,QAAS,qBACd3Y,KAAKgE,EAAKsb,OAEftb,EAAKmU,MAAM6E,IAAI3E,OAAO,sBACjBK,OAAO,QACPC,KAAK,QAAS,0BACdA,KAAK,IAAK,KACVA,KAAK,KAAM,OACXE,MAAM,cAAe,OACrBzB,KAAKpT,EAAK0O,QAAQI,EAAE4J,MAAMtF,MAE1BpT,EAAK0O,QAAQI,EAAEgF,OAChB9T,EAAKmU,MAAM6E,IAAI3E,OAAO,8BAA8BQ,MAAM,UAAW,QAChE7U,EAAK0O,QAAQI,EAAE6J,MAAM3Y,EAAKmU,MAAM6E,IAAI1E,UAAU,kCAAkCO,MAAM,UAAW,aPsiE7G3W,IAAK,SACLC,MAAO,SOliEL0Q,EAAGC,EAAGlK,GACT,GAAI5E,GAAOvE,IAEX,KAAKgB,aAAO6C,QAAQuP,GAAI,CAGpB,GAFA7O,EAAK6O,EAAIA,EAEmB,YAAxB7O,EAAKmU,MAAMxF,UAAyB,CACpC,GAAIiM,GAASnX,GAAGC,KAAK+V,QAChBoB,QAAQ7a,EAAKmU,MAAMzF,QAAQoM,SAAU9a,EAAKmU,MAAMzF,QAAQqM,SACxDpB,OAAO,EAAG3Z,EAAK2W,OAEpB3W,GAAKgb,MAAMvB,MAAMmB,OAEjB5a,GAAKgb,MAAMvB,MAAMzZ,EAAK6O,EAG1B7O,GAAKmU,MAAM8E,KAAK5E,OAAO,sBAAsBa,aAAatQ,SAASA,GAAU5I,KAAKgE,EAAKgb,OAE3F,IAAKve,aAAO6C,QAAQwP,GAAI,CAGpB,GAFA9O,EAAK8O,EAAIA,EAEmB,YAAxB9O,EAAKmU,MAAMxF,UACX,MAEA3O,GAAKsb,MAAM7B,MAAMzZ,EAAK8O,GAG1B9O,EAAKmU,MAAM8E,KAAK5E,OAAO,sBAAsBa,aAAatQ,SAASA,GAAU5I,KAAKgE,EAAKsb,WPoiE1Fpd,IAAK,OACLC,MAAO,WOhiER,GAAI6B,GAAOvE,IAEXuE,GAAKgc,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,QPsiE3B5Q,IAAK,IACL+C,IAAK,WOjzEN,MAAOxF,MAAKye,IP4zEX3Y,IAAK,SOnxEJoS,GACEA,IACAlY,KAAKye,GAAKvG,MPuxEbzV,IAAK,IACL+C,IAAK,WO/zEN,MAAOxF,MAAK0e,IPk0EX5Y,IAAK,SOvxEJoS,GACEA,IACAlY,KAAK0e,GAAKxG,MP2xEbzV,IAAK,QACL+C,IAAK,WOr0EN,MAAOxF,MAAKwgB,QPw0EX1a,IAAK,SO3xEAoS,GACFA,IACAlY,KAAKwgB,OAAStI,MP+xEjBzV,IAAK,QACL+C,IAAK,WO30EN,MAAOxF,MAAKygB,QP80EX3a,IAAK,SO/xEAoS,GACFA,IACAlY,KAAKygB,OAASvI,MPmyEjBzV,IAAK,QACL+C,IAAK,WOj1EN,MAAOxF,MAAKif,QPo1EXnZ,IAAK,SOnyEAoS,GACFA,IACAlY,KAAKif,OAAS/G,MPuyEjBzV,IAAK,UACL+C,IAAK,WOv1EN,MAAOxF,MAAKmU,UP01EXrO,IAAK,SOvyEEoS,GACJA,IACAlY,KAAKmU,SAAW+D,MP2yEnBzV,IAAK,QACL+C,IAAK,WO71EN,MAAOxF,MAAK4d,QPg2EX9X,IAAK,SO3yEAoS,GACFA,IACAlY,KAAK4d,OAAS1F,MP+yEjBzV,IAAK,SACL+C,IAAK,WOn2EN,MAAOxF,MAAK6d,SPs2EX/X,IAAK,SO/yECoS,GACHA,IACAlY,KAAK6d,QAAU3F,MPmzElBzV,IAAK,OACL+C,IAAK,WOz2EN,MAAOxF,MAAK0F,OP42EXI,IAAK,SOnzEDoS,GACDA,IACAlY,KAAK0F,MAAQwS,OPwzEb8G,IAGXpf,cOh9EoBof,GPo9Ef,SAASnf,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MQ99EjiB1R,EAAAb,EAAA,GRk+EKc,EAAML,EAAuBI,GQh+Eb2f,ERs+EP,WQr+EV,QAAAA,GAAYzN,EAASyF,GAAOnG,EAAAvS,KAAA0gB,EACxB,IAAInc,GAAOvE,KAEP6E,GACAwT,MAAY,EACZC,SAAY,MACZ2D,KAAY,GACZxD,SAAY,OACZD,UAAY,OACZ0D,WAAY,OACZd,QAAa,EAAG,EAAG,EAAG,GACtBe,MAAY,GACZ5B,KAAY,EAKhBhW,GAAK4P,SAAalB,EAClB1O,EAAK0a,OAAavG,EAElBnU,EAAK+P,aAAazP,GRwmGrB,MA1nBA8N,GAAa+N,IACTje,IAAK,eAOLC,MAAO,SQl6ECmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAKoc,SAAapc,EAAKmU,MAAMwC,MAC7B3W,EAAKqc,UAAarc,EAAKmU,MAAMyC,OAC7B5W,EAAKyC,KAAazC,EAAKmU,MAAMvD,cRq6E5B1S,IAAK,SACLC,MAAO,SQn6ELsE,GACH,GAAIzC,GAAOvE,IAIX,IAFAuE,EAAKyC,KAAOA,EAERzC,EAAK0O,QAAQoF,KAAM,CAEnB9T,EAAKmU,MAAM6E,IAAI1E,UAAU,gDAAgDC,QAK7C,QAAxBvU,EAAKmU,MAAMxF,YACX3O,EAAKyC,KAAOzC,EAAKyC,KAAKzC,EAAKyC,KAAKT,OAAO,SAAC7F,EAAGD,EAAG2C,EAAGoD,GAAV,MAAgBA,GAAE9F,GAAG4C,OAAS7C,EAAE6C,OAAS5C,EAAI0C,GAAG,IAK3F,IAAIkZ,GAAY/X,EAAKmU,MAAM6E,IACtBtE,OAAO,KACPC,KAAK,QAAS,8CAInB3U,GAAKsc,KAAOvE,EAAUzD,UAAU,4CAC3B7R,KAAKzC,EAAKyC,MACV8Z,QAAQ7H,OAAO,KACfC,KAAK,QAAS,0CACdA,KAAK,WAAY,SAAS3R,GAAK,MAAOA,GAAE,cACxC2R,KAAK,cAAe,SAAS3R,GAAK,MAAOA,GAAA,SAG9ChD,EAAKsc,KAAK5H,OAAO,QACZC,KAAK,QAAS,0CACdA,KAAK,QAAS3U,EAAK0O,QAAQgJ,MAC3B/C,KAAK,SAAU3U,EAAK0O,QAAQgJ,MAC5B/C,KAAK,IAAK3U,EAAK0O,QAAQgJ,MACvB/C,KAAK,OAAQ,SAAS3R,GAAI,MAAOA,GAAEwO,OAASxO,EAAE,GAAGwO,QAEjDqD,MAAM,SAAU,WAErB7U,EAAKsc,KAAK5H,OAAO,QACZC,KAAK,QAAS,GACdA,KAAK,SAAU3U,EAAK0O,QAAQgJ,MAC5B/C,KAAK,IAAK3U,EAAK0O,QAAQgJ,MACvB/C,KAAK,IAAK,GACVA,KAAK,UAAW,GAChBE,MAAM,SAAU,WAErB7U,EAAKsc,KAAK5H,OAAO,QACZC,KAAK,QAAS,0CACdA,KAAK,IAAK3U,EAAK0O,QAAQgJ,KAAO,GAC9B/C,KAAK,IAAK3U,EAAK0O,QAAQgJ,MACvB7C,MAAM,YAAa7U,EAAK0O,QAAQwF,UAChCW,MAAM,cAAe7U,EAAK0O,QAAQiJ,YAClC9C,MAAM,OAAQ7U,EAAK0O,QAAQuF,WAC3BY,MAAM,SAAU,WAEhBzB,KAAK,SAASpQ,GAAK,MAA+B,OAAxBhD,EAAKmU,MAAMxF,UAAqB3L,EAAE0O,MAAQ1O,EAAE4L,MAG3E,IAAI4N,GAAU,SAASF,GACnB,MAAOA,GAAKrG,yBAEZwG,EAAQ,SAASH,GACjB,GAAII,GAAKjZ,GAAG4Q,OAAOiI,GAAM3H,KAAK,aAAatT,MAAM,IACjD,QACIwN,EAAGzK,WAAWsY,EAAG,GAAGta,QAAQ,aAAc,KAC1C0M,EAAG1K,WAAWsY,EAAG,GAAGta,QAAQ,IAAK,OAIrCC,EAAI,EACJsa,EAAQ3c,EAAKmU,MAAM6E,IAAI1E,UAAU,0BAA0B,GAC3DiB,EAAaiH,EAAQG,EAAM,IAAI/F,OAC/BgG,EAAchb,KAAKib,OAAO7c,EAAKqc,UAAYrc,EAAK0O,QAAQmI,OAAO,GAAK7W,EAAK0O,QAAQmI,OAAO,KAAOtB,EAAavV,EAAK0O,QAAQkJ,OAEzH5X,GAAK0O,QAAQkJ,MAAQrC,GAAYqH,GAErC,IAAIE,GAAc,GAAIne,OAAMiD,KAAKib,MAAMF,EAAM5d,OAAS6d,GAEtDD,GAAM5Z,QAAQ,SAAUlE,EAAGke,GACvB,GAAIC,GAAMpb,KAAKib,MAAME,EAAIH,GACrBjG,EAAQ6F,EAAQ3d,GAAG8X,OACCnW,QAApBsc,EAAYE,IAAqBrG,EAAQmG,EAAYE,MAAMF,EAAYE,GAAOrG,KAGxD,UAAzB3W,EAAK0O,QAAQqF,SACd/T,EAAKsc,KAAK3H,KAAK,YAAa,SAAS3R,EAAGnE,GACpC,GAAIA,EAAI,EAAG,CACP,GAAIyd,GAAQK,EAAM9d,GACdoe,EAAWN,EAAM9d,EAAI,GACrBqe,EAAOtb,KAAKib,OAAOJ,EAAMQ,GAASpO,EAAI2N,EAAQS,GAAStG,MAAQ3W,EAAK0O,QAAQkJ,MAAQ4E,EAAQF,GAAM3F,MAAQ3W,EAAK0O,QAAQmI,OAAO,IAAM7W,EAAKoc,SAE7I,OADIc,GAAO,GAAG7a,IACP,cAAgB6a,EAAO,EAAIld,EAAK0O,QAAQmI,OAAO,GAAK4F,EAAMQ,GAASpO,EAAI2N,EAAQS,GAAStG,MAAQ3W,EAAK0O,QAAQkJ,OAAS,KAAO5X,EAAKqc,UAAYrc,EAAK0O,QAAQmI,OAAO,GAAKtB,EAAalT,GAAKkT,EAAavV,EAAK0O,QAAQkJ,QAAU,IAEpO,MAAO,aAAe5X,EAAK0O,QAAQmI,OAAO,GAAK,KAAO7W,EAAKqc,UAAYrc,EAAK0O,QAAQmI,OAAO,GAAKtB,GAAc,MAGtF,QAAzBvV,EAAK0O,QAAQqF,SACpB/T,EAAKsc,KAAK3H,KAAK,YAAa,SAAS3R,EAAGnE,GACpC,GAAIme,GAAMpb,KAAKib,MAAMhe,EAAI+d,EAEzB,IAAI/d,EAAI,EAAG,CACP,GAAIse,GAASvb,KAAKib,OAAOhe,EAAI,GAAK+d,GAE9BK,GADQN,EAAM9d,GACH8d,EAAM9d,EAAI,GACzB,OAAO,cAAgBme,EAAMG,EAAUL,EAAYE,GAAOhd,EAAK0O,QAAQkJ,MAAQ6E,EAAMQ,GAASpO,EAAK4N,EAAMQ,GAASpO,GAAK,KAAOmO,EAAMG,EAASnd,EAAK0O,QAAQmI,OAAO,GAAK4F,EAAMQ,GAASnO,EAAI0N,EAAQS,GAASrG,OAAS5W,EAAK0O,QAAQkJ,OAAS,IAGzO,MAAO,aAAe5X,EAAK0O,QAAQmI,OAAO,GAAK,IAAM7W,EAAK0O,QAAQmI,OAAO,GAAK,MAEtD,SAAzB7W,EAAK0O,QAAQqF,SACpB/T,EAAKsc,KAAK3H,KAAK,YAAa,SAAS3R,EAAGnE,GACpC,GAAIme,GAAMpb,KAAKib,MAAMhe,EAAI+d,EACzB,IAAI/d,EAAI,EAAG,CACP,GAAIse,GAASvb,KAAKib,OAAOhe,EAAI,GAAK+d,GAE9BK,GADQN,EAAM9d,GACH8d,EAAM9d,EAAI,GACzB,OAAO,cAAgBme,EAAMG,EAAUV,EAAMQ,GAASpO,EAAI7O,EAAK0O,QAAQkJ,MAAQkF,EAAYE,GAAQP,EAAMQ,GAASpO,GAAK,KAAOmO,EAAMG,EAASnd,EAAK0O,QAAQmI,OAAO,GAAK4F,EAAMQ,GAASnO,EAAI0N,EAAQS,GAASrG,OAAS5W,EAAK0O,QAAQkJ,OAAS,IAGzO,MAAO,cAAgB5X,EAAKoc,SAAWpc,EAAK0O,QAAQmI,OAAO,GAAKiG,EAAYE,IAAQ,IAAMhd,EAAK0O,QAAQmI,OAAO,GAAK,MAG3H7W,EAAKsc,KAAK3H,KAAK,YAAa,SAAS3R,EAAGnE,GACpC,GAAIA,EAAI,EAAG,CACP,GAAIyd,GAAQK,EAAM9d,GACdoe,EAAWN,EAAM9d,EAAI,GACrBqe,EAAOtb,KAAKib,OAAOJ,EAAMQ,GAASpO,EAAI2N,EAAQS,GAAStG,MAAQ3W,EAAK0O,QAAQkJ,MAAQ4E,EAAQF,GAAM3F,MAAQ3W,EAAK0O,QAAQmI,OAAO,IAAM7W,EAAKoc,SAG7I,OAFIc,GAAO,GAAG7a,IAEP,cAAgB6a,EAAO,EAAIld,EAAK0O,QAAQmI,OAAO,GAAM4F,EAAMQ,GAASpO,EAAI2N,EAAQS,GAAStG,MAAQ3W,EAAK0O,QAAQkJ,OAAU,KAAO5X,EAAK0O,QAAQmI,OAAO,GAAKxU,GAAKkT,EAAavV,EAAK0O,QAAQkJ,QAAU,IAGxM,MAAO,aAAe5X,EAAK0O,QAAQmI,OAAO,GAAK,IAAM7W,EAAK0O,QAAQmI,OAAO,GAAK,UR85E7F3Y,IAAK,OACLC,MAAO,WQ74ER,GAAI6B,GAAOvE,IAEXuE,GAAKgc,OAAOhc,EAAKmU,MAAMvD,eRu5EtB1S,IAAK,gCACLC,MAAO,SQj5EkBgW,GAE1B,GAAInU,GAAOvE,KAEP2hB,EAAsBjJ,EAAM6C,MAAMtI,QAElC2O,GADsBlJ,EAAM6C,MAAMpF,OACZwL,EAAalG,YAAYnX,UAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAsBpJ,EAAMoD,MAAMxX,QAEtCC,GAAKwd,kBAEDjG,MAAS,SAAS+E,GACV7f,aAAOmE,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAM6gB,EAG/B,IAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,MACrBmW,GAAS,EACT6L,EAAUzd,EAAKyC,KACfib,EAAcja,GAAG1B,IAAI0b,EAAQlK,IAAI,SAASvQ,GAC1C,MAAQA,GAAE4O,OAAU,EAAI,IAQ5B,IAAoC,SAAhC4C,EAASG,KAAK,eACdH,EAASG,KAAK,eAAe,GAC7BH,EAASK,MAAM,UAAW,SACvB,CACH,GAAkB,EAAd6I,EAAiB,MACrBlJ,GAASG,KAAK,eAAe,GAC7BH,EAASK,MAAM,UAAW,OAC1BjD,GAAS,EAIb,GAAI+L,KACJxJ,GAAMvD,WAAW7N,QAAQ,SAAS5B,GAC1BA,EAAM,aAAemb,EAAK,cAAanb,EAAMyQ,OAASA,GACtDzQ,EAAMyQ,QAAQ+L,EAAQxa,KAAKhC,KAGnCgT,EAAMyJ,aAAaD,GACnBxJ,EAAM+D,KAAK8D,OAAO7H,EAAMtF,EAAGsF,EAAMrF,EAAG,KACpCqF,EAAM6H,OAAO2B,GAGTxJ,EAAMzF,QAAQkK,SAAS9E,OACvBK,EAAM0J,UAAUhD,OAAO1G,EAAMtF,EAAEgM,UAC/B1G,EAAM2J,UAAUjD,OAAO1G,EAAMrF,EAAE+L,UAC/B1G,EAAM6E,IAAI3E,OAAO,yCAAyCa,aAAatQ,SAAS,KAAK5I,KAAKmY,EAAM4J,eAChG5J,EAAM6J,eAAeL,IAIzBxJ,EAAM8J,gBACN9J,EAAM+J,qBAGVnJ,UAAa,SAASuH,GACd7f,aAAOmE,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAM6gB,EAGnC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAI/BuE,GAAKoe,kBAAkBD,IAG3B9I,SAAY,SAASiH,GACb7f,aAAOmE,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAM6gB,EAGlC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAI/BuE,GAAKqe,oBAAoBF,KAK7Bne,EAAK0O,QAAQoF,MACb9T,EAAKsc,KAAKgC,GAAGte,EAAKwd,qBR25ErBtf,IAAK,oCACLC,MAAO,SQp5EsBgW,EAAOoK,EAAMC,EAAKC,EAAaC,GAE7D,GAAI1e,GAAOvE,KAEP2hB,EAAsBjJ,EAAM6C,MAAMtI,QAElC2O,GADsBlJ,EAAM6C,MAAMpF,OACZwL,EAAalG,YAAYnX,UAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAsBpJ,EAAMoD,MAAMxX,SAElC4O,EAAYwF,EAAMxF,UAElBgQ,EAAmC,OAAbhQ,EAAsB,EAAIwF,EAAMzF,QAAQkQ,YAC9DC,EAAmC,OAAblQ,EAAsBwF,EAAMzF,QAAQoQ,OAAS3K,EAAMzF,QAAQqQ,YACjFC,EAAmC,OAAbrQ,EAAsB,EAAIwF,EAAMzF,QAAQkQ,YAC9DK,EAAmC,OAAbtQ,EAA6C,IAAvBwF,EAAMzF,QAAQoQ,OAA2C,IAA5B3K,EAAMzF,QAAQqQ,WAE3F/e,GAAKwd,kBAEDjG,MAAS,SAAS+E,GACV7f,aAAOmE,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAM6gB,EAG/B,IAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,MACrBmW,GAAS,EACT6L,EAAUzd,EAAKyC,KACfib,EAAcja,GAAG1B,IAAI0b,EAAQlK,IAAI,SAASvQ,GAC1C,MAAQA,GAAE4O,OAAU,EAAI,IAQ5B,IAAoC,SAAhC4C,EAASG,KAAK,eACdH,EAASG,KAAK,eAAe,GAC7BH,EAASG,KAAK,UAAW,WACtB,CACH,GAAkB,EAAd+I,EAAiB,MACrBlJ,GAASG,KAAK,eAAe,GAC7BH,EAASG,KAAK,UAAW,OACzB/C,GAAS,EAKb5R,EAAKsc,KAAKzc,KAAK,WACP4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAAsD,QAAvC7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAC9ElR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAIxCR,EAAM+K,gBAAgBrf,KAAK,WACnB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAC1C7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAMxCR,EAAMqK,IAAIrgB,MAAM,SAAS6E,GAErB,MADIA,GAAE,aAAesZ,EAAK,cAAatZ,EAAE4O,OAASA,GAC1C5O,EAAE4O,OAAU5O,EAAE7E,MAAQ,IAGlCogB,EAAOA,EAAK9b,KAAK0R,EAAMqK,IAAIf,IAE3Bc,EAAKrJ,aACAtQ,SAAS,KACTua,UAAU,IAAK,SAASnc,GACrB,GAAIoc,GAAc3b,GAAG2b,YAAYjL,EAAMsK,YAAazb,EAIpD,OADAmR,GAAMsK,YAAcW,EAAY,GACzB,SAAS3a,GACZ,MAAOia,GAAIU,EAAY3a,OAI9BkQ,KAAK,SAAU,SAIxBI,UAAa,SAASuH,GACd7f,aAAOmE,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAM6gB,EAGnC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAK/B,IAFAuE,EAAKoe,kBAAkBD,GAEnBA,EAAexJ,KAAK,eAAgB,CAEpC3U,EAAKsc,KAAKzc,KAAK,WACP4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAAe7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAC9ElR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCR,EAAM+K,gBAAgBrf,KAAK,WACnB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAC1C7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,QAIxC,IAAIH,GAAW/Q,GAAG4Q,OAAO,kBAAoBiI,EAAK,YAAc,KAEhE9H,GACKU,aACItQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYI,GACZD,YAAYE,MAQjC5J,SAAY,SAASiH,GACb7f,aAAOmE,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAM6gB,EAGlC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAG/BuE,GAAKqe,oBAAoBF,GAIrBne,EAAKsc,KAAKzc,KAAK,WACP4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAAe7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAC9ElR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCR,EAAM+K,gBAAgBrf,KAAK,WACnB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAC1C7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,QAIxC,IAAIH,GAAW/Q,GAAG4Q,OAAO,kBAAoBiI,EAAK,YAAc,KAEhE9H,GACKU,aACItQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYD,GACZI,YAAYF,MAQjC7e,EAAK0O,QAAQoF,MACb9T,EAAKsc,KAAKgC,GAAGte,EAAKwd,qBRu4ErBtf,IAAK,+BACLC,MAAO,SQh4EiBgW,GAEzB,GAAInU,GAAOvE,KAEP2hB,EAAsBjJ,EAAM6C,MAAMtI,QAIlC6O,GAHsBpJ,EAAM6C,MAAMpF,OACZwL,EAAalG,YAAYnX,SACzBqd,EAAahG,WAAWrX,SACxBoU,EAAMoD,MAAMxX,SAEtCC,GAAKwd,kBAEDjG,MAAS,SAAS+E,GACV7f,aAAOmE,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAM6gB,EAG/B,IAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,MACrBmW,GAAS,EACT0N,EAAanL,EAAMvD,WACnB6M,EAAUzd,EAAKyC,KACfib,EAAcja,GAAG1B,IAAI0b,EAAQlK,IAAI,SAASvQ,GAC1C,MAAQA,GAAE4O,OAAU,EAAI,KAGxB2N,KACAC,KACA/c,IAMJ,IAAoC,SAAhC+R,EAASG,KAAK,eACdH,EAASG,KAAK,cAAe,QAC7BH,EAASK,MAAM,UAAW,WACvB,CACH,GAAkB,EAAd6I,EAAiB,MACrBlJ,GAASG,KAAK,cAAe,SAC7BH,EAASK,MAAM,UAAW,OAC1BjD,GAAS,EAIb5R,EAAKyC,KAAKM,QAAQ,SAASC,EAAGnE,GACtBmE,EAAE4O,QACF4N,EAAarc,KAAKH,EAAE0O,OACpB1O,EAAE0O,OAAS4K,EAAK5K,QAChB1O,EAAE4O,OAASA,GACX5O,EAAE4O,QACF2N,EAAUpc,KAAKH,EAAE0O,SAGzB4N,EAAWvc,QAAQ,SAAUC,GACzB,GAAIyc,MACAC,IASJ,IARA1c,EAAED,QAAQ,SAAUE,GAChBsc,EAAUxc,QAAQ,SAAU4c,EAAG9gB,GACvB8gB,GAAK1c,EAAEyO,QACHzO,EAAEC,GAAK,EAAGuc,EAAWtc,MAAMwc,EAAG1c,EAAGA,EAAGpE,IACnC6gB,EAAWvc,MAAMwc,EAAG1c,EAAGA,EAAGpE,UAItCsV,EAAMyL,QAAS,CAChB,GAAIH,EAAW1gB,OAAS,EAAG,CACnB0gB,EAAW,GAAGE,EAAEvc,GAAK,IAAGqc,EAAW,GAAGE,EAAEvc,GAAK,EACjD,KAAK,GAAIvE,GAAI,EAAGA,EAAI4gB,EAAW1gB,OAAQF,IACnC4gB,EAAW5gB,GAAG8gB,EAAEvc,GAAKqc,EAAW5gB,EAAE,GAAG8gB,EAAEvc,GAAKqc,EAAW5gB,EAAE,GAAG8gB,EAAEzc,GAGtE,GAAIwc,EAAW3gB,OAAS,EAAG,CACnB2gB,EAAW,GAAGC,EAAEvc,GAAKsc,EAAW,GAAGC,EAAEzc,IAAM,IAAGwc,EAAW,GAAGC,EAAEvc,GAAKsc,EAAW,GAAGC,EAAEzc,GACvF,KAAK,GAAIrE,GAAI,EAAGA,EAAI6gB,EAAW3gB,OAAQF,IACnC6gB,EAAW7gB,GAAG8gB,EAAEvc,GAAKsc,EAAW7gB,EAAE,GAAG8gB,EAAEvc,GAAKsc,EAAW7gB,GAAG8gB,EAAEzc,IAKxE,IAAK,GADDyB,GAAU,GAAIhG,OAAM8gB,EAAW1gB,OAAS2gB,EAAW3gB,QAC9CF,EAAI,EAAGA,EAAI4gB,EAAW1gB,OAAQF,IACnC8F,EAAQ8a,EAAW5gB,GAAGoE,GAAKwc,EAAW5gB,GAAG8gB,CAE7C,KAAK,GAAI9gB,GAAI,EAAGA,EAAI6gB,EAAW3gB,OAAQF,IACnC8F,EAAQ+a,EAAW7gB,GAAGoE,GAAKyc,EAAW7gB,GAAG8gB,CAE7Cld,GAAKU,KAAKwB,KAGdwP,EAAM0L,wBAAwBpd,EAAM8c,EAAWC,EAAclD,EAAK5K,QAItEqD,UAAa,SAASuH,GAClB,GAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,KAEzBuE,GAAKoe,kBAAkB5J,GAEa,QAAhCA,EAASG,KAAK,gBACdlR,GAAG6Q,UAAU,kCACRwL,OAAO,SAAU9c,GAAI,MAAOA,GAAE,cAAgBsZ,EAAK,eACnD3H,KAAK,UAAW,KAG7BU,SAAY,SAASiH,GACjB,GAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,KAEzBuE,GAAKqe,oBAAoB7J,GAEzB/Q,GAAG6Q,UAAU,kCACRwL,OAAO,SAAU9c,GAAI,MAAOA,GAAE,cAAgBsZ,EAAK,eACnD3H,KAAK,UAAW,KAIzB3U,EAAK0O,QAAQoF,MACb9T,EAAKsc,KAAKgC,GAAGte,EAAKwd,qBR43ErBtf,IAAK,oBACLC,MAAO,SQ13EMme,GACd,GAAItc,GAAOvE,IAEX6gB,GAAKjI,OAAO,0BAA0BM,KAAK,OAAQ,SAAS3R,GAAI,MAAOvG,cAAOoH,WAAW,GAAKb,EAAEwO,OAASxO,EAAE,GAAGwO,SAC9G8K,EAAKjI,OAAO,0BAA0BQ,MAAM,OAAQ,SAAS7R,GAAI,MAAOvG,cAAOoH,YAAY,GAAK7D,EAAK0O,QAAQuF,gBRi4E5G/V,IAAK,sBACLC,MAAO,SQ/3EQme,GAChB,GAAItc,GAAOvE,IAEX6gB,GAAKjI,OAAO,0BAA0BM,KAAK,OAAQ,SAAS3R,GAAI,MAAOA,GAAEwO,OAASxO,EAAE,GAAGwO,QACvF8K,EAAKjI,OAAO,0BAA0BQ,MAAM,OAAQ,SAAS7R,GAAI,MAAOhD,GAAK0O,QAAQuF,eRw4EpF/V,IAAK,UACL+C,IAAK,WQrhGN,MAAOxF,MAAKmU,UR8hGXrO,IAAK,SQ//FEoS,GACJA,IACAlY,KAAKmU,SAAW+D,MRmgGnBzV,IAAK,OACL+C,IAAK,WQjiGN,MAAOxF,MAAK0F,ORoiGXI,IAAK,SQngGDoS,GACDA,IACAlY,KAAK0F,MAAQwS,MRugGhBzV,IAAK,QACL+C,IAAK,WQviGN,MAAOxF,MAAKif,QR0iGXnZ,IAAK,SQvgGAoS,GACFA,IACAlY,KAAKif,OAAS/G,MR2gGjBzV,IAAK,OACL+C,IAAK,WQ7iGN,MAAOxF,MAAKskB,ORgjGXxe,IAAK,SQ3gGDoS,GACDA,IACAlY,KAAKskB,MAAQpM,MR+gGhBzV,IAAK,mBACL+C,IAAK,WQnjGN,MAAOxF,MAAKukB,mBRsjGXze,IAAK,SQ/gGWoS,GACbA,IACAlY,KAAKukB,kBAAoBrM,MRmhG5BzV,IAAK,WACL+C,IAAK,WQzjGN,MAAOxF,MAAKwkB,WR4jGX1e,IAAK,SQnhGGoS,GACLA,IACAlY,KAAKwkB,UAAYtM,MRuhGpBzV,IAAK,YACL+C,IAAK,WQ/jGN,MAAOxF,MAAKykB,YRkkGX3e,IAAK,SQvhGIoS,GACNA,IACAlY,KAAKykB,WAAavM,OR4hGlBwI,IAGX9gB,cQhoGoB8gB,GRooGf,SAAS7gB,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MS9oGjiB1R,EAAAb,EAAA,GTkpGKc,EAAML,EAAuBI,GShpGb2jB,ETspGR,WSrpGT,QAAAA,GAAYzR,EAASyF,GAAOnG,EAAAvS,KAAA0kB,EACxB,IAAIngB,GAAOvE,KAEP6E,GACAyX,UAAW,OACXjE,MAAM,EACNkE,UAAW,OAAQ,SACnBnD,MAAO,UACPoD,QAAQ,EACRjB,OACIpF,QAAQ,EACR7R,SAAU,MAEdwX,OACI3F,QAAQ,EACR7R,SAAU,MAKlBC,GAAK4P,SAAalB,EAClB1O,EAAK0a,OAAavG,EAElBnU,EAAK+P,aAAazP,GT06GrB,MA3QA8N,GAAa+R,IACTjiB,IAAK,eAOLC,MAAO,SS3nGCmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,YT8nG5CxQ,IAAK,SACLC,MAAO,SS5nGLsE,GACH,GAAIzC,GAAOvE,IAkBX,IAhB4B,OAAxBuE,EAAKmU,MAAMxF,WAA8C,QAAxB3O,EAAKmU,MAAMxF,WAExC3O,EAAK0O,QAAQsJ,SAASjZ,OAAS,IAAM0D,EAAK,GAAGtE,OAAoCqC,QAA3BiC,EAAK,GAAG,GAAG,cACjEzC,EAAK0O,QAAQsJ,SAAS7U,KAAK,SAG/BnD,EAAKyC,QACLA,EAAKM,QAAQ,SAASC,IACjBvG,aAAOmC,QAAQoE,GAAKA,EAAIA,EAAE7E,OAAO4E,QAAQ,SAASb,GAC/ClC,EAAKyC,KAAKU,KAAKjB,QAIvBlC,EAAKyC,KAAOA,EAGZzC,EAAK0O,QAAQoF,KAAM,CACnBrQ,GAAG6Q,UAAU,aAAaC,SAC1B9Q,GAAG6Q,UAAU,uBAAuBC,QAEpC,IAAI6L,GAAU3c,GAAG4Q,OAAkC,SAA3BrU,EAAK0O,QAAQqJ,UAAuB,IAAM/X,EAAK0O,QAAQqJ,UAAY,QAC1ErD,OAAO,SACHC,KAAK,QAAS,4BAC/B0L,EAAQD,EAAQ1L,OAAO,SACvB4L,EAAU7c,GAAG4Q,OAAkC,SAA3BrU,EAAK0O,QAAQqJ,UAAuB,IAAM/X,EAAK0O,QAAQqJ,UAAY,QACtErD,OAAO,OACPC,KAAK,QAAS,sBACVD,OAAO,SACPC,KAAK,QAAS,WACX,MAAO3U,GAAKugB,kBAEpCC,EAAQF,EAAQ5L,OAAO,SAKvB+L,EAAQJ,EAAM3L,OAAO,KAErB1U,GAAK0O,QAAQuJ,QACbwI,EAAM/L,OAAO,MACRtB,KAAK,KAGdqN,EAAMnM,UAAU,SACX7R,KAAKzC,EAAK0O,QAAQsJ,UAClBuE,QACA7H,OAAO,MACHtB,KAAK,SAASpQ,GACX,MAAOA,IAKnB,IAAI0d,GAAQF,EACPlM,UAAU,MACV7R,KAAKzC,EAAKyC,MACN8Z,QACI7H,OAAO,MACPC,KAAK,WAAY,SAAU3R,GAAI,MAAOA,GAAE,aAEjDhD,GAAK0O,QAAQuJ,QACbyI,EAAMhM,OAAO,MACRtB,KAAK,SAASpQ,EAAGnE,GACd,MAAOA,GAAI,IAKvB6hB,EAAMhM,OAAO,MACJtB,KAAK,SAASpQ,GACX,MAAOA,GAAE4L,OAIrB8R,EAAMhM,OAAO,MACJtB,KAAK,SAASpQ,GACX,MAAOA,GAAE7E,OAAS6E,EAAEE,IAAMF,EAAE2P,SAIZ,OAAxB3S,EAAKmU,MAAMxF,WAAsB3O,EAAK0O,QAAQsJ,SAASjZ,OAAS,IAAM0D,EAAK,GAAGtE,OAAoCqC,QAA3BiC,EAAK,GAAG,GAAG,cAClGie,EAAMhM,OAAO,MACJtB,KAAK,SAASpQ,GACX,MAAOA,GAAE0O,YT6mG5BxT,IAAK,OACLC,MAAO,WSxmGR,GAAI6B,GAAOvE,IAEXuE,GAAKgc,OAAOhc,EAAKmU,MAAMvD,eT4mGtB1S,IAAK,+BACLC,MAAO,SS1mGiBgW,GAEzB,GAAInU,GAAOvE,KAEP2hB,EAAsBjJ,EAAM6C,MAAMtI,QAIlC6O,GAHsBpJ,EAAM6C,MAAMpF,OACZwL,EAAard,SACbqd,EAAahG,WAAWrX,SACxBoU,EAAMoD,MAAMxX,SAEtCC,GAAKwd,kBAEDjG,MAAS,SAAS+E,GACV7f,aAAOmE,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAM6gB,IAKnCvH,UAAa,SAASuH,GAClB,GAAKA,EAAL,CAEA,GAAI9H,GAAW/Q,GAAG4Q,OAAO5Y,KACzB+Y,GAASK,MAAM,SAAU,WAErBpR,GAAG6Q,UAAU,kCACRwL,OAAO,SAAU9c,GAAI,MAAOA,GAAE,aAAesZ,EAAK,cAClD3H,KAAK,UAAW,MAG7BU,SAAY,SAASiH,GACZA,IACL7Y,GAAG4Q,OAAO5Y,MAAMoZ,MAAM,SAAU,WAChCpR,GAAG6Q,UAAU,kCACRwL,OAAO,SAAU9c,GAAI,MAAOA,GAAE,aAAesZ,EAAK,cAClD3H,KAAK,UAAW,MAIzB3U,EAAK0O,QAAQoF,MACb9T,EAAK2gB,eAAerC,GAAGte,EAAKwd,qBT2mG/Btf,IAAK,oCACLC,MAAO,SSzmGsBgW,GAE9B,GAAInU,GAAOvE,KAEP2hB,EAAsBjJ,EAAM6C,MAAMtI,QAElC2O,GADsBlJ,EAAM6C,MAAMpF,OACZwL,EAAard,UACnCud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAsBpJ,EAAMoD,MAAMxX,SAElC4O,EAAYwF,EAAMxF,UAElBgQ,EAAmC,OAAbhQ,EAAsB,EAAIwF,EAAMzF,QAAQkQ,YAC9DC,EAAmC,OAAblQ,EAAsBwF,EAAMzF,QAAQoQ,OAAS3K,EAAMzF,QAAQqQ,YACjFC,EAAmC,OAAbrQ,EAAsB,EAAIwF,EAAMzF,QAAQkQ,YAC9DK,EAAmC,OAAbtQ,EAA6C,IAAvBwF,EAAMzF,QAAQoQ,OAA2C,IAA5B3K,EAAMzF,QAAQqQ,WAC3F/e,GAAKwd,kBAEDjG,MAAS,SAAS+E,GACV7f,aAAOmE,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAM6gB,IAKnCvH,UAAa,SAASuH,GAClB,GAAKA,EAAL,CAGI7f,aAAOmE,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAM6gB,EAGnC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAE/B0iB,GAAetJ,MAAM,SAAU,WAI3BV,EAAM+K,gBAAgBrf,KAAK,WACnB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAC1C7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,QAIxC,IAAIH,GAAW/Q,GAAG4Q,OAAO,kBAAoBiI,EAAK,YAAc,KAEhE9H,GACKU,aACItQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYI,GACZD,YAAYE,MAMjC5J,SAAY,SAASiH,GACjB,GAAKA,EAAL,CAGI7f,aAAOmE,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAM6gB,EAGlC,IAAI6B,GAAiB1a,GAAG4Q,OAAO5Y,KAE/B0iB,GAAetJ,MAAM,SAAU,WAE/BV,EAAM+K,gBAAgBrf,KAAK,WACnB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB2H,EAAK,aAC1C7Y,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,QAIxC,IAAIH,GAAW/Q,GAAG4Q,OAAO,kBAAoBiI,EAAK,YAAc,KAEhE9H,GACKU,aACItQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYD,GACZI,YAAYF,OAM7B7e,EAAK0O,QAAQoF,MACb9T,EAAK2gB,eAAerC,GAAGte,EAAKwd,qBTylG/Btf,IAAK,eACLC,MAAO,WStlGR,MAAOsF,IAAG6Q,UAAU,mBT0lGnBpW,IAAK,gBACLC,MAAO,WSvlGR,GAAI6B,GAAOvE,IAEX,OAA2B,YAAvBuE,EAAK0O,QAAQmG,MACN,yBACuB,WAAvB7U,EAAK0O,QAAQmG,MACb,mCADJ,UT+lGN3W,IAAK,OACL+C,IAAK,WS/3GN,MAAOxF,MAAK0F,OTw4GXI,IAAK,SSz3GDoS,GACDA,IACAlY,KAAK0F,MAAQwS,MT63GhBzV,IAAK,QACL+C,IAAK,WS34GN,MAAOxF,MAAKif,QT84GXnZ,IAAK,SS73GAoS,GACFA,IACAlY,KAAKif,OAAS/G,MTi4GjBzV,IAAK,UACL+C,IAAK,WSj5GN,MAAOxF,MAAKmU,UTo5GXrO,IAAK,SSj4GEoS,GACJA,IACAlY,KAAKmU,SAAW+D,OTs4GhBwM,IAGX9kB,cSr8GoB8kB,GTy8Gf,SAAS7kB,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MUn9GjiB1R,EAAAb,EAAA,GVu9GKc,EAAML,EAAuBI,GUr9GbokB,EV29GR,WU19GT,QAAAA,GAAYlS,EAASyF,GAAOnG,EAAAvS,KAAAmlB,EACxB,IAAI5gB,GAAOvE,KAEP6E,GACAwT,MAAY,EACZV,KAAY,eACZW,SAAY,MACZG,SAAY,OAGhBlU,GAAK4P,SAAYlB,EACjB1O,EAAK0a,OAAYvG,EAEjBnU,EAAK+P,aAAazP,GVyiHrB,MApEA8N,GAAawS,IACT1iB,IAAK,eAOLC,MAAO,SU18GCmC,GACT,GAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUjS,aAAOwC,UAAUqB,EAAQN,EAAK0O,YV68G5CxQ,IAAK,OACLC,MAAO,WU18GR,GAAI6B,GAAOvE,IAEX,IAAIuE,EAAK0O,QAAQoF,KAAM,CACnB,GAAIV,GAAOpT,EAAKmU,MAAM6E,IACLtE,OAAO,KACHC,KAAK,QAAS,6CAClBD,OAAO,QACHC,KAAK,QAAS,uCAGnCvB,GAAKuB,KAAK,KAAQ3U,EAAKmU,MAAMwC,MAAQvD,EAAKyN,OAAOC,yBAA2B,GAEvEnM,KAAK,IAAK3U,EAAK+gB,aAAa/gB,EAAKmU,MAAMyC,OAAQ5W,EAAKmU,MAAM0C,SAC1DlC,KAAK,cAAe,UACpBE,MAAM,YAAa7U,EAAK0O,QAAQwF,UAChCd,KAAKpT,EAAK0O,QAAQ0E,UVw8G1BlV,IAAK,eACLC,MAAO,SUr8GCyY,EAAQC,GACjB,GAAI7W,GAAOvE,IAEX,OAA8B,QAA1BuE,EAAK0O,QAAQqF,SACL8C,EAAOhB,IAAM,EACY,WAA1B7V,EAAK0O,QAAQqF,SACZ6C,EAASC,EAAOE,OAAS,EAD9B,UV48GN7Y,IAAK,QACL+C,IAAK,WUvgHN,MAAOxF,MAAKif,QVghHXnZ,IAAK,SUrgHAoS,GACFA,IACAlY,KAAKif,OAAS/G,MVygHjBzV,IAAK,UACL+C,IAAK,WUnhHN,MAAOxF,MAAKmU,UVshHXrO,IAAK,SUzgHEoS,GACJA,IACAlY,KAAKmU,SAAW+D,OV8gHhBiN,IAGXvlB,cU1jHoBulB,GV8jHf,SAAStlB,EAAQD,EAASM,GAE/B,YA0CA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAS6S,GAA2BhhB,EAAMhE,GAAQ,IAAKgE,EAAQ,KAAM,IAAIihB,gBAAe,4DAAgE,QAAOjlB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgE,EAAPhE,EAElO,QAASklB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIjT,WAAU,iEAAoEiT,GAAeD,GAASvhB,UAAYxB,OAAOijB,OAAOD,GAAcA,EAAWxhB,WAAaD,aAAexB,MAAOgjB,EAAU7iB,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6iB,IAAYhjB,OAAOkjB,eAAiBljB,OAAOkjB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GA9CjehjB,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MAE5hBsT,EAAO,QAASvgB,GAAIR,EAAQghB,EAAUC,GAA2B,OAAXjhB,IAAiBA,EAASkhB,SAAS/hB,UAAW,IAAIgiB,GAAOxjB,OAAOyjB,yBAAyBphB,EAAQghB,EAAW,IAAajhB,SAATohB,EAAoB,CAAE,GAAIE,GAAS1jB,OAAO2jB,eAAethB,EAAS,OAAe,QAAXqhB,EAAmB,OAAkC7gB,EAAI6gB,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKzjB,KAAgB,IAAI6jB,GAASJ,EAAK3gB,GAAK,IAAeT,SAAXwhB,EAA4C,MAAOA,GAAOhmB,KAAK0lB,IW1kH7dllB,EAAAb,EAAA,GX8kHKc,EAAML,EAAuBI,GW5kHlCE,EAAAf,EAAA,GXglHKgB,EAAMP,EAAuBM,GW/kHlCE,EAAAjB,EAAA,GXmlHKkB,EAAMT,EAAuBQ,GWllHlCE,EAAAnB,EAAA,GXslHKoB,EAAMX,EAAuBU,GWrlHlCE,EAAArB,EAAA,GXylHKsB,EAAOb,EAAuBY,GWxlHnCE,EAAAvB,EAAA,GX4lHKwB,EAAOf,EAAuBc,GW1lHnCE,EAAAzB,EAAA,GX8lHK0B,EAAOjB,EAAuBgB,GW7lHnCE,EAAA3B,EAAA,GXimHK4B,EAAOnB,EAAuBkB,GW/lHdG,EXymHL,SAAUwkB,GWxmHtB,QAAAxkB,GAAYiR,GAASV,EAAAvS,KAAAgC,EAAA,IAAAykB,GAAAlB,EAAAvlB,MAAAgC,EAAA8jB,WAAAnjB,OAAA2jB,eAAAtkB,IAAAzB,KAAAP,KACXiT,IAEF1O,GAHa,OAUjBA,GAAKM,QAEDqC,WAAW,GAZEuf,EXsuIpB,MA7nBAhB,GAAUzjB,EAAUwkB,GA8BpB7T,EAAa3Q,IACTS,IAAK,eAULC,MAAO,SWhkHCmC,EAAQP,GACjByhB,EAAA/jB,EAAAmC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAtkB,EAAAmC,WAAA,eAAAnE,MAAAO,KAAAP,KAAmB6E,EAEnB,IAAIN,GAAQvE,IAEZuE,GAAK0O,QAAUrR,aAAO4B,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK2O,UAAiB,KAEtB,IAAImK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAG/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,CAElB,IAAI4f,GAAeF,EAAG5Q,wBACF,WAAhB8Q,IACAriB,EAAKsiB,YAAiBH,EAAGlT,OAAOlQ,OAAS,EAAIojB,EAAGlT,OAASkT,EAAGjT,OAC5DlP,EAAKuiB,SAAiC,SAAhBF,EAG1B,IAAI1L,GAAe3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC3DF,EAAe5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAG3DlI,EAAIpL,GAAGgW,MAAMC,UAAU8I,iBAAiB,EAAG7L,GAAQ,IACnD7H,EAAI9O,EAAK0O,QAAQ/L,UAAYc,GAAGgW,MAAMgJ,MAAM9I,OAAO/C,EAAQ,IAAMnT,GAAGgW,MAAMiJ,SAAS/I,OAAO/C,EAAQ,IAElG+L,EAAStlB,aAAOmF,UAAUxC,EAAK4Q,WAAYyR,EAAcriB,EAAK0O,QAAQ/L,UAE1EkM,GAAEgM,OAAO7a,EAAK4Q,WAAW2C,IAAI,SAASvQ,GAClC,MAAOA,GAAE,GAAG4L,QAGhBE,EAAE+L,QAAQ8H,EAAO7gB,IAAK6gB,EAAOhhB,MAGzB3B,EAAK4iB,aACL5iB,EAAK6iB,OAASpf,GAAGgW,MAAMC,UACvB1Z,EAAK6iB,OAAOhI,OAAO7a,EAAK4iB,YAAYJ,iBAAiB,EAAG3T,EAAEiU,eAO9D9iB,EAAK6O,EAAiBA,EACtB7O,EAAK8O,EAAiBA,EAElBzR,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBXmnHhC1S,IAAK,mBACLC,MAAO,SWlkHK4kB,EAAShjB,GACtB,GAAIC,GAAQvE,IAEZuE,GAAK0O,QAAUrR,aAAO4B,UAAUe,EAAK0O,QAASqU,EAE9C,IAAIjK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,CAElB,IAAI4f,GAAeF,EAAG5Q,wBACF,WAAhB8Q,IACAriB,EAAKsiB,YAAiBH,EAAGlT,OAAOlQ,OAAS,EAAIojB,EAAGlT,OAASkT,EAAGjT,OAC5DlP,EAAKuiB,SAAiC,SAAhBF,EAG1B,IAAI1L,GAAe3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC3DF,EAAe5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAG3DlI,EAAIpL,GAAGgW,MAAMC,UAAU8I,iBAAiB,EAAG7L,GAAQ,IACnD7H,EAAI9O,EAAK0O,QAAQ/L,UAAYc,GAAGgW,MAAMgJ,MAAM9I,OAAO/C,EAAQ,IAAMnT,GAAGgW,MAAMiJ,SAAS/I,OAAO/C,EAAQ,IAElG+L,EAAStlB,aAAOmF,UAAUxC,EAAK4Q,WAAYyR,EAAcriB,EAAK0O,QAAQ/L,UAE1EkM,GAAEgM,OAAO7a,EAAK4Q,WAAW2C,IAAI,SAASvQ,GAClC,MAAOA,GAAE,GAAG4L,QAGhBE,EAAE+L,QAAQ8H,EAAO7gB,IAAK6gB,EAAOhhB,MAGzB3B,EAAK4iB,aACL5iB,EAAK6iB,OAASpf,GAAGgW,MAAMC,UACvB1Z,EAAK6iB,OAAOhI,OAAO7a,EAAK4iB,YAAYJ,iBAAiB,EAAG3T,EAAEiU,eAO9D9iB,EAAK6O,EAAiBA,EACtB7O,EAAK8O,EAAiBA,EAElBzR,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBX6kHhC1S,IAAK,SACLC,MAAO,SWpkHLsE,GACH,GAAIzC,GAAOvE,IAEXuE,GAAKiZ,KAAK3E,UAAU,gCAAgC7R,SAASsW,OAAOxE,SACpEvU,EAAKiZ,KAAK3E,UAAU,+BAA+B7R,SAASsW,OAAOxE,QAEnE,IAAI/C,GAAQxR,EAAKoP,WACbP,EAAQ7O,EAAK6O,EACbC,EAAQ9O,EAAK8O,EACb+T,EAAQ7iB,EAAK6iB,OAEbG,EAAMhjB,EAAKiZ,KACF3E,UAAU,+BACV7R,KAAKA,GACL8Z,QACI7H,OAAO,KACPC,KAAK,QAAS,8BACdA,KAAK,YAAa,SAAS3R,GAAK,MAAO,aAAe6L,EAAE7L,EAAE,GAAG4L,MAAQ,QAElFqU,EAAOD,EAAI1O,UAAU,gCACpB7R,KAAK,SAASO,GAAK,MAAOA,IAE/BigB,GAAK1G,QACA7H,OAAO,QACPC,KAAK,QAAS,+BACdE,MAAM,OAAQ,SAAU7R,EAAGnE,GAAK,MAAOmE,GAAEwO,OAASA,EAAM3S,KACxD8V,KAAK,IAAK,SAAS3R,GAAK,MAAOhD,GAAK4f,QAAUiD,EAAO7f,EAAE0O,OAASlR,SAChEmU,KAAK,IAAK,SAAS3R,GAAK,MAAO8L,GAAE9L,EAAEI,MACnCuR,KAAK,QAAS,SAAS3R,GAAK,MAAOhD,GAAK4f,QAAUiD,EAAOC,YAAcjU,EAAEiU,cACzEnO,KAAK,SAAU,SAAS3R,GAAK,MAAOhD,GAAK0O,QAAQ/L,UAAYmM,EAAEA,EAAE+L,SAAS,IAAM/L,EAAE9L,EAAEE,IAAM4L,EAAE,GAAKA,EAAElN,KAAKshB,IAAIlgB,EAAEE,OAEnHlD,EAAKke,uBXglHJhgB,IAAK,0BACLC,MAAO,SWvkHYsE,EAAMmgB,EAAYO,EAAeC,GACrD,GAAIpjB,GAAOvE,KAGPqT,GAFO9O,EAAKqjB,UAERrjB,EAAK8O,GACT6T,EAAStlB,aAAOmF,UAAUC,EAAsB,GAAhBzC,EAAK4f,QAAmB,QAAU,KAAM5f,EAAK0O,QAAQ/L,UACzFmM,GAAE+L,QAAQ8H,EAAO7gB,IAAK6gB,EAAOhhB,MAC7B3B,EAAKkY,KAAK8D,OAAO,KAAMlN,EAAG,IAE1B,IAAI+T,GAASpf,GAAGgW,MAAMC,SACtBmJ,GAAOhI,OAAO+H,GAAYJ,iBAAiB,EAAGxiB,EAAK6O,EAAEiU,aAErD,IAAIQ,GAAY7f,GAAGgW,MAAMC,SACzB4J,GAAUzI,OAAOsI,GAAeX,iBAAiB,EAAGxiB,EAAK6O,EAAEiU,aAE3D,IAAIS,GAAW/iB,MAEXoiB,GAAW7jB,OAASokB,EAAcpkB,QAAU,EAAI6jB,EAAWY,QAAQJ,IAAaR,EAAWY,QAAQJ,GAAYR,EAAW7jB,OAAS,IACnIwkB,EAAWJ,EAAcP,EAAWY,QAAQJ,KAGhDpjB,EAAKiZ,KAAK3E,UAAU,gCAAgC7R,SAASsW,OAAOxE,SACpEvU,EAAKiZ,KAAK3E,UAAU,+BAA+B7R,SAASsW,OAAOxE,QAEnE,IAAIyO,GAAMhjB,EAAKiZ,KACF3E,UAAU,+BACV7R,KAAKA,GACL8Z,QACA7H,OAAO,KACPC,KAAK,QAAS,8BACdA,KAAK,YAAa,SAAU3R,EAAGnE,GAAK,MAAO,aAAemB,EAAK6O,EAAE7O,EAAK4Q,WAAW/R,GAAG,GAAG+P,MAAQ,QAExGqU,EAAOD,EAAI1O,UAAU,mBACpB7R,KAAK,SAASO,GAAK,MAAOA,IAE/BigB,GAAK1G,QACA7H,OAAO,QACPC,KAAK,QAAS,+BACdE,MAAM,OAAQ,SAAS7R,GAAK,MAAOA,GAAEwO,QACrCmD,KAAK,IAAK,SAAS3R,GAEhB,MAAKhD,GAAK4f,QAGNgD,EAAW7jB,OAASokB,EAAcpkB,QAAUiE,EAAE0O,OAAS0R,GAAYR,EAAWY,QAAQJ,IAAaR,EAAW7jB,OAAS,EAChHiB,EAAK6O,EAAEiU,YACsBQ,EAAjCC,EAAWvgB,EAAE0O,OAAS0R,EAAqBG,EAAsBvgB,EAAE0O,MAAmB1O,EAAE0O,OAL/F,SAOHiD,KAAK,IAAK,SAAS3R,GAAK,MAAsB8L,GAAf9O,EAAK4f,QAAY5c,EAAEI,GAAMpD,EAAK0O,QAAQ/L,UAAcmM,EAAE+L,SAAS,GAAQ,KACtGlG,KAAK,QAAS,SAAS3R,GACpB,MAAQhD,GAAK4f,QAA+B5c,EAAE0O,OAAS0R,EAAW,EAAIE,EAAUR,YAAzD9iB,EAAK6O,EAAEiU,cAEjCnO,KAAK,SAAU,SAAS3R,GAAK,MAAOhD,GAAK0O,QAAQ/L,UAAYmM,EAAEA,EAAE+L,SAAS,IAAM/L,EAAE9L,EAAEE,IAAMlD,EAAK4f,QAAU9Q,EAAE,GAAKA,EAAElN,KAAKshB,IAAIlgB,EAAEE,KAAO,IAEzI+f,EAAK/N,aAAatQ,SAAS,KACtB+P,KAAK,IAAK,SAAS3R,GAAK,MAAQhD,GAAK4f,QAAsBiD,EAAO7f,EAAE0O,OAArBlR,SAC/CmU,KAAK,QAAS,SAAS3R,GAAK,MAAQhD,GAAK4f,QAA+BiD,EAAOC,YAA5B9iB,EAAK6O,EAAEiU,cAC1DnO,KAAK,IAAK,SAAS3R,GAAK,MAAO8L,GAAE9L,EAAEI,MACnCuR,KAAK,SAAU,SAAS3R,GAAK,MAAOhD,GAAK0O,QAAQ/L,UAAYmM,EAAEA,EAAE+L,SAAS,IAAM/L,EAAE9L,EAAEE,IAAM4L,EAAE,GAAKA,EAAElN,KAAKshB,IAAIlgB,EAAEE,OAEnHlD,EAAKke,uBXglHJhgB,IAAK,gBACLC,MAAO,SWxkHEslB,EAAOC,GACjB,GAAIC,GAAK/hB,KAAKib,MAAM4G,KAAWA,EAAQ,EAAIA,EAAM9iB,WAAWU,MAAM,KAAK,GAAGtC,OACtE6kB,EAAKhiB,KAAKib,MAAM6G,KAAWA,EAAQ,EAAIA,EAAM/iB,WAAWU,MAAM,KAAK,GAAGtC,MAC1E,OAAO4kB,GAAKC,GAAMF,EAAQD,GAAO5H,QAAQ8H,IAAOD,EAAQD,GAAO5H,QAAQ+H,MXglHtE1lB,IAAK,eACLC,MAAO,WW1kHR,GAAI6B,GAAOvE,IAEX,OAAOuE,GAAKiZ,KAAK3E,UAAU,sBXmlH1BpW,IAAK,oBACLC,MAAO,WW7kHR,GAAI6B,GAAOvE,KACPooB,EAAkB7jB,EAAKgX,MAAMpF,OAC7BwL,EAAkBpd,EAAKgX,MAAMtI,QAC7B8F,EAAkBxU,EAAK8jB,eACvBzG,EAAsBD,EAAalG,YAAYnX,SAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAmBvd,EAAKuX,MAAMxX,SAE9B8X,EAAU,GAAA1a,cAAY6C,EAAK0O,QAAQmJ,QAGvC7X,GAAK8U,cACDyC,MAAS,SAASvU,GACV3F,aAAOuD,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAMuH,IAGnC+R,UAAa,SAAS/R,GAClB,GAAK6gB,EAAL,CAOA,GALIxmB,aAAOuD,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAMuH,GAI/BhD,EAAK0O,QAAQoJ,MAAMhE,KAAM,CACzB,GAAIiQ,GAAKtgB,GAAG6Q,UAAU,wCACtByP,GAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAE,cAAesR,UAAU,MAAMO,MAAM,UAAW,MAClG,IAAImP,GAAeD,EAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAE,aAErEghB,GAAa1P,UAAU,MAAMO,MAAM,UAAW,KAC9CxX,aAAOqH,OAAOjB,GAAG4Q,OAAO,uBAAuB,GAAG,GAAI2P,EAAa,GAAG,GAAGC,UAAW,KAGxFxgB,GAAG4Q,OAAO5Y,MAAMoZ,MAAM,OAAQ,SAAU7R,EAAGnE,GAAK,MAAOmB,GAAKkkB,gBAAgBlhB,EAAEwO,OAASA,MAAM3S,MAE7FgZ,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAE1BqV,SAAY,SAASrS,GACZ6gB,IAEDxmB,aAAOuD,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAMuH,GAI9BhD,EAAK0O,QAAQoJ,MAAMhE,MACnBrQ,GAAG6Q,UAAU,yCAAyCA,UAAU,MAAMO,MAAM,UAAW,IAE3FpR,GAAG4Q,OAAO5Y,MAAMoZ,MAAM,OAAQ,SAAU7R,EAAGnE,GAAK,MAAOmE,GAAEwO,OAASA,MAAM3S,KAExEgZ,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAI9BwU,EAAS8J,GAAGte,EAAK8U,iBXqmHhB5W,IAAK,KACLC,MAAO,SWvlHTiW,EAAWrU,GACVyhB,EAAA/jB,EAAAmC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAtkB,EAAAmC,WAAA,KAAAnE,MAAAO,KAAAP,KAAS2Y,EAAWrU,EAEpB,IAAIC,GAAOvE,KACP+Y,EAAcxU,EAAK8jB,eAGnBhP,GACAsP,cAAe,SAASphB,GAChB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BqhB,kBAAmB,SAASrhB,GACpB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BshB,iBAAkB,SAASthB,GACnB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,KAK5BuhB,EAAYnQ,EAAY,QAE5BI,GAAS8J,GAAGiG,EAAWzP,EAAayP,OXgmHnCrmB,IAAK,OACLC,MAAO,WWzlHRqjB,EAAA/jB,EAAAmC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAtkB,EAAAmC,WAAA,OAAAnE,MAAAO,KAAAP,KAEA,IAAIuE,GAAOvE,IAaXuE,GAAK+P,aAAa/P,EAAKM,OAAQ,SAASmC,GACpC,GAAIyV,GAAU,GAAAvb,cAASqD,EAAK0O,QAAQwJ,KAAMlY,EAAMA,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAAO9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAC3IS,EAAU,GAAA3a,cAAUmD,EAAK0O,QAAQ8I,MAAOxX,GACxCyX,EAAU,GAAA1a,cAAWiD,EAAK0O,QAAQ+I,OAAQzX,EAAMA,EAAK4Q,YACrDkH,EAAU,GAAA7a,cAAU+C,EAAK0O,QAAQoJ,MAAO9X,EAAMA,EAAK4Q,WACvD5Q,GAAKkY,KAAOA,EACZlY,EAAKwX,MAAQA,EACbxX,EAAK8X,MAAQA,EACb9X,EAAKyX,OAASA,EAMdzX,EAAKwX,MAAM2M,OAEXnkB,EAAKgc,OAAOvZ,GACZzC,EAAKke,oBAGLle,EAAKyX,OAAO0M,OACZnkB,EAAKyX,OAAO+M,6BAA6BxkB,GAGzCA,EAAK8X,MAAMqM,OACXnkB,EAAK8X,MAAM0M,6BAA6BxkB,QXunH3C9B,IAAK,YACLC,MAAO,SW5lHFD,EAAKC,GACXqjB,EAAA/jB,EAAAmC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAtkB,EAAAmC,WAAA,YAAAnE,MAAAO,KAAAP,KAAgByC,EAAKC,EAErB,IAAI6B,GAAOvE,IAEX4B,cAAOkE,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAE5B1O,EAAK+P,aAAa/P,EAAK0O,YXsmHtBxQ,IAAK,aACLC,MAAO,SW/lHDwf,EAAS8G,GAChB,GAAIzkB,GAAOvE,KAEPipB,IAECrnB,cAAOiC,QAAQmlB,GAShBC,EAAOjiB,MACHuN,MAAO2N,GARX+G,EAAOjiB,MACHuN,MAAO2N,EACPxd,KAAMskB,GAYdzkB,EAAK2kB,iBAAiBD,EAAQ,SAASjiB,GACnCzC,EAAKgc,OAAOvZ,GAGZzC,EAAKkY,KAAK8D,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,KAGjC9O,EAAKyX,OAAOuE,OAAOvZ,GACnBzC,EAAKyX,OAAO+M,6BAA6BxkB,GAGzCA,EAAK8X,MAAMkE,OAAOvZ,QXmmHrBvE,IAAK,YACL+C,IAAK,WWxpIN,MAAOxF,MAAKmpB,YXuqIXrjB,IAAK,SW9oIIoS,GACNA,IACAlY,KAAKmpB,WAAajR,MXkpIrBzV,IAAK,SACL+C,IAAK,WW1qIN,MAAOxF,MAAKopB,SX6qIXtjB,IAAK,SWlpICoS,GACHA,IACAlY,KAAKopB,QAAUlR,MXspIlBzV,IAAK,aACL+C,IAAK,WWhrIN,MAAOxF,MAAK6mB,aXmrIX/gB,IAAK,SWtpIKoS,GACPA,IACAlY,KAAK6mB,YAAc3O,MX0pItBzV,IAAK,UACL+C,IAAK,WWtrIN,MAAOxF,MAAK8mB,UXyrIXhhB,IAAK,SW1pIEoS,GACJA,IACAlY,KAAK8mB,SAAW5O,OX+pIhBlW,GACThB,aAEFpB,cW1uIoBoC,GX8uIf,SAASnC,EAAQD,EAASM,GAE/B,YA0CA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAS6S,GAA2BhhB,EAAMhE,GAAQ,IAAKgE,EAAQ,KAAM,IAAIihB,gBAAe,4DAAgE,QAAOjlB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgE,EAAPhE,EAElO,QAASklB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIjT,WAAU,iEAAoEiT,GAAeD,GAASvhB,UAAYxB,OAAOijB,OAAOD,GAAcA,EAAWxhB,WAAaD,aAAexB,MAAOgjB,EAAU7iB,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6iB,IAAYhjB,OAAOkjB,eAAiBljB,OAAOkjB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GA9CjehjB,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MAE5hBsT,EAAO,QAASvgB,GAAIR,EAAQghB,EAAUC,GAA2B,OAAXjhB,IAAiBA,EAASkhB,SAAS/hB,UAAW,IAAIgiB,GAAOxjB,OAAOyjB,yBAAyBphB,EAAQghB,EAAW,IAAajhB,SAATohB,EAAoB,CAAE,GAAIE,GAAS1jB,OAAO2jB,eAAethB,EAAS,OAAe,QAAXqhB,EAAmB,OAAkC7gB,EAAI6gB,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKzjB,KAAgB,IAAI6jB,GAASJ,EAAK3gB,GAAK,IAAeT,SAAXwhB,EAA4C,MAAOA,GAAOhmB,KAAK0lB,IYnwI7dllB,EAAAb,EAAA,GZuwIKc,EAAML,EAAuBI,GYrwIlCE,EAAAf,EAAA,GACAiB,GZwwIWR,EAAuBM,GYxwIlCf,EAAA,IZ4wIKkB,EAAMT,EAAuBQ,GY3wIlCE,EAAAnB,EAAA,GZ+wIKoB,EAAMX,EAAuBU,GY9wIlCE,EAAArB,EAAA,GZkxIKsB,EAAOb,EAAuBY,GYjxInCE,EAAAvB,EAAA,GZqxIKwB,EAAOf,EAAuBc,GYnxInCE,EAAAzB,EAAA,GZuxIK0B,EAAOjB,EAAuBgB,GYtxInCE,EAAA3B,EAAA,GZ0xIK4B,EAAOnB,EAAuBkB,GYxxIdI,EZkyIH,SAAUukB,GYjyIxB,QAAAvkB,GAAYgR,GAASV,EAAAvS,KAAAiC,EAAA,IAAAwkB,GAAAlB,EAAAvlB,MAAAiC,EAAA6jB,WAAAnjB,OAAA2jB,eAAArkB,IAAA1B,KAAAP,KACXiT,IAEF1O,IAEA8kB,EAAIljB,KAAKE,IAAI9B,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAAO9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAAU,CALzG,OAMjB/W,GAAKM,QACDye,YAAa+F,EACblG,YAAakG,EAAI,GAAKA,EAAI,GAAKA,EAAI,IARtB5C,EZ6tJpB,MA3bAhB,GAAUxjB,EAAYukB,GAwBtB7T,EAAa1Q,IACTQ,IAAK,eAULC,MAAO,SY1wICmC,EAAQP,GACjByhB,EAAA9jB,EAAAkC,UAAA2hB,WAAAnjB,OAAA2jB,eAAArkB,EAAAkC,WAAA,eAAAnE,MAAAO,KAAAP,KAAmB6E,EAEnB,IAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK2O,UAAiB,OAEtB,IAAImK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAEdpF,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBZoxIhC1S,IAAK,mBACLC,MAAO,SY7wIK4kB,EAAShjB,GACtB,GAAIC,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUe,EAAK0O,QAASqU,GAE9C/iB,EAAK2O,UAAiB,OAEtB,IAAImK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAEdpF,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBZwxIhC1S,IAAK,SACLC,MAAO,SYhxILsE,GACH,GAAIzC,GAAOvE,KAEPkb,EAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACtDF,EAAU5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OACtDvF,EAAUxR,EAAKoP,UAEnBpP,GAAK0e,IAAMjb,GAAGuV,IAAI0F,MACLK,YAAY/e,EAAK0O,QAAQqQ,aACzBH,YAAY5e,EAAK0O,QAAQkQ,aAGtC5e,EAAKwe,IAAM/a,GAAGshB,OAAOvG,MACRwG,KAAK,MACL7mB,MAAM,SAAS6E;AAAK,MAAOA,GAAE7E,QAE1C6B,EAAKiZ,KAAK3E,UAAU,2CAA2C7R,SAASsW,OAAOxE,QAG/E,IAAI0Q,GAAOjlB,EAAKiZ,KACHvE,OAAO,KACHC,KAAK,QAAS,0CACdA,KAAK,YAAa,aAAgBgC,EAAQ,EAAK,IAAOC,EAAS,EAAK,KACpEtC,UAAU,iCACV7R,KAAKzC,EAAKwe,IAAI/b,IAAO8Z,QACrB7H,OAAO,KACHC,KAAK,QAAS,+BAInCsQ,GAAKvQ,OAAO,QACHC,KAAK,QAAS,iCACdA,KAAK,WAAY,SAAS3R,GAAK,MAAOA,GAAEP,KAAK,cAC7CkS,KAAK,IAAK3U,EAAK0e,KACf/J,KAAK,OAAQ,SAAS3R,EAAGnE,GAAK,MAAO2S,GAAM3S,KAC3C8V,KAAK,SAAU,WACf9U,KAAK,SAASmD,GAAKhD,EAAKye,YAAczb,IAe/ChD,EAAKke,uBZ+wIJhgB,IAAK,gBACLC,MAAO,WYzwIR,GAAI6B,GAAOvE,IAEX,OAAOuE,GAAKiZ,KAEC3E,UAAU,yCZmxItBpW,IAAK,oBACLC,MAAO,WY5wIR,GAAI6B,GAAUvE,KACV+Y,EAAUxU,EAAKkf,gBAIfP,GAHU3e,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC5C9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAC5C/W,EAAKoP,WACIpP,EAAK0O,QAAQkQ,aAChCC,EAAmB7e,EAAK0O,QAAQqQ,YAChCC,EAAkBhf,EAAK0O,QAAQkQ,YAC/BK,EAA6C,IAA3Bjf,EAAK0O,QAAQqQ,YAE/B3B,EAAsBpd,EAAKgX,MAAMtI,QACjCmV,EAAsB7jB,EAAKgX,MAAMpF,OACjCyL,EAAsBD,EAAalG,YAAYnX,SAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAmBvd,EAAKuX,MAAMxX,SAE9B8X,EAAU,GAAA1a,cAAY6C,EAAK0O,QAAQmJ,QAGvC7X,GAAKyW,eACDc,MAAS,SAASvU,EAAGnE,GACbxB,aAAOuD,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAMuH,IAInC+R,UAAa,SAAS/R,EAAGnE,GACrB,GAAKglB,EAAL,CAEIxmB,aAAOuD,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAMuH,EAGnC,IAAIwR,GAAW/Q,GAAG4Q,OAAO5Y,KAgBzB,IAfA+Y,EAASU,aACAP,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYI,GACZD,YAAYE,IAIrBjf,EAAK0O,QAAQ+I,OAAO3D,MACpB9T,EAAKyX,OAAO6E,KAAKzc,KAAK,WACd4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAAsD,QAAvCgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAChFlR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxC3U,EAAK0O,QAAQoJ,MAAMhE,KAAM,CACzB,GAAIiQ,GAAKtgB,GAAG6Q,UAAU,wCACtByP,GAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAEP,KAAK,cAAe6R,UAAU,MAAMO,MAAM,UAAW,MACvG,IAAImP,GAAeD,EAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAEP,KAAK,aAE1EuhB,GAAa1P,UAAU,MAAMO,MAAM,UAAW,KAC9CxX,aAAOqH,OAAOjB,GAAG4Q,OAAO,uBAAuB,GAAG,GAAI2P,EAAa,GAAG,GAAGC,UAAW,KAIxFjkB,EAAKkf,gBAAgBrf,KAAK,WAClB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAC5CgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCkD,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAG1BqV,SAAY,SAASrS,EAAGnE,GACpB,GAAKglB,EAAL,CAEIxmB,aAAOuD,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAMuH,EAGlC,IAAIwR,GAAW/Q,GAAG4Q,OAAO5Y,KACzB+Y,GAASU,aACAtQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYD,GACZI,YAAYF,IAIrB7e,EAAK0O,QAAQ+I,OAAO3D,MACxB9T,EAAKyX,OAAO6E,KAAKzc,KAAK,WACd4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAAsD,QAAvCgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAChFlR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKpC3U,EAAK0O,QAAQoJ,MAAMhE,MACnBrQ,GAAG6Q,UAAU,yCAAyCA,UAAU,MAAMO,MAAM,UAAW,IAG3F7U,EAAKkf,gBAAgBrf,KAAK,WAClB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAC5CgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCkD,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAK9BwU,EAAS8J,GAAGte,EAAKyW,kBZoxIhBvY,IAAK,KACLC,MAAO,SYvwITiW,EAAWrU,GACVyhB,EAAA9jB,EAAAkC,UAAA2hB,WAAAnjB,OAAA2jB,eAAArkB,EAAAkC,WAAA,KAAAnE,MAAAO,KAAAP,KAAS2Y,EAAWrU,EAEpB,IAAIC,GAAOvE,KACP+Y,EAAcxU,EAAKkf,gBAGnBpK,GACAsP,cAAe,SAASphB,GAChB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BqhB,kBAAmB,SAASrhB,GACpB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BshB,iBAAkB,SAASthB,GACnB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,KAK5BuhB,EAAYnQ,EAAY,QAE5BI,GAAS8J,GAAGiG,EAAWzP,EAAayP,OZ+wInCrmB,IAAK,OACLC,MAAO,WYzwIRqjB,EAAA9jB,EAAAkC,UAAA2hB,WAAAnjB,OAAA2jB,eAAArkB,EAAAkC,WAAA,OAAAnE,MAAAO,KAAAP,KAEA,IAAIuE,GAAOvE,IAEXuE,GAAK+P,aAAa/P,EAAKM,OAAQ,SAASmC,GACpC,GAAI+U,GAAU,GAAA3a,cAAUmD,EAAK0O,QAAQ8I,MAAOxX,GACxCyX,EAAU,GAAA1a,cAAWiD,EAAK0O,QAAQ+I,OAAQzX,EAAMA,EAAK4Q,YACrDkH,EAAU,GAAA7a,cAAU+C,EAAK0O,QAAQoJ,MAAO9X,EAAMA,EAAK4Q,WAEvD5Q,GAAKwX,MAAQA,EACbxX,EAAKyX,OAASA,EACdzX,EAAK8X,MAAQA,EAGb9X,EAAKwX,MAAM2M,OAGXnkB,EAAKgc,OAAOhc,EAAK4Q,YACjB5Q,EAAKke,oBAELle,EAAKyX,OAASA,EACdzX,EAAK8X,MAAQA,EAGb9X,EAAKyX,OAAO0M,OACZnkB,EAAKyX,OAAOyN,kCAAkCllB,EAAMA,EAAKkf,gBAAiBlf,EAAKwe,IAAKxe,EAAKye,YAAaze,EAAK0e,KAG3G1e,EAAK8X,MAAMqM,OACXnkB,EAAK8X,MAAMoN,kCAAkCllB,QZqxIhD9B,IAAK,YACLC,MAAO,SY7wIFD,EAAKC,GACXqjB,EAAA9jB,EAAAkC,UAAA2hB,WAAAnjB,OAAA2jB,eAAArkB,EAAAkC,WAAA,YAAAnE,MAAAO,KAAAP,KAAgByC,EAAKC,EAErB,IAAI6B,GAAOvE,IAEX4B,cAAOkE,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAE5B1O,EAAK+P,aAAa/P,EAAK0O,YZuxItBxQ,IAAK,aACLC,MAAO,SYhxIDwf,EAAS8G,GAChB,GAAIzkB,GAAOvE,KAEPipB,IAECrnB,cAAOiC,QAAQmlB,GAShBC,EAAOjiB,MACHuN,MAAO2N,GARX+G,EAAOjiB,MACHuN,MAAO2N,EACPxd,KAAMskB,GAWdzkB,EAAK2kB,iBAAiBD,EAAQ,SAASjiB,GAEnCzC,EAAKgc,OAAOvZ,GAGZzC,EAAKyX,OAAOuE,OAAOvZ,GACnBzC,EAAKyX,OAAOyN,kCAAkCllB,EAAMA,EAAKkf,gBAAiBlf,EAAKwe,IAAKxe,EAAKye,YAAaze,EAAK0e,KAG3G1e,EAAK8X,MAAMkE,OAAOvZ,GAClBzC,EAAK8X,MAAMoN,kCAAkCllB,QZqxIhD9B,IAAK,MACL+C,IAAK,WYtqJN,MAAOxF,MAAK0pB,MZ+qJX5jB,IAAK,SYhqJFoS,GACAA,IACAlY,KAAK0pB,KAAOxR,MZoqJfzV,IAAK,MACL+C,IAAK,WYlrJN,MAAOxF,MAAK2pB,MZqrJX7jB,IAAK,SYpqJFoS,GACAA,IACAlY,KAAK2pB,KAAOzR,MZwqJfzV,IAAK,cACL+C,IAAK,WYxrJN,MAAOxF,MAAK4pB,cZ2rJX9jB,IAAK,SYxqJMoS,GACRA,IACAlY,KAAK4pB,aAAe1R,OZ6qJpBjW,GACTjB,aAEFpB,cYjuJoBqC,GZquJf,SAASpC,EAAQD,EAASM,GAE/B,YA0CA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAS6S,GAA2BhhB,EAAMhE,GAAQ,IAAKgE,EAAQ,KAAM,IAAIihB,gBAAe,4DAAgE,QAAOjlB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgE,EAAPhE,EAElO,QAASklB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIjT,WAAU,iEAAoEiT,GAAeD,GAASvhB,UAAYxB,OAAOijB,OAAOD,GAAcA,EAAWxhB,WAAaD,aAAexB,MAAOgjB,EAAU7iB,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6iB,IAAYhjB,OAAOkjB,eAAiBljB,OAAOkjB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GA9CjehjB,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MAE5hBsT,EAAO,QAASvgB,GAAIR,EAAQghB,EAAUC,GAA2B,OAAXjhB,IAAiBA,EAASkhB,SAAS/hB,UAAW,IAAIgiB,GAAOxjB,OAAOyjB,yBAAyBphB,EAAQghB,EAAW,IAAajhB,SAATohB,EAAoB,CAAE,GAAIE,GAAS1jB,OAAO2jB,eAAethB,EAAS,OAAe,QAAXqhB,EAAmB,OAAkC7gB,EAAI6gB,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKzjB,KAAgB,IAAI6jB,GAASJ,EAAK3gB,GAAK,IAAeT,SAAXwhB,EAA4C,MAAOA,GAAOhmB,KAAK0lB,Ia1vJ7dllB,EAAAb,EAAA,Gb8vJKc,EAAML,EAAuBI,Ga5vJlCE,EAAAf,EAAA,GbgwJKgB,EAAMP,EAAuBM,Ga/vJlCE,EAAAjB,EAAA,GbmwJKkB,EAAMT,EAAuBQ,GalwJlCE,EAAAnB,EAAA,GbswJKoB,EAAMX,EAAuBU,GarwJlCE,EAAArB,EAAA,GbywJKsB,EAAOb,EAAuBY,GaxwJnCE,EAAAvB,EAAA,Gb4wJKwB,EAAOf,EAAuBc,Ga1wJnCE,EAAAzB,EAAA,Gb8wJK0B,EAAOjB,EAAuBgB,Ga7wJnCE,EAAA3B,EAAA,GbixJK4B,EAAOnB,EAAuBkB,Ga/wJdK,EbyxJJ,SAAUskB,GaxxJvB,QAAAtkB,GAAY+Q,GAASV,EAAAvS,KAAAkC,EAAA,IAAAukB,GAAAlB,EAAAvlB,MAAAkC,EAAA4jB,WAAAnjB,OAAA2jB,eAAApkB,IAAA3B,KAAAP,KACXiT,IAEF1O,GAHa,OAKjBA,GAAKM,QACDglB,OACIxR,MAAM,EACNyR,KAAM,YACNC,OAAQ,YACRC,eAAgB,EAChBC,QAAS,EACT5G,OAAQ,GAEZ6G,MACI7R,MAAM,GAEV8R,MACI/Q,MAAO,QACP8B,MAAO,GAEXyI,YAAa,UArBA8C,EbgoLpB,MAv2BAhB,GAAUvjB,EAAWskB,GAoCrB7T,EAAazQ,IACTO,IAAK,eAWLC,MAAO,Sa7pJCmC,EAAQP,GACjByhB,EAAA7jB,EAAAiC,UAAA2hB,WAAAnjB,OAAA2jB,eAAApkB,EAAAiC,WAAA,eAAAnE,MAAAO,KAAAP,KAAmB6E,EAEnB,IAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK2O,UAAY,OACjB3O,EAAK6lB,WAAapiB,GAAGqiB,SAAS,SAAS9iB,GAAK,MAAOA,GAAE0P,SAAWgD,IAEhE,IAAIoD,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAClBzC,EAAK+lB,aAAiB5D,EAAGhT,UAEzB,IAAIwH,GAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACtDF,EAAU5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,MAE1D/W,GAAK6O,EAAK7O,EAAK+lB,aAAgBtiB,GAAGC,KAAK+V,QAAQE,OAAO,EAAGhD,IAAUlT,GAAGgW,MAAMiJ,SAAS/I,OAAO,EAAGhD,IAC/F3W,EAAK8O,EAAIrL,GAAGgW,MAAMiJ,SAAS/I,OAAO/C,EAAQ,IAE1C5W,EAAK4d,aAAa5d,EAAK4Q,YAEvB5Q,EAAKgmB,QAAUviB,GAAGuV,IAAI4M,OACL/W,EAAE,SAAS7L,GAAK,MAAOhD,GAAK6O,EAAE7L,EAAE0P,UAChC5D,EAAE,SAAS9L,GAAK,MAAOhD,GAAK8O,EAAE9L,EAAE2P,UAChCyM,YAAYpf,EAAK0O,QAAQ0Q,aAE1Cpf,EAAKimB,QAAUxiB,GAAGuV,IAAI2M,OACL9W,EAAE,SAAS7L,GAAK,MAAOhD,GAAK6O,EAAE7L,EAAE0P,UAChCxP,GAAG,SAASF,GAAK,MAAOhD,GAAK8O,EAAE9L,EAAE2P,UACjCvP,GAAGwT,GACHwI,YAAYpf,EAAK0O,QAAQ0Q,aAEtC/hB,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBbyqJhC1S,IAAK,mBACLC,MAAO,SalqJK4kB,EAAShjB,GACtB,GAAIC,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUe,EAAK0O,QAASqU,GAE9C/iB,EAAK2O,UAAY,OACjB3O,EAAK6lB,WAAapiB,GAAGqiB,SAAS,SAAS9iB,GAAK,MAAOA,GAAE0P,SAAWgD,IAEhE,IAAIoD,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAClBzC,EAAK+lB,aAAiB5D,EAAGhT,UAEzB,IAAIwH,GAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACtDF,EAAU5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,MAE1D/W,GAAK6O,EAAK7O,EAAK+lB,aAAgBtiB,GAAGC,KAAK+V,QAAQE,OAAO,EAAGhD,IAAUlT,GAAGgW,MAAMiJ,SAAS/I,OAAO,EAAGhD,IAC/F3W,EAAK8O,EAAIrL,GAAGgW,MAAMiJ,SAAS/I,OAAO/C,EAAQ,IAE1C5W,EAAK4d,aAAa5d,EAAK4Q,YAEvB5Q,EAAKgmB,QAAUviB,GAAGuV,IAAI4M,OACL/W,EAAE,SAAS7L,GAAK,MAAOhD,GAAK6O,EAAE7L,EAAE0P,UAChC5D,EAAE,SAAS9L,GAAK,MAAOhD,GAAK8O,EAAE9L,EAAE2P,UAChCyM,YAAYpf,EAAK0O,QAAQ0Q,aAE1Cpf,EAAKimB,QAAUxiB,GAAGuV,IAAI2M,OACL9W,EAAE,SAAS7L,GAAK,MAAOhD,GAAK6O,EAAE7L,EAAE0P,UAChCxP,GAAG,SAASF,GAAK,MAAOhD,GAAK8O,EAAE9L,EAAE2P,UACjCvP,GAAGwT,GACHwI,YAAYpf,EAAK0O,QAAQ0Q,aAEtC/hB,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBbyqJhC1S,IAAK,gBACLC,MAAO,WapqJR,GAAI6B,GAAOvE,KAEPkb,EAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACtDF,EAAU5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAGtDmP,EAAuD,KAA3ClmB,EAAK6O,EAAEgM,SAAS,GAAK7a,EAAK6O,EAAEgM,SAAS,GACM,MAA3C7a,EAAK8O,EAAE+L,SAAS,GAAK7a,EAAK8O,EAAE+L,SAAS,GAErD7a,GAAKiZ,KAAK3E,UAAU,kCAAkCC,SAEtDvU,EAAKiZ,KACAvE,OAAO,QACPC,KAAK,QAAS,iCAGdA,KAAK,QAASgC,EAAQ3W,EAAK6O,EAAEqX,IAC7BvR,KAAK,SAAUiC,GACfjC,KAAK,IAAK3U,EAAK6O,EAAEqX,GAAY,GAC7BrR,MAAM,OAAQ,QACdA,MAAM,iBAAkB,UbkqJ5B3W,IAAK,kBACLC,MAAO,Wa/pJR,GAAI6B,GAAOvE,IAGXuE,GAAKmmB,UAAYnmB,EAAKiZ,KACbvE,OAAO,KACPC,KAAK,QAAS,oCACdD,OAAO,QACPG,MAAM,SAAU,QAChBA,MAAM,iBAAkB,GAEjC7U,EAAKomB,YAAcpmB,EAAKmmB,UACfzR,OAAO,UACPC,KAAK,QAAS,oCACdA,KAAK,IAAK3U,EAAK0O,QAAQ4W,MAAMxG,WbiqJrC5gB,IAAK,eACLC,MAAO,Sa3pJCsE,GACT,GAAIzC,GAAOvE,KAEP4qB,EAAc5iB,GAAG3C,MAAM2B,EAAK8Q,IAAI,SAASpS,GACzC,MAAOA,GAAMhD,MAAMoV,IAAI,SAASvQ,GAC5B,MAAOA,GAAE0P,YAIb4T,EAAc7iB,GAAG3C,MAAM2B,EAAK8Q,IAAI,SAASpS,GACzC,MAAOA,GAAMhD,MAAMoV,IAAI,SAASvQ,GAC5B,MAAOA,GAAE2P,WAgBjB,IAZA3S,EAAK6O,EAAEgM,OAAOpX,GAAG8iB,OAAOF,IAExBrmB,EAAK8O,EAAE+L,OAAOpX,GAAG8iB,OAAOD,IAGpBtmB,EAAK8O,EAAE+L,SAAS,GAAK,GAAK7a,EAAK8O,EAAE+L,SAAS,GAAK,EAC/C7a,EAAK8O,EAAE+L,QAAQ,EAAG7a,EAAK8O,EAAE+L,SAAS,KAC3B7a,EAAK8O,EAAE+L,SAAS,GAAK,GAAK7a,EAAK8O,EAAE+L,SAAS,GAAK,GACtD7a,EAAK8O,EAAE+L,QAAQ7a,EAAK8O,EAAE+L,SAAS,GAAI,KAIlC7a,EAAK+lB,aAAc,CACpB,GAAIS,GAAUxmB,EAAK6O,EAAEgM,SAAUqL,EAAuD,KAA3ClmB,EAAK6O,EAAEgM,SAAS,GAAK7a,EAAK6O,EAAEgM,SAAS,IAC5E4L,EAAUzmB,EAAK8O,EAAE+L,SAAU6L,EAAuD,KAA3C1mB,EAAK8O,EAAE+L,SAAS,GAAK7a,EAAK8O,EAAE+L,SAAS,GAEhF7a,GAAK6O,EAAEgM,QAAQ2L,EAAQ,GAAKN,EAAUM,EAAQ,GAAKN,IACnDlmB,EAAK8O,EAAE+L,QAAQ4L,EAAQ,GAAIA,EAAQ,GAAKC,Qb6qJ3CxoB,IAAK,SACLC,MAAO,SahqJLsE,GACH,GAAIzC,GAAOvE,IAEGuE,GAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC5C9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,MAQ1D,IANA/W,EAAK4d,aAAanb,GAElBzC,EAAKiZ,KAAK3E,UAAU,oCAAoC7R,SAASsW,OAAOxE,SACxEvU,EAAKiZ,KAAK3E,UAAU,oCAAoC7R,SAASsW,OAAOxE,SACxEvU,EAAKiZ,KAAK3E,UAAU,qCAAqC7R,SAASsW,OAAOxE,SAErEvU,EAAK0O,QAAQiX,KAAK7R,KAAM,CACxB,GAAI6S,GAAgB3mB,EAAKiZ,KAAKvE,OAAO,KAChBC,KAAK,QAAS,mCACdA,KAAK,YAAa,aAEvCgS,GAAcrS,UAAU,sCAEnB7R,KAAKA,GACL8Z,QACA7H,OAAO,QACPoL,OAAO,SAAS9c,GACb,MAAOA,GAAE4O,SAGZ+C,KAAK,QAAS,qCACdA,KAAK,IAAK,SAAS3R,GAChB,MAAOhD,GAAKimB,QAAQjjB,EAAE7E,SAEzBwW,KAAK,WAAY,SAAS3R,GACvB,MAAO,MAAQA,EAAE,cAEpB6R,MAAM,OAAQ,SAAS7R,GACpB,MAAOA,GAAEwO,QAEZqD,MAAM,SAAU,QAChBA,MAAM,UAAW,OAG1B,GAAI+R,GAAgB5mB,EAAKiZ,KAAKvE,OAAO,KAChBC,KAAK,QAAS,mCACdA,KAAK,YAAa,aA0BvC,IAxBAiS,EAActS,UAAU,sCAEnB7R,KAAKA,GACL8Z,QACA7H,OAAO,QACPoL,OAAO,SAAS9c,GACb,MAAOA,GAAE4O,SAEZ+C,KAAK,QAAS,qCACdA,KAAK,IAAK,SAAS3R,GAChB,MAAOhD,GAAKgmB,QAAQhjB,EAAE7E,SAEzBwW,KAAK,WAAY,SAAS3R,GACvB,MAAO,MAAQA,EAAE,cAEpB6R,MAAM,SAAU,SAAS7R,GACtB,MAAOA,GAAEwO,QAEZqD,MAAM,mBAAoB,WACvB,MAAO7U,GAAK6mB,iBAEfhS,MAAM,eAAgB7U,EAAK0O,QAAQkX,KAAKjP,OACxC9B,MAAM,OAAQ,QAEf7U,EAAK0O,QAAQ4W,MAAMxR,KAAM,CACzB,GAAIgT,GAAiB9mB,EAAKiZ,KAAKvE,OAAO,KACbC,KAAK,QAAS,oCACdA,KAAK,YAAa,aAE3ClS,GAAKM,QAAQ,SAASC,GACbA,EAAE4O,QACPkV,EAAexS,UAAU,qCAEpB7R,KAAKO,EAAE7E,OACPoe,QACA7H,OAAO,UAEPC,KAAK,QAAS,kCACdA,KAAK,IAAK3U,EAAK0O,QAAQ4W,MAAMxG,QAC7BnK,KAAK,KAAM,SAASoS,GACjB,MAAO/mB,GAAK6O,EAAEkY,EAAGrU,UAEpBiC,KAAK,KAAM,SAASoS,GACjB,MAAO/mB,GAAK8O,EAAEiY,EAAGpU,UAEpBgC,KAAK,WAAY,SAASlS,GACvB,MAAOA,GAAK,cAEfoS,MAAM,OAAQ7U,EAAK0O,QAAQ4W,MAAMC,MACjC1Q,MAAM,SAAU7U,EAAK0O,QAAQ4W,MAAME,QACnC3Q,MAAM,eAAgB7U,EAAK0O,QAAQ4W,MAAM,iBACzCzQ,MAAM,UAAW7U,EAAK0O,QAAQ4W,MAAMI,WAKjD,GAAIsB,GAAWhnB,EAAKiZ,KAAK4H,OAAOoG,SAChCjnB,GAAKknB,YAAcF,EAASrQ,MAAQ,EAAI3W,EAAK0O,QAAQ4W,MAAMxG,OAC3D9e,EAAKmnB,aAAeH,EAASpQ,OAG7B5W,EAAKke,uBbsoJJhgB,IAAK,iBACLC,MAAO,SajoJGsE,GACX,GAAIzC,GAAOvE,IAEX,IAAIuE,EAAK0O,QAAQkK,SAAS9E,KAAM,CAC5B,GAAI6C,GAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,KAC5C9W,GAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,MAG1D/W,GAAKonB,cAAgBzQ,EACrB3W,EAAKqnB,eAAiBrnB,EAAK0O,QAAQkK,SAAShC,OACxCvZ,aAAOiC,QAAQU,EAAKsnB,kBACpBtnB,EAAKsnB,gBACDzR,IAAO7V,EAAKmnB,aAAe,IAC3BzR,KAAQ1V,EAAK6W,OAAOnB,OAI5B1V,EAAK6d,UAAa7d,EAAKunB,cAAiB9jB,GAAGC,KAAK+V,QAAQE,OAAO,EAAG3Z,EAAKonB,gBAAkB3jB,GAAGgW,MAAMiJ,SAAS/I,OAAO,EAAG3Z,EAAKonB,gBAC1HpnB,EAAK8d,UAAYra,GAAGgW,MAAMiJ,SAAS/I,OAAO3Z,EAAKqnB,eAAgB,IAE/DrnB,EAAK6d,UAAUhD,OAAO7a,EAAK6O,EAAEgM,UAC7B7a,EAAK8d,UAAUjD,OAAO7a,EAAK8O,EAAE+L,UAE7B7a,EAAK+d,cAAgBta,GAAGuV,IAAId,OACXuB,MAAMzZ,EAAK6d,WACX5C,OAAO,UAExBjb,EAAKwnB,MAAQ/jB,GAAGuV,IAAIwO,QACH3Y,EAAE7O,EAAK6d,WACPS,GAAG,QAAS,WAETte,EAAK6O,EAAEgM,OAAO7a,EAAKwnB,MAAMC,QAAUznB,EAAK6d,UAAUhD,SAAU7a,EAAKwnB,MAAMjB,UACvEvmB,EAAKkY,KAAK8D,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,KAG7B9O,EAAK0O,QAAQiX,KAAK7R,MAClB9T,EAAKiZ,KAAK3E,UAAU,0CACfK,KAAK,IAAM,SAAS3R,GAAK,MAAOhD,GAAKimB,QAAQjjB,EAAE7E,SAExD6B,EAAKiZ,KAAK3E,UAAU,0CACXK,KAAK,IAAM,SAAS3R,GAAK,MAAOhD,GAAKgmB,QAAQhjB,EAAE7E,SAEpD6B,EAAK0O,QAAQ4W,MAAMxR,MACnB9T,EAAKiZ,KAAK3E,UAAU,yCACXK,KAAK,KAAM,SAAS3R,GAAK,MAAOhD,GAAK6O,EAAE7L,EAAE0P,UACzCiC,KAAK,KAAM,SAAS3R,GAAK,MAAOhD,GAAK8O,EAAE9L,EAAE2P,YAI1E3S,EAAK0nB,gBAAkBjkB,GAAGuV,IAAI2M,OACb9W,EAAE,SAAS7L,GAAK,MAAOhD,GAAK6d,UAAU7a,EAAE0P,UACxCxP,GAAG,SAASF,GAAK,MAAOhD,GAAK8d,UAAU9a,EAAE2P,UACzCvP,GAAGpD,EAAKqnB,gBACRjI,YAAYpf,EAAK0O,QAAQ0Q,aAE1Cpf,EAAKgZ,IAAIrE,KAAK,SAAU3U,EAAK4W,OAAS5W,EAAKqnB,gBAE3CrnB,EAAKgZ,IAAI1E,UAAU,uBAAuBC,SAC1CvU,EAAKgZ,IAAI1E,UAAU,yCAAyCC,QAE5D,IAAIoT,GAAW3nB,EAAKgZ,IAAItE,OAAO,KACdC,KAAK,QAAS,sBACdA,KAAK,YAAa,aAAe3U,EAAKsnB,eAAe5R,KAAO,IAAM1V,EAAKsnB,eAAezR,IAAM,KAEzG+R,EAAwBD,EAASjT,OAAO,KACnBC,KAAK,QAAS,iDACdA,KAAK,YAAa,aAE3ClS,GAAKM,QAAQ,SAASC,EAAEnE,GACfmE,EAAE4O,QAEPgW,EAAsBlT,OAAO,QAExBC,KAAK,QAAS,oBACdA,KAAK,IAAK,WAAa,MAAO3U,GAAK0nB,gBAAgB1kB,EAAE7E,SACrDwW,KAAK,WAAY,MAAM3R,EAAE,aACzB6R,MAAM,OAAQ7R,EAAEwO,OAChBqD,MAAM,SAAU,QAChBA,MAAM,UAAW,SAI1B8S,EAASjT,OAAO,KACXC,KAAK,QAAS,oBACdA,KAAK,YAAa,eAAiB3U,EAAKqnB,eAAiB,KACzDrrB,KAAKgE,EAAK+d,eAGf4J,EAASjT,OAAO,KACXC,KAAK,QAAS,qBACd3Y,KAAKgE,EAAKwnB,OACVlT,UAAU,QACVK,KAAK,SAAU3U,EAAKqnB,oBbynJ5BnpB,IAAK,kBACLC,MAAO,WajnJR,GAAI6B,GAAOvE,IAEX,OAAOuE,GAAKiZ,KACH3E,UAAU,4CbynJlBpW,IAAK,kBACLC,MAAO,WajnJR,MAAOsF,IACE6Q,UAAU,6Cb2nJlBpW,IAAK,oBACLC,MAAO,WarnJR,GAAI6B,GAAOvE,KACP+Y,EAAkBxU,EAAK6nB,kBACvBhE,EAAkB7jB,EAAKgX,MAAMpF,OAC7BwL,EAAkBpd,EAAKgX,MAAMtI,QAG7BoZ,GAFsB1K,EAAalG,YAAYnX,SACzBqd,EAAahG,WAAWrX,SACvBqd,EAAa9F,YAAYvX,UAGhD8X,GAFmB7X,EAAKuX,MAAMxX,SAEpB,GAAA5C,cAAY6C,EAAK0O,QAAQmJ,SAGvC7X,GAAK8U,cAeDO,SAAY,SAASrS,GACZ6gB,IAML7jB,EAAKmmB,UAAUtR,MAAM,iBAAkB,GAGvC7U,EAAK+nB,kBAAkB,GAAGhlB,QAAQ,SAASilB,GACvCvkB,GAAG4Q,OAAO2T,GACLnT,MAAM,OAAQ7U,EAAK0O,QAAQ4W,MAAMC,MACjC1Q,MAAM,eAAgB7U,EAAK0O,QAAQ4W,MAAMI,WAGlD7N,EAAQsM,KAAKnhB,EAAGhD,EAAM,cAE1BoV,UAAa,SAASpS,GAClB,GAAK6gB,EAAL,CAGA,GAAIoE,GAAUxkB,GAAGwkB,MAAMxsB,MACnBysB,EAAUD,EAAM,GAGhBE,GAFUF,EAAM,GAEFjoB,EAAK6O,EAAEuZ,OAAOF,IAE5BG,KACAC,IAEJtoB,GAAK4Q,WAAW7N,QAAQ,SAASC,EAAGnE,GAChCwpB,EAAYxpB,GAAKmE,EAAE7E,MACnBkqB,EAAYxpB,GAAGmmB,KAAK,SAAS/iB,EAAGC,GAAK,MAAOD,GAAEyQ,OAASxQ,EAAEwQ,QACzD,IAEI6V,GAAI5E,EAFJ6E,EAAMxoB,EAAKunB,cAAgBvnB,EAAK6lB,WAAWwC,EAAYxpB,GAAI,GAAI0T,MAAK4V,IAAcnoB,EAAK6lB,WAAWwC,EAAYxpB,GAAIspB,EAItHI,GAAc,IAARC,EAAaH,EAAYxpB,GAAG2pB,GAAOH,EAAYxpB,GAAG2pB,EAAM,GAC9D7E,EAAMtmB,aAAOiC,QAAQ+oB,EAAYxpB,GAAG2pB,IAA8BH,EAAYxpB,GAAG2pB,EAAI,GAAzCH,EAAYxpB,GAAG2pB,GAI3DD,EAAuC,KAAlCvoB,EAAKyoB,cAAcF,EAAG7V,QAAiBiR,EAAK4E,EACjD5E,EAAuC,IAAlC3jB,EAAKyoB,cAAc9E,EAAGjR,QAAgB6V,EAAK5E,EAGhD2E,EAAiBzpB,GAAMspB,EAAYI,EAAG7V,OAASiR,EAAGjR,OAASyV,EAAaxE,EAAK4E,IAG7ElrB,aAAOuD,WAAWknB,IAClBA,EAAoB9rB,KAAKP,KAAM6sB,EAGnC,IAAIzZ,GAAI7O,EAAK6O,EAAGxR,aAAOiC,QAAQgpB,EAAiB,GAAG5V,QAAuC4V,EAAiB,GAAG5V,OAAjD4V,EAAiB,GAAG5V,OACzE1S,GAAK8O,EAAGzR,aAAOiC,QAAQgpB,EAAiB,GAAG3V,QAAuC2V,EAAiB,GAAG3V,OAAjD2V,EAAiB,GAAG3V,OAKjF3S,GAAK+nB,kBAAkB,GAAGhlB,QAAQ,SAASilB,GACvCvkB,GAAG4Q,OAAO2T,GACLnT,MAAM,OAAQ7U,EAAK0O,QAAQ4W,MAAMC,MACjC1Q,MAAM,eAAgB7U,EAAK0O,QAAQ4W,MAAMI,UAIlD,KAAK,GAAI7mB,GAAE,EAAGA,EAAIypB,EAAiBvpB,OAAQF,IAAK,CAC5C,GAAImpB,GAASvkB,GAAG4Q,OAAO,oBAAsBiU,EAAiBzpB,GAAG,YAAc,KAC/EmpB,GACCnT,MAAM,OAAQ7U,EAAKkkB,gBAAgBlkB,EAAK0O,QAAQ4W,MAAMC,OACtD1Q,MAAM,eAAgB,GAM3B7U,EAAKmmB,UACAxR,KAAK,KAAM9F,GAAG8F,KAAK,KAAM3U,EAAK8O,EAAE9O,EAAK8O,EAAE+L,SAAS,KAChDlG,KAAK,KAAM9F,GAAG8F,KAAK,KAAM3U,EAAK8O,EAAE9O,EAAK8O,EAAE+L,SAAS,KAChDhG,MAAM,iBAAkB,GAY7BgD,EAAQsM,KAAKmE,EAAkBtoB,EAAM,gBAI7CwU,EAAS8J,GAAGte,EAAK8U,iBbgnJhB5W,IAAK,eACLC,MAAO,Wa7mJR,GAAI6B,GAAOvE,KAEP4G,QAEJ,QAAOrC,EAAK0O,QAAQkX,KAAK/Q,OACrB,IAAK,MACDxS,EAAI,MACJ,MACJ,KAAK,QACDA,EAAI,MACJ,MACJ,KAAK,OACDA,EAAI,MACJ,MACJ,SACIA,EAAI,OAIZ,MAAOA,MbinJNnE,IAAK,gBACLC,MAAO,Sa/mJEA,GACV,GAAI6B,GAAOvE,KAEPitB,EAAQ1oB,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACpD6R,EAAa3oB,EAAK6O,EAAE1Q,EAExB,OAAoB,GAAbwqB,EAAiB,GAAMA,EAAaD,EAAS,EAAI,Kb8nJvDxqB,IAAK,KACLC,MAAO,SalnJTiW,EAAWrU,GACVyhB,EAAA7jB,EAAAiC,UAAA2hB,WAAAnjB,OAAA2jB,eAAApkB,EAAAiC,WAAA,KAAAnE,MAAAO,KAAAP,KAAS2Y,EAAWrU,EAEpB,IAAIC,GAAOvE,KACP+Y,EAAcxU,EAAK6nB,kBAGnB/S,GACA8T,kBAAmB,SAAS5lB,GAExB,GAAIilB,GAAUxkB,GAAGwkB,MAAMxsB,MACnBysB,EAAUD,EAAM,GAGhBE,GAFUF,EAAM,GAEFjoB,EAAK6O,EAAEuZ,OAAOF,IAE5BG,KACAC,IAEJtoB,GAAK4Q,WAAW7N,QAAQ,SAASC,EAAGnE,GAChCwpB,EAAYxpB,GAAKmE,EAAE7E,MACnBkqB,EAAYxpB,GAAGmmB,KAAK,SAAS/iB,EAAGC,GAAK,MAAOD,GAAEyQ,OAASxQ,EAAEwQ,QACzD,IAEI6V,GAAI5E,EAFJ6E,EAAMxoB,EAAKunB,cAAgBvnB,EAAK6lB,WAAWwC,EAAYxpB,GAAI,GAAI0T,MAAK4V,IAAcnoB,EAAK6lB,WAAWwC,EAAYxpB,GAAIspB,EAItHI,GAAc,IAARC,EAAaH,EAAYxpB,GAAG2pB,GAAOH,EAAYxpB,GAAG2pB,EAAM,GAC9D7E,EAAK0E,EAAYxpB,GAAG2pB,GAGpBF,EAAiBzpB,GAAMspB,EAAYI,EAAG7V,OAASiR,EAAGjR,OAASyV,EAAaxE,EAAK4E,IAG7ElrB,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAM6sB,KAK5B/D,EAAYnQ,EAAY,QAE5BI,GAAS8J,GAAGiG,EAAWzP,EAAayP,Ob2nJnCrmB,IAAK,OACLC,MAAO,WarnJRqjB,EAAA7jB,EAAAiC,UAAA2hB,WAAAnjB,OAAA2jB,eAAApkB,EAAAiC,WAAA,OAAAnE,MAAAO,KAAAP,KAEA,IAAIuE,GAAOvE,IAEXuE,GAAK+P,aAAa/P,EAAKM,OAAQ,SAASmC,GACpC,GAAIyV,GAAU,GAAAvb,cAASqD,EAAK0O,QAAQwJ,KAAMlY,EAAMA,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAAO9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAC3IS,EAAU,GAAA3a,cAAUmD,EAAK0O,QAAQ8I,MAAOxX,GACxCyX,EAAU,GAAA1a,cAAWiD,EAAK0O,QAAQ+I,OAAQzX,GAC1C8X,EAAS,GAAA7a,cAAU+C,EAAK0O,QAAQoJ,MAAO9X,EAAMyC,EAEjDzC,GAAKkY,KAAOA,EACZlY,EAAKwX,MAAQA,EACbxX,EAAKyX,OAASA,EACdzX,EAAK8X,MAAQA,EAGb9X,EAAKwX,MAAM2M,OAGXnkB,EAAKkY,KAAKiM,OAEVnkB,EAAKgc,OAAOvZ,GACZzC,EAAKge,eAAevb,GACpBzC,EAAKie,gBACLje,EAAK6oB,kBACL7oB,EAAKke,oBAGLle,EAAKyX,OAAO0M,OACZnkB,EAAKyX,OAAOqR,8BAA8B9oB,GAG1CA,EAAK8X,MAAMqM,YbioJdjmB,IAAK,YACLC,MAAO,SaznJFD,EAAKC,GACXqjB,EAAA7jB,EAAAiC,UAAA2hB,WAAAnjB,OAAA2jB,eAAApkB,EAAAiC,WAAA,YAAAnE,MAAAO,KAAAP,KAAgByC,EAAKC,EAErB,IAAI6B,GAAOvE,IAEX4B,cAAOkE,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAE5B1O,EAAK+P,aAAa/P,EAAK0O,YbmoJtBxQ,IAAK,aACLC,MAAO,Sa5nJDwf,EAAS8G,GAChB,GAAIzkB,GAAOvE,KAEPipB,IAECrnB,cAAOiC,QAAQmlB,GAShBC,EAAOjiB,MACHuN,MAAO2N,GARX+G,EAAOjiB,MACHuN,MAAO2N,EACPxd,KAAMskB,GAWdzkB,EAAK2kB,iBAAiBD,EAAQ,SAASjiB,GAEnCzC,EAAKgc,OAAOvZ,GACZzC,EAAKge,eAAevb,GAGpBzC,EAAKkY,KAAK8D,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,KAGjC9O,EAAKyX,OAAOuE,OAAOvZ,GACnBzC,EAAKyX,OAAOqR,8BAA8B9oB,GAG1CA,EAAK8X,MAAMkE,OAAOvZ,QbgoJrBvE,IAAK,eACL+C,IAAK,Waz9KN,MAAOxF,MAAK8rB,ebk+KXhmB,IAAK,Sa36KOoS,GACTA,IACAlY,KAAK8rB,cAAgB5T,Mb+6KxBzV,IAAK,aACL+C,IAAK,War+KN,MAAOxF,MAAKstB,abw+KXxnB,IAAK,Sa/6KKoS,GACPA,IACAlY,KAAKstB,YAAcpV,Mbm7KtBzV,IAAK,YACL+C,IAAK,Wa3+KN,MAAOxF,MAAKutB,Yb8+KXznB,IAAK,San7KIoS,GACNA,IACAlY,KAAKutB,WAAarV,Mbu7KrBzV,IAAK,YACL+C,IAAK,Waj/KN,MAAOxF,MAAKwtB,Ybo/KX1nB,IAAK,Sav7KIoS,GACNA,IACAlY,KAAKwtB,WAAatV,Mb27KrBzV,IAAK,YACL+C,IAAK,Wav/KN,MAAOxF,MAAKytB,Yb0/KX3nB,IAAK,Sa37KIoS,GACNA,IACAlY,KAAKytB,WAAavV,Mb+7KrBzV,IAAK,gBACL+C,IAAK,Wa7/KN,MAAOxF,MAAK0tB,gBbggLX5nB,IAAK,Sa/7KQoS,GACVA,IACAlY,KAAK0tB,eAAiBxV,Mbm8KzBzV,IAAK,iBACL+C,IAAK,WangLN,MAAOxF,MAAK2tB,iBbsgLX7nB,IAAK,San8KSoS,GACXA,IACAlY,KAAK2tB,gBAAkBzV,Mbu8K1BzV,IAAK,iBACL+C,IAAK,WazgLN,MAAOxF,MAAK4tB,iBb4gLX9nB,IAAK,Sav8KSoS,GACXA,IACAlY,KAAK4tB,gBAAkB1V,Mb28K1BzV,IAAK,gBACL+C,IAAK,Wa/gLN,MAAOxF,MAAK6tB,gBbkhLX/nB,IAAK,Sa38KQoS,GACVA,IACAlY,KAAK6tB,eAAiB3V,Mb+8KzBzV,IAAK,QACL+C,IAAK,WarhLN,MAAOxF,MAAK8tB,QbwhLXhoB,IAAK,Sa/8KAoS,GACFA,IACAlY,KAAK8tB,OAAS5V,Mbm9KjBzV,IAAK,kBACL+C,IAAK,Wa3hLN,MAAOxF,MAAK+tB,kBb8hLXjoB,IAAK,San9KUoS,GACZA,IACAlY,KAAK+tB,iBAAmB7V,Mbu9K3BzV,IAAK,UACL+C,IAAK,WajiLN,MAAOxF,MAAKguB,UboiLXloB,IAAK,Sav9KEoS,GACJA,IACAlY,KAAKguB,SAAW9V,Mb29KnBzV,IAAK,UACL+C,IAAK,WaviLN,MAAOxF,MAAKiuB,Ub0iLXnoB,IAAK,Sa39KEoS,GACJA,IACAlY,KAAKiuB,SAAW/V,Obg+KhBhW,GACTlB,aAEFpB,capoLoBsC,GbwoLf,SAASrC,EAAQD,EAASM,GAE/B,YA0CA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAS6S,GAA2BhhB,EAAMhE,GAAQ,IAAKgE,EAAQ,KAAM,IAAIihB,gBAAe,4DAAgE,QAAOjlB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgE,EAAPhE,EAElO,QAASklB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIjT,WAAU,iEAAoEiT,GAAeD,GAASvhB,UAAYxB,OAAOijB,OAAOD,GAAcA,EAAWxhB,WAAaD,aAAexB,MAAOgjB,EAAU7iB,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6iB,IAAYhjB,OAAOkjB,eAAiBljB,OAAOkjB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GA9CjehjB,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MAE5hBsT,EAAO,QAASvgB,GAAIR,EAAQghB,EAAUC,GAA2B,OAAXjhB,IAAiBA,EAASkhB,SAAS/hB,UAAW,IAAIgiB,GAAOxjB,OAAOyjB,yBAAyBphB,EAAQghB,EAAW,IAAajhB,SAATohB,EAAoB,CAAE,GAAIE,GAAS1jB,OAAO2jB,eAAethB,EAAS,OAAe,QAAXqhB,EAAmB,OAAkC7gB,EAAI6gB,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKzjB,KAAgB,IAAI6jB,GAASJ,EAAK3gB,GAAK,IAAeT,SAAXwhB,EAA4C,MAAOA,GAAOhmB,KAAK0lB,Ic7pL7dllB,EAAAb,EAAA,GdiqLKc,EAAML,EAAuBI,Gc/pLlCE,EAAAf,EAAA,GACAiB,GdkqLWR,EAAuBM,GclqLlCf,EAAA,IdsqLKkB,EAAMT,EAAuBQ,GcrqLlCE,EAAAnB,EAAA,GdyqLKoB,EAAMX,EAAuBU,GcxqLlCE,EAAArB,EAAA,Gd4qLKsB,EAAOb,EAAuBY,Gc3qLnCE,EAAAvB,EAAA,Gd+qLKwB,EAAOf,EAAuBc,Gc7qLnCE,EAAAzB,EAAA,GdirLK0B,EAAOjB,EAAuBgB,GchrLnCE,EAAA3B,EAAA,GdorLK4B,EAAOnB,EAAuBkB,GclrLdM,Ed4rLL,SAAUqkB,Gc3rLtB,QAAArkB,GAAY8Q,GAASV,EAAAvS,KAAAmC,EAAA,IAAAskB,GAAAlB,EAAAvlB,MAAAmC,EAAA2jB,WAAAnjB,OAAA2jB,eAAAnkB,IAAA5B,KAAAP,KACXiT,IAEF1O,GAHa,OAKjBA,GAAKM,QACDwe,OAAQld,KAAKE,IAAI9B,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAAO9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAAU,GAN7GmL,Ed8mMpB,MAlbAhB,GAAUtjB,EAAUqkB,GAsBpB7T,EAAaxQ,IACTM,IAAK,eAULC,MAAO,ScpqLCmC,EAAQP,GACjByhB,EAAA5jB,EAAAgC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAnkB,EAAAgC,WAAA,eAAAnE,MAAAO,KAAAP,KAAmB6E,EAEnB,IAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK2O,UAAa,KAElB,IAAImK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAEdpF,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBd8qLhC1S,IAAK,mBACLC,MAAO,ScvqLK4kB,EAAShjB,GACtB,GAAIC,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUe,EAAK0O,QAASqU,GAE9C/iB,EAAK2O,UAAa,KAElB,IAAImK,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,EAEdpF,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBdkrLhC1S,IAAK,SACLC,MAAO,Sc1qLLsE,GACH,GAAIzC,GAAOvE,KAEPkb,EAAU3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MACtDF,EAAU5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OACtDvF,EAAUxR,EAAKoP,UAEnBpP,GAAK0e,IAAMjb,GAAGuV,IAAI0F,MACLE,YAAY,GACZG,YAAY/e,EAAK0O,QAAQoQ,QAGtC9e,EAAKwe,IAAM/a,GAAGshB,OAAOvG,MACRwG,KAAK,MACL7mB,MAAM,SAAS6E,GAAK,MAAOA,GAAE7E,QAE1C6B,EAAKiZ,KAAK3E,UAAU,yCAAyC7R,SAASsW,OAAOxE,QAG7E,IAAI0Q,GAAOjlB,EAAKiZ,KACHvE,OAAO,KACHC,KAAK,QAAS,wCACdA,KAAK,YAAa,aAAgBgC,EAAQ,EAAK,IAAOC,EAAS,EAAK,KACpEtC,UAAU,+BACV7R,KAAKzC,EAAKwe,IAAI/b,IAAO8Z,QACrB7H,OAAO,KACHC,KAAK,QAAS,6BAGnCsQ,GAAKvQ,OAAO,QACHC,KAAK,QAAS,+BACdA,KAAK,WAAY,SAAS3R,GAAK,MAAOA,GAAEP,KAAK,cAC7CkS,KAAK,IAAK3U,EAAK0e,KACf/J,KAAK,OAAQ,SAAS3R,EAAGnE,GAAK,MAAO2S,GAAM3S,KAC3C8V,KAAK,SAAU,WACf9U,KAAK,SAASmD,GAAKhD,EAAKye,YAAczb,IAe/ChD,EAAKke,uBdyqLJhgB,IAAK,gBACLC,MAAO,WcnqLR,GAAI6B,GAAOvE,IAEX,OAAOuE,GAAKiZ,KACC3E,UAAU,uCd4qLtBpW,IAAK,oBACLC,MAAO,WcrqLR,GAAI6B,GAAUvE,KACV+Y,EAAUxU,EAAKkf,gBAEfP,GADU3e,EAAKoP,WACI,GACnByP,EAAmB7e,EAAK0O,QAAQoQ,OAChCE,EAAkB,EAClBC,EAAwC,IAAtBjf,EAAK0O,QAAQoQ,OAC/B1B,EAAsBpd,EAAKgX,MAAMtI,QACjCmV,EAAsB7jB,EAAKgX,MAAMpF,OACjCyL,EAAsBD,EAAalG,YAAYnX,SAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAsBvd,EAAKuX,MAAMxX,SAEjC8X,EAAU,GAAA1a,cAAY6C,EAAK0O,QAAQmJ,QAGvC7X,GAAK8U,cACDyC,MAAS,SAASvU,EAAGnE,GACbxB,aAAOuD,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAMuH,IAInC+R,UAAa,SAAS/R,EAAGnE,GACrB,GAAKglB,EAAL,CAEIxmB,aAAOuD,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAMuH,EAGnC,IAAIwR,GAAW/Q,GAAG4Q,OAAO5Y,KAiBzB,IAhBA+Y,EAASU,aACAP,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYI,GACZD,YAAYE,IAIrBjf,EAAK0O,QAAQ+I,OAAO3D,MACpB9T,EAAKyX,OAAO6E,KAAKzc,KAAK,WACd4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAAegB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAChFlR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAMxC3U,EAAK0O,QAAQoJ,MAAMhE,KAAM,CACzB,GAAIiQ,GAAKtgB,GAAG6Q,UAAU,wCACtByP,GAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAEP,KAAK,cAAe6R,UAAU,MAAMO,MAAM,UAAW,MACvG,IAAImP,GAAeD,EAAGjE,OAAO,SAASjhB,GAAK,MAAOA,GAAE,aAAemE,EAAEP,KAAK,aAE1EuhB,GAAa1P,UAAU,MAAMO,MAAM,UAAW,KAC9CxX,aAAOqH,OAAOjB,GAAG4Q,OAAO,uBAAuB,GAAG,GAAI2P,EAAa,GAAG,GAAGC,UAAW,KAIxFjkB,EAAKkf,gBAAgBrf,KAAK,WAClB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAC5CgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCkD,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAG1BqV,SAAY,SAASrS,EAAGnE,GACpB,GAAKglB,EAAL,CAEIxmB,aAAOuD,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAMuH,EAGlC,IAAIwR,GAAW/Q,GAAG4Q,OAAO5Y,KACzB+Y,GAASU,aACAtQ,SAAS,KACTya,KAAK,UACL1K,KAAK,IAAKlR,GAAGuV,IAAI0F,MACbE,YAAYD,GACZI,YAAYF,IAIrB7e,EAAK0O,QAAQ+I,OAAO3D,MACpB9T,EAAKyX,OAAO6E,KAAKzc,KAAK,WACd4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAAegB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,gBAChFlR,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxC3U,EAAK0O,QAAQoJ,MAAMhE,MACnBrQ,GAAG6Q,UAAU,yCAAyCA,UAAU,MAAMO,MAAM,UAAW,IAK3F7U,EAAKkf,gBAAgBrf,KAAK,WAClB4D,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,cAAgB3R,EAAEP,KAAK,aAC5CgB,GAAG4Q,OAAO5Y,MAAMkZ,KAAK,UAAW,SAKxCkD,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAI9BwU,EAAS8J,GAAGte,EAAK8U,iBd8qLhB5W,IAAK,KACLC,MAAO,ScjqLTiW,EAAWrU,GACVyhB,EAAA5jB,EAAAgC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAnkB,EAAAgC,WAAA,KAAAnE,MAAAO,KAAAP,KAAS2Y,EAAWrU,EAEpB,IAAIC,GAAOvE,KACP+Y,EAAcxU,EAAKkf,gBAGnBpK,GACAsP,cAAe,SAASphB,GAChB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BqhB,kBAAmB,SAASrhB,GACpB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BshB,iBAAkB,SAASthB,GACnB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,KAK5BuhB,EAAYnQ,EAAY,QAE5BI,GAAS8J,GAAGiG,EAAWzP,EAAayP,OdyqLnCrmB,IAAK,OACLC,MAAO,WcnqLRqjB,EAAA5jB,EAAAgC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAnkB,EAAAgC,WAAA,OAAAnE,MAAAO,KAAAP,KAEA,IAAIuE,GAAOvE,IAEXuE,GAAK+P,aAAa/P,EAAKM,OAAQ,SAASmC,GACpC,GAAI+U,GAAU,GAAA3a,cAAUmD,EAAK0O,QAAQ8I,MAAOxX,GACxCyX,EAAU,GAAA1a,cAAWiD,EAAK0O,QAAQ+I,OAAQzX,EAAMA,EAAK4Q,YACrDkH,EAAU,GAAA7a,cAAU+C,EAAK0O,QAAQoJ,MAAO9X,EAAMA,EAAK4Q,WAEvD5Q,GAAKwX,MAAQA,EACbxX,EAAKyX,OAASA,EACdzX,EAAK8X,MAAQA,EAGb9X,EAAKwX,MAAM2M,OAGXnkB,EAAKgc,OAAOvZ,GACZzC,EAAKke,oBAGLle,EAAKyX,OAAO0M,OACZnkB,EAAKyX,OAAOyN,kCAAkCllB,EAAMA,EAAKkf,gBAAiBlf,EAAKwe,IAAKxe,EAAKye,YAAaze,EAAK0e,KAG3G1e,EAAK8X,MAAMqM,OACXnkB,EAAK8X,MAAMoN,kCAAkCllB,Qd+qLhD9B,IAAK,YACLC,MAAO,ScvqLFD,EAAKC,GACXqjB,EAAA5jB,EAAAgC,UAAA2hB,WAAAnjB,OAAA2jB,eAAAnkB,EAAAgC,WAAA,YAAAnE,MAAAO,KAAAP,KAAgByC,EAAKC,EAErB,IAAI6B,GAAOvE,IAEX4B,cAAOkE,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAE5B1O,EAAK+P,aAAa/P,EAAK0O,YdirLtBxQ,IAAK,aACLC,MAAO,Sc1qLDwf,EAAS8G,GAChB,GAAIzkB,GAAOvE,KAEPipB,IAECrnB,cAAOiC,QAAQmlB,GAShBC,EAAOjiB,MACHuN,MAAO2N,GARX+G,EAAOjiB,MACHuN,MAAO2N,EACPxd,KAAMskB,GAWdzkB,EAAK2kB,iBAAiBD,EAAQ,SAASjiB,GAEnCzC,EAAKgc,OAAOhc,EAAK4Q,YAGjB5Q,EAAKyX,OAAOuE,OAAOhc,EAAK4Q,YACxB5Q,EAAKyX,OAAOyN,kCAAkCllB,EAAMA,EAAKkf,gBAAiBlf,EAAKwe,IAAKxe,EAAKye,YAAaze,EAAK0e,KAG3G1e,EAAK8X,MAAMkE,OAAOhc,EAAK4Q,YACvB5Q,EAAK8X,MAAMoN,kCAAkCllB,Qd8qLhD9B,IAAK,MACL+C,IAAK,WczjMN,MAAOxF,MAAK0pB,MdkkMX5jB,IAAK,ScnjMFoS,GACAA,IACAlY,KAAK0pB,KAAOxR,MdujMfzV,IAAK,MACL+C,IAAK,WcrkMN,MAAOxF,MAAK2pB,MdwkMX7jB,IAAK,ScvjMFoS,GACAA,IACAlY,KAAK2pB,KAAOzR,Md2jMfzV,IAAK,cACL+C,IAAK,Wc3kMN,MAAOxF,MAAK4pB,cd8kMX9jB,IAAK,Sc3jMMoS,GACRA,IACAlY,KAAK4pB,aAAe1R,OdgkMpB/V,GACTnB,aAEFpB,cclnMoBuC,GdsnMf,SAAStC,EAAQD,EAASM,GAE/B,YA0CA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAAS6S,GAA2BhhB,EAAMhE,GAAQ,IAAKgE,EAAQ,KAAM,IAAIihB,gBAAe,4DAAgE,QAAOjlB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BgE,EAAPhE,EAElO,QAASklB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIjT,WAAU,iEAAoEiT,GAAeD,GAASvhB,UAAYxB,OAAOijB,OAAOD,GAAcA,EAAWxhB,WAAaD,aAAexB,MAAOgjB,EAAU7iB,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe6iB,IAAYhjB,OAAOkjB,eAAiBljB,OAAOkjB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GA9CjehjB,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MAE5hBsT,EAAO,QAASvgB,GAAIR,EAAQghB,EAAUC,GAA2B,OAAXjhB,IAAiBA,EAASkhB,SAAS/hB,UAAW,IAAIgiB,GAAOxjB,OAAOyjB,yBAAyBphB,EAAQghB,EAAW,IAAajhB,SAATohB,EAAoB,CAAE,GAAIE,GAAS1jB,OAAO2jB,eAAethB,EAAS,OAAe,QAAXqhB,EAAmB,OAAkC7gB,EAAI6gB,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKzjB,KAAgB,IAAI6jB,GAASJ,EAAK3gB,GAAK,IAAeT,SAAXwhB,EAA4C,MAAOA,GAAOhmB,KAAK0lB,Ie3oM7dllB,EAAAb,EAAA,Gf+oMKc,EAAML,EAAuBI,Ge7oMlCE,EAAAf,EAAA,GfipMKgB,EAAMP,EAAuBM,GehpMlCE,EAAAjB,EAAA,GfopMKkB,EAAMT,EAAuBQ,GenpMlCE,EAAAnB,EAAA,GfupMKoB,EAAMX,EAAuBU,GetpMlCE,EAAArB,EAAA,GACAuB,GfypMYd,EAAuBY,GezpMnCrB,EAAA,If6pMKwB,EAAOf,EAAuBc,Ge3pMnCE,EAAAzB,EAAA,Gf+pMK0B,EAAOjB,EAAuBgB,Ge9pMnCE,EAAA3B,EAAA,GfkqMK4B,EAAOnB,EAAuBkB,GehqMdO,Ef0qML,SAAUokB,GezqMtB,QAAApkB,GAAY6Q,GAASV,EAAAvS,KAAAoC,EAAA,IAAAqkB,GAAAlB,EAAAvlB,MAAAoC,EAAA0jB,WAAAnjB,OAAA2jB,eAAAlkB,IAAA7B,KAAAP,KACXiT,IAEF1O,GAHa,OAKjBA,GAAKM,QACDqpB,eAAgB,qBAChB3V,gBAAiB,KACjB8G,SAAU,EACVC,OAAQ,EACR6O,OAAO,EACPrU,WAAY,GACZsU,WAAY,GACZC,YAAa,GACbC,QAAS,MAdI7H,Efw0NpB,MA9pBAhB,GAAUrjB,EAAUokB,GA8BpB7T,EAAavQ,IACTK,IAAK,eAQLC,MAAO,SejmMCmC,EAAQP,GACjByhB,EAAA3jB,EAAA+B,UAAA2hB,WAAAnjB,OAAA2jB,eAAAlkB,EAAA+B,WAAA,eAAAnE,MAAAO,KAAAP,KAAmB6E,EAEnB,IAAIN,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUqB,EAAQN,EAAK0O,SAE7C1O,EAAK2O,UAAqB,WAC1B3O,EAAKgqB,SAAqB,EAC1BhqB,EAAKiqB,YAEL,IAAInR,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,CAElB,IAAIunB,GAAW,EACXE,EAAU,EACVC,EAAU,CACFnqB,GAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC3C9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAGrD/W,EAAK0O,QAAQkb,OAAiC,IAAxB5pB,EAAK0O,QAAQqM,QAA0C,IAA1B/a,EAAK0O,QAAQoM,YAEhE9a,EAAK4Q,WAAW7N,QAAQ,SAAUqnB,EAAO3Y,GAEjCzR,EAAK0O,QAAQkb,OAAuD,IAA9CxrB,OAAO+B,KAAKH,EAAKiqB,WAAWzG,QAAQ/R,KAC1DzR,EAAKiqB,UAAUxY,GAASuY,EACxBA,KAGJI,EAAMjsB,MAAM4E,QAAQ,SAAUW,EAAM7E,GACH,IAA1BmB,EAAK0O,QAAQoM,WACRpX,EAAK2O,MAAQ6X,GAAuB,IAAZA,KACxBA,EAAUxmB,EAAK2O,OACI,IAAxBrS,EAAK0O,QAAQqM,SACRrX,EAAK2O,MAAQ8X,IACbA,EAAUzmB,EAAK2O,OACf3O,EAAK4O,IAAM6X,IACXA,EAAUzmB,EAAK4O,UAKH,IAAxBtS,EAAK0O,QAAQqM,SACf/a,EAAK0O,QAAQqM,OAASoP,GAEM,IAA1BnqB,EAAK0O,QAAQoM,WACf9a,EAAK0O,QAAQoM,SAAWoP,IAI9BlqB,EAAKgqB,SAAWA,EAEhBhqB,EAAK6O,EAAIpL,GAAGC,KAAK+V,QACRoB,QAAQ7a,EAAK0O,QAAQoM,SAAU9a,EAAK0O,QAAQqM,SAC5CpB,OAAO,EAAG3Z,EAAK2W,QAEpBtZ,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBfgmMhC1S,IAAK,mBACLC,MAAO,Se5lMK4kB,EAAShjB,GAEtB,GAAIC,GAAOvE,IAEXuE,GAAK0O,QAAUrR,aAAO4B,UAAUe,EAAK0O,QAASqU,GAE9C/iB,EAAK2O,UAAqB,WAC1B3O,EAAKgqB,SAAqB,EAC1BhqB,EAAKiqB,YAEL,IAAInR,GAAsB9Y,EAAK8Y,UAC/BA,GAAW1J,WAAepP,EAAKoP,UAE/B,IAAI+S,GAAK,GAAA5kB,cAAgBub,EAAY9Y,EAAK2O,UAAW,KACrDwT,GAAGC,cAAcpiB,EAAK2O,UAAW,SAASlM,GACtCzC,EAAK4Q,WAAanO,CAElB,IAAIunB,GAAW,EACXE,EAAU,EACVC,EAAU,CACFnqB,GAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAC3C9W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,QAKrD/W,EAAK0O,QAAQkb,OAAiC,IAAxB5pB,EAAK0O,QAAQqM,QAA0C,IAA1B/a,EAAK0O,QAAQoM,YAEhE9a,EAAK4Q,WAAW7N,QAAQ,SAAUqnB,EAAO3Y,GAEjCzR,EAAK0O,QAAQkb,OAAuD,IAA9CxrB,OAAO+B,KAAKH,EAAKiqB,WAAWzG,QAAQ/R,KAC1DzR,EAAKiqB,UAAUxY,GAASuY,EACxBA,KAGJI,EAAMjsB,MAAM4E,QAAQ,SAAUW,EAAM7E,IAExB6E,EAAK2O,MAAQ6X,GAAuB,IAAZA,KACxBA,EAAUxmB,EAAK2O,OAEf3O,EAAK2O,MAAQ8X,IACbA,EAAUzmB,EAAK2O,OACf3O,EAAK4O,IAAM6X,IACXA,EAAUzmB,EAAK4O,SAM7BtS,EAAK0O,QAAQqM,OAASoP,EAGtBnqB,EAAK0O,QAAQoM,SAAWoP,GAI9BlqB,EAAKgqB,SAAWA,EAEhBhqB,EAAK6O,EAAIpL,GAAGC,KAAK+V,QACRoB,QAAQ7a,EAAK0O,QAAQoM,SAAU9a,EAAK0O,QAAQqM,SAC5CpB,OAAO,EAAG3Z,EAAK2W,QAEpBtZ,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKgE,EAAMA,EAAK4Q,iBf4lMhC1S,IAAK,SACLC,MAAO,SexlMLsE,GACH,GAAIzC,GAAOvE,KAEPkb,EAAQ3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAGpD2C,GAFSzZ,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAE7CJ,GAAS3W,EAAK0O,QAAQqM,OAAS/a,EAAK0O,QAAQoM,WAEpDtJ,EAAQxR,EAAKoP,WAEb6a,EAAYjqB,EAAKiqB,SAErBjqB,GAAKiZ,KAAK3E,UAAU,2BAA2B7R,SAASsW,OAAOxE,SAC/DvU,EAAKiZ,KAAK3E,UAAU,8CAA8C7R,SAASsW,OAAOxE,SAClFvU,EAAKiZ,KAAK3E,UAAU,qDAAqD7R,SAASsW,OAAOxE,SACzFvU,EAAKiZ,KAAK3E,UAAU,wCAAwC7R,SAASsW,OAAOxE,SAC5EvU,EAAKgZ,IAAI1E,UAAU,yCAAyCC,SAC5DvU,EAAKiZ,KAAK3E,UAAU,8BAA8BC,SAGlDvU,EAAKgZ,IAAI3E,OAAO,SAASA,OAAO,QAAQM,KAAK,UAAW3U,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAcpnB,EAAK1D,QAGlHiB,EAAKiZ,KAAKvE,OAAO,QACZC,KAAK,QAAS,0BACdA,KAAK,IAAK,GACVA,KAAK,QAASgC,GACdhC,KAAK,IAAK,EAAI3U,EAAK0O,QAAQmb,WAAa,GACxClV,KAAK,UAAW3U,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,aAAe7pB,EAAK0O,QAAQkb,MAAQ5pB,EAAKgqB,SAAW,IAC3GrV,KAAK,SAAU,sBACfA,KAAK,eAAgB,GACrBA,KAAK,OAAQ,OAElB,IAAI0V,GAAiBrqB,EAAKgZ,IAAItE,OAAO,KACZC,KAAK,QAAS,uCAEvClS,GAAKM,QAAS,SAASqnB,EAAO3Y,GAC1B,GAAI6Y,IAAatqB,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAcI,EAAUxY,EAIhF,IAHKzR,EAAK0O,QAAQkb,QAAOU,EAAW,KAG7BtqB,EAAK0O,QAAQkb,OAAkB,GAATnY,GAAezR,EAAK0O,QAAQkb,QAAU5pB,EAAK0O,QAAQsF,gBAAiB,CAC7F,GAAIuW,GAAcvqB,EAAKiZ,KAAKvE,OAAO,KACdC,KAAK,QAAS,4CAEnC4V,GAAYjW,UAAU,4BACjB7R,KAAK2nB,EAAMjsB,OAAOoe,QAClB7H,OAAO,QACPC,KAAK,QAAS,8BACdA,KAAK,IAAK,GACVA,KAAK,QAASgC,GACdhC,KAAK,IAAK2V,EAAWtqB,EAAK0O,QAAQmb,WAAa,GAC/ClV,KAAK,SAAU3U,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YACtDlV,KAAK,OAAQtX,aAAOuB,QAAQoB,EAAK0O,QAAQsF,iBAAmBhU,EAAK0O,QAAQsF,gBAAgBvC,EAAQzR,EAAKgqB,UAAYhqB,EAAK0O,QAAQsF,iBAGxI,KAAOhU,EAAK0O,QAAQkb,OAAkB,GAATnY,GAAezR,EAAK0O,QAAQkb,QAAU5pB,EAAK0O,QAAQqb,QAAS,CACrF,GAAIQ,GAAcvqB,EAAKiZ,KAAKvE,OAAO,KACdC,KAAK,QAAS,mDACnC4V,GAAYjW,UAAU,mCACjB7R,KAAK2nB,EAAMjsB,OAAOoe,QAClBiO,OAAO,QACP7V,KAAK,QAAS,qCACdA,KAAK,IAAK,GACVA,KAAK,QAASgC,GACdhC,KAAK,IAAK2V,EAAWtqB,EAAK0O,QAAQmb,WAAa,GAC/ClV,KAAK,SAAU3U,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YACtDlV,KAAK,OAAQlD,EAAQ,EAAI,qBAAuB,sBAIzD,GAAIgZ,GAAgBzqB,EAAKiZ,KAAKvE,OAAO,KACZC,KAAK,QAAS,uCACdA,KAAK,YAAa,aAyB3C,IAvBA8V,EAAcnW,UAAU,sBACnB7R,KAAK2nB,EAAMjsB,OAAOoe,QAClB7H,OAAO,SAAU1R,EAAGnE,GACjB,MAAO6rB,UAASC,gBAAgBlnB,GAAGmnB,GAAGC,OAAO7R,IAAc,gBAAThW,EAAEsP,IAAwB,OAAS;GAExFqC,KAAK,QAAS,2BAEdA,KAAK,IAAK,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK6O,EAAE7L,EAAEqP,SAC3CsC,KAAK,IAAK,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK8qB,iBAAiB9nB,EAAGnE,EAAG4S,KAI9DkD,KAAK,QAAS,SAAU3R,EAAGnE,GACxB,MAAOmB,GAAK6O,EAAE7L,EAAEsP,KAAOtS,EAAK6O,EAAE7L,EAAEqP,SAEnCsC,KAAK,KAAM,SAAU3R,EAAGnE,GACrB,MAAOmB,GAAK8qB,iBAAiB9nB,EAAGnE,EAAG4S,GAASzR,EAAK0O,QAAQ6G,WAAa,IAEzEZ,KAAK,KAAM,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK+qB,QAAQ/nB,EAAEnE,EAAE4a,KACpD9E,KAAK,IAAK3U,EAAK0O,QAAQ6G,WAAa,GACpCZ,KAAK,SAAU3U,EAAK0O,QAAQ6G,YAC5BV,MAAM,OAAQrD,EAAMC,IAErBzR,EAAK0O,QAAQkb,OAAS5pB,EAAK0O,QAAQib,gBAAkBlY,EAAQzR,EAAKgqB,SAAW,EAAG,CAChF,GAAIgB,GAAchrB,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,WAAa,GAAK7pB,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAcI,EAAUxY,EAC1IzR,GAAKiZ,KAAKvE,OAAO,YACdC,KAAK,QAAS,6BACdA,KAAK,KAAM,GACXA,KAAK,KAAMgC,GACXhC,KAAK,KAAMqW,GACXrW,KAAK,KAAMqW,GACXrW,KAAK,eAAgB,GACrBA,KAAK,SAAUtX,aAAOuB,QAAQoB,EAAK0O,QAAQib,gBAAkB3pB,EAAK0O,QAAQib,eAAelY,GAASzR,EAAKgqB,SAAW,IAAMhqB,EAAK0O,QAAQib,gBAI5I,GAAI3pB,EAAK0O,QAAQkb,QAAUvsB,aAAOiC,QAAQ8qB,EAAMxb,OAAuB,IAAdwb,EAAMxb,KAAY,CACvE,GAAIqc,GAAWjrB,EAAK6W,OAAOhB,KAAO7V,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,aAAoCrpB,SAArBypB,EAAUxY,GAAuB,EAAIwY,EAAUxY,IAAoC,IAA1BzR,EAAK0O,QAAQ6G,UAE9J8U,GAAe3V,OAAO,QACjBC,KAAK,QAAS,qBACdA,KAAK,YAAa,aAAe3U,EAAK0O,QAAQob,YAAc,IAAMmB,EAAW,KAC7E7X,KAAKgX,EAAMxb,UAGX5O,GAAK0O,QAAQkb,QAAUvsB,aAAOiC,QAAQ8qB,EAAMpb,OAAuB,IAAdob,EAAMpb,MAChEqb,EAAe3V,OAAO,SACjBC,KAAK,QAAS,qBACdA,KAAK,YAAa,aAAc3U,EAAK0O,QAAQob,YAAa,KAAM9pB,EAAK6W,OAAOhB,KAAO7V,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAcI,EAAUxY,IAAQ,KAC1JkD,KAAK,aAAcyV,EAAMpb,MACzB2F,KAAK,QAAS3U,EAAK0O,QAAQ6G,YAC3BZ,KAAK,SAAU3U,EAAK0O,QAAQ6G,cAIzCvV,EAAKke,uBfijMJhgB,IAAK,iBACLC,MAAO,Se5iMGsE,GACX,GAAIzC,GAAOvE,IAEX,IAAIuE,EAAK0O,QAAQkK,SAAS9E,KAAM,CAC5B,GAAI6C,GAAQ3W,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,MAIpDkQ,GAHShnB,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OAG1C/W,EAAKiZ,KAAK4H,OAAOoG,UAEhCjnB,GAAKmnB,aAAeH,EAASpQ,OAI7B5W,EAAKonB,cAAgBzQ,EACrB3W,EAAKqnB,eAAiBrnB,EAAK0O,QAAQkK,SAAShC,OAC5C5W,EAAKsnB,gBACDzR,IAAO7V,EAAKmnB,aAAe,IAC3BzR,KAAQ1V,EAAK6W,OAAOnB,MAGxB1V,EAAK6d,UAAYpa,GAAGC,KAAK+V,QAAQE,OAAO,EAAG3Z,EAAKonB,gBAEhDpnB,EAAK6d,UAAUhD,QAAQ7a,EAAK0O,QAAQoM,SAAU9a,EAAK0O,QAAQqM,SAE3D/a,EAAK+d,cAAgBta,GAAGuV,IAAId,OACXuB,MAAMzZ,EAAK6d,WACX5C,OAAO,UAExBjb,EAAKwnB,MAAQ/jB,GAAGuV,IAAIwO,QACH3Y,EAAE7O,EAAK6d,WACPS,GAAG,QAAS,WAETte,EAAK6O,EAAEgM,OAAO7a,EAAKwnB,MAAMC,QAAUznB,EAAK6d,UAAUhD,SAAW7a,EAAKwnB,MAAMjB,UAExEvmB,EAAK0O,QAAQoM,SAAW9a,EAAK6O,EAAEgM,SAAS,GACxC7a,EAAK0O,QAAQqM,OAAS/a,EAAK6O,EAAEgM,SAAS,GAEtC7a,EAAKkY,KAAK8D,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,IACrB6H,IAAS3W,EAAK0O,QAAQqM,OAAS/a,EAAK0O,QAAQoM,SAGxD9a,GAAKiZ,KAAK3E,UAAU,4BACXK,KAAK,IAAK,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK6O,EAAE7L,EAAEqP,SAC3CsC,KAAK,QAAS,SAAU3R,EAAGnE,GACxB,MAAOmB,GAAK6O,EAAE7L,EAAEsP,KAAOtS,EAAK6O,EAAE7L,EAAEqP,UAUhE,IAEIb,IAFQmF,GAAS3W,EAAK0O,QAAQqM,OAAS/a,EAAK0O,QAAQoM,UAE5C9a,EAAKoP,WAEjBpP,GAAKgZ,IAAIrE,KAAK,SAAU3U,EAAK4W,OAAS5W,EAAKqnB,gBAE3CrnB,EAAKgZ,IAAI1E,UAAU,uBAAuBC,SAC1CvU,EAAKgZ,IAAI1E,UAAU,yCAAyCC,QAE5D,IAAIoT,GAAW3nB,EAAKgZ,IAAItE,OAAO,KACdC,KAAK,QAAS,sBAEdA,KAAK,YAAa,aAAe3U,EAAKsnB,eAAe5R,KAAO,IAAM1V,EAAKsnB,eAAezR,IAAM,KAEzG4U,EAAgB9C,EAASjT,OAAO,KACXC,KAAK,QAAS,oDAGvClS,GAAKM,QAAQ,SAASqnB,EAAO3Y,GACpB2Y,EAAMxY,QAEX6Y,EAAcnW,UAAU,mCACnB7R,KAAK2nB,EAAMjsB,OAAOoe,QAClB7H,OAAO,SAAU1R,EAAGnE,GACjB,MAAO6rB,UAASC,gBAAgBlnB,GAAGmnB,GAAGC,OAAO7R,IAAc,gBAAThW,EAAEsP,IAAwB,OAAS,YAExFqC,KAAK,QAAS,2BAEdA,KAAK,IAAK,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK6d,UAAU7a,EAAEqP,SACnDsC,KAAK,IAAK,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK8qB,iBAAiB9nB,EAAGnE,EAAI4S,GAAO,KAItEkD,KAAK,QAAS,SAAU3R,EAAGnE,GACxB,MAAOmB,GAAK6d,UAAU7a,EAAEsP,KAAOtS,EAAK6d,UAAU7a,EAAEqP,SAEnDsC,KAAK,KAAM,SAAU3R,EAAGnE,GACrB,MAAOmB,GAAK8qB,iBAAiB9nB,EAAGnE,EAAG4S,GAASzR,EAAK0O,QAAQ6G,WAAa,IAGzEZ,KAAK,KAAM,SAAS3R,EAAGnE,GAAK,MAAOmB,GAAK6d,UAAU7a,EAAEqP,SACpDsC,KAAK,IAAK3U,EAAK0O,QAAQ6G,WAAa,GACpCZ,KAAK,SAAU3U,EAAK0O,QAAQ6G,WAAa,GACzCV,MAAM,OAAQrD,EAAMC,MAI7BgZ,EAAc/V,OAAO,KAChBC,KAAK,QAAS,oBACdA,KAAK,YAAa,eAAiB3U,EAAKqnB,eAAiB,KACzDrrB,KAAKgE,EAAK+d,eAGf0M,EAAc/V,OAAO,KAChBC,KAAK,QAAS,qBACd3Y,KAAKgE,EAAKwnB,OACVlT,UAAU,QACVK,KAAK,SAAU3U,EAAKqnB,oBfmiM5BnpB,IAAK,gBACLC,MAAO,We3hMR,GAAI6B,GAAOvE,IAEX,OAAOuE,GAAKiZ,KACC3E,UAAU,+BfoiMtBpW,IAAK,oBACLC,MAAO,We7hMR,GAAI6B,GAAUvE,KACV+Y,EAAUxU,EAAKkrB,gBACf9N,EAAsBpd,EAAKgX,MAAMtI,QACjCmV,EAAsB7jB,EAAKgX,MAAMpF,OACjCyL,EAAsBD,EAAalG,YAAYnX,SAC/Cud,EAAsBF,EAAahG,WAAWrX,SAC9Cwd,EAAsBvd,EAAKuX,MAAMxX,SAEjC8X,EAAU,GAAA1a,cAAY6C,EAAK0O,QAAQmJ,QAGvC7X,GAAK8U,cACDyC,MAAS,SAASvU,EAAGnE,GACbxB,aAAOuD,WAAW2c,IAClBA,EAAgBvhB,KAAKP,KAAMuH,IAInC+R,UAAa,SAAS/R,EAAGnE,GAChBglB,IAEDxmB,aAAOuD,WAAWyc,IAClBA,EAAoBrhB,KAAKP,KAAMuH,GAGnCS,GAAG4Q,OAAO5Y,MAAMoZ,MAAM,OAAQ,SAAU7R,EAAGnE,GAAK,MAAOmB,GAAKkkB,gBAAgBlhB,EAAEwO,OAASA,MAAM3S,MAE7FgZ,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAG1BqV,SAAY,SAASrS,EAAGnE,GACfglB,IAEDxmB,aAAOuD,WAAW0c,IAClBA,EAAmBthB,KAAKP,KAAMuH,GAGlCS,GAAG4Q,OAAO5Y,MAAMoZ,MAAM,OAAQ,SAAU7R,EAAGnE,GAAK,MAAOmE,GAAEwO,OAASA,MAAM3S,KAExEgZ,EAAQsM,KAAKnhB,EAAGhD,EAAM,eAI9BwU,EAAS8J,GAAGte,EAAK8U,iBfqiMhB5W,IAAK,UACLC,MAAO,SeniMJ6E,EAAGnE,EAAG4a,GACV,GAAIzZ,GAAOvE,IACX,QAAQuH,EAAEqP,MAAQrS,EAAK0O,QAAQoM,UAAYrB,KfsiM1Cvb,IAAK,mBACLC,MAAO,SepiMK6E,EAAGnE,EAAG4S,EAAO0Z,GAC1B,GAAInrB,GAAOvE,KAEPwuB,EAAYjqB,EAAKiqB,SAErB,IAAIjqB,EAAK0O,QAAQkb,MAAO,CACpB,GAAIuB,EAAY,CACZ,GAAIvU,GAAS5W,EAAK4W,OAAS5W,EAAK6W,OAAOhB,IAAM7V,EAAK6W,OAAOE,OACrDqU,EAAQprB,EAAKqnB,eAAiBzQ,CAElC,QAAQ5W,EAAK0O,QAAQ6G,WAAc6V,EAAQprB,EAAK0O,QAAQmb,YAAcI,EAAUxY,GAEhF,OAAQzR,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAcI,EAAUxY,GAG/E,MAAO,MfqjMNvT,IAAK,KACLC,MAAO,SeviMTiW,EAAWrU,GACVyhB,EAAA3jB,EAAA+B,UAAA2hB,WAAAnjB,OAAA2jB,eAAAlkB,EAAA+B,WAAA,KAAAnE,MAAAO,KAAAP,KAAS2Y,EAAWrU,EAEpB,IAAIC,GAAOvE,KACP+Y,EAAcxU,EAAKkrB,gBAGnBpW,GACAsP,cAAe,SAASphB,GAChB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BqhB,kBAAmB,SAASrhB,GACpB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,IAG5BshB,iBAAkB,SAASthB,GACnB3F,aAAOuD,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMuH,KAK5BuhB,EAAYnQ,EAAY,QAE5BI,GAAS8J,GAAGiG,EAAWzP,EAAayP,Of+iMnCrmB,IAAK,OACLC,MAAO,WeziMRqjB,EAAA3jB,EAAA+B,UAAA2hB,WAAAnjB,OAAA2jB,eAAAlkB,EAAA+B,WAAA,OAAAnE,MAAAO,KAAAP,KAEA,IAAIuE,GAAOvE,IAEXuE,GAAK+P,aAAa/P,EAAKM,OAAQ,SAASmC,GACpC,GAAIyV,GAAU,GAAAvb,cAASqD,EAAK0O,QAAQwJ,KAAMlY,EAAMA,EAAK2W,MAAQ3W,EAAK6W,OAAOnB,KAAO1V,EAAK6W,OAAOC,OAAQ9W,EAAK0O,QAAQ6G,WAAavV,EAAK0O,QAAQmb,YAAc7pB,EAAKgqB,UAC1JxS,EAAU,GAAA3a,cAAUmD,EAAK0O,QAAQ8I,MAAOxX,GACxCyX,EAAU,GAAA1a,cAAWiD,EAAK0O,QAAQ+I,OAAQzX,EAAMA,EAAKoP,WAAY3M,EAErEzC,GAAKkY,KAAOA,EACZlY,EAAKwX,MAAQA,EACbxX,EAAKyX,OAASA,EAGdzX,EAAKwX,MAAM2M,OAGXnkB,EAAKkY,KAAKiM,OAEVnkB,EAAKgc,OAAOvZ,GACZzC,EAAKge,eAAevb,GACpBzC,EAAKke,yBfqjMRhgB,IAAK,YACLC,MAAO,Se7iMFD,EAAKC,GACXqjB,EAAA3jB,EAAA+B,UAAA2hB,WAAAnjB,OAAA2jB,eAAAlkB,EAAA+B,WAAA,YAAAnE,MAAAO,KAAAP,KAAgByC,EAAKC,EAErB,IAAI6B,GAAOvE,IAEX4B,cAAOkE,IAAIrD,EAAKC,EAAO6B,EAAK0O,SAE5B1O,EAAK+P,aAAa/P,EAAK0O,YfujMtBxQ,IAAK,aACLC,MAAO,SehjMDwf,EAAS8G,GAChB,GAAIzkB,GAAOvE,KAEPipB,IAECrnB,cAAOiC,QAAQmlB,GAShBC,EAAOjiB,MACHuN,MAAO2N,GARX+G,EAAOjiB,MACHuN,MAAO2N,EACPxd,KAAMskB,GAYdzkB,EAAK2kB,iBAAiBD,EAAQ,SAASjiB,GACnCzC,EAAKgc,OAAOvZ,GACZzC,EAAKge,eAAevb,GAGpBzC,EAAKkY,KAAK8D,OAAOhc,EAAK6O,EAAG7O,EAAK8O,EAAG,UfojMpC5Q,IAAK,WACL+C,IAAK,We1tNN,MAAOxF,MAAK4vB,WfmuNX9pB,IAAK,SehsNGoS,GACLA,IACAlY,KAAK4vB,UAAY1X,MfosNpBzV,IAAK,YACL+C,IAAK,WetuNN,MAAOxF,MAAKwtB,YfyuNX1nB,IAAK,SepsNIoS,GACNA,IACAlY,KAAKwtB,WAAatV,MfwsNrBzV,IAAK,gBACL+C,IAAK,We5uNN,MAAOxF,MAAK6tB,gBf+uNX/nB,IAAK,SexsNQoS,GACVA,IACAlY,KAAK6tB,eAAiB3V,Mf4sNzBzV,IAAK,gBACL+C,IAAK,WelvNN,MAAOxF,MAAK0tB,gBfqvNX5nB,IAAK,Se5sNQoS,GACVA,IACAlY,KAAK0tB,eAAiBxV,MfgtNzBzV,IAAK,iBACL+C,IAAK,WexvNN,MAAOxF,MAAK2tB,iBf2vNX7nB,IAAK,SehtNSoS,GACXA,IACAlY,KAAK2tB,gBAAkBzV,MfotN1BzV,IAAK,iBACL+C,IAAK,We9vNN,MAAOxF,MAAK4tB,iBfiwNX9nB,IAAK,SeptNSoS,GACXA,IACAlY,KAAK4tB,gBAAkB1V,MfwtN1BzV,IAAK,QACL+C,IAAK,WepwNN,MAAOxF,MAAK8tB,QfuwNXhoB,IAAK,SextNAoS,GACFA,IACAlY,KAAK8tB,OAAS5V,Mf4tNjBzV,IAAK,YACL+C,IAAK,We1wNN,MAAOxF,MAAK6vB,Yf6wNX/pB,IAAK,Se5tNIoS,GACNA,IACAlY,KAAK6vB,WAAa3X,OfiuNlB9V,GACTpB,aAEFpB,ce50NoBwC,Gfg1Nf,SAASvC,EAAQD,EAASM,GAE/B,YAoBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAAS2R,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCApBhH/P,OAAOC,eAAehD,EAAS,cAC3B8C,OAAO,GAGX,IAAIiQ,GAAe,WAAc,QAASC,GAAiBnP,EAAQoP,GAAS,IAAK,GAAIzP,GAAI,EAAGA,EAAIyP,EAAMvP,OAAQF,IAAK,CAAE,GAAI0P,GAAaD,EAAMzP,EAAI0P,GAAWjQ,WAAaiQ,EAAWjQ,aAAc,EAAOiQ,EAAWhQ,cAAe,EAAU,SAAWgQ,KAAYA,EAAW/P,UAAW,GAAMJ,OAAOC,eAAea,EAAQqP,EAAWrQ,IAAKqQ,IAAiB,MAAO,UAAUL,EAAaM,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBH,EAAYtO,UAAW4O,GAAiBC,GAAaJ,EAAiBH,EAAaO,GAAqBP,MgBn2NjiB1R,EAAAb,EAAA,GhBu2NKc,EAAML,EAAuBI,GgBt2NlCE,EAAAf,EAAA,GACAiB,GhBy2NWR,EAAuBM,GgBz2NlCf,EAAA,IhB62NKkB,EAAMT,EAAuBQ,GgB52NbkB,EhBk3NV,WgBj3NP,QAAAA,GAAY4Q,GAASV,EAAAvS,KAAAqC,EACjB,IAAIkC,GAAUvE,KACV6E,GAEAxE,GAAI,OAIJyvB,OAAQ,KACRC,MACIC,IAAK,EACLC,IAAK,EACLC,KAAM,GAEVlpB,KAAM,KACNoV,SACIrU,OAAQ,MAIhBxD,GAAK4P,SAAWnT,aAAOwC,UAAUqB,EAAQoO,GACzC1O,EAAKyP,YAAmBzP,EAAK4P,SAASnN,KACtCzC,EAAK4rB,gBhBk9PR,MA/jCAxd,GAAatQ,IACTI,IAAK,gBAQLC,MAAO,WgBpzNR,GAAI6B,GAAOvE,IAGXuE,GAAK6rB,YAIL7rB,EAAK8rB,OAAS,GAAIC,IAAG5sB,OAAO6sB,WAC5BhsB,EAAKisB,iBAILjsB,EAAKksB,WASL,IAAIC,GAAQzB,SAAS0B,cAAc,MACnCD,GAAMrwB,GAAK,aACXqwB,EAAME,UAAY,sEAClB3B,SAASzR,KAAKqT,YAAYH,MhBwzNzBjuB,IAAK,OACLC,MAAO,WgBrzNR,GAAI6B,GAAOvE,KACP+vB,EAAOxrB,EAAK0O,QAAQ8c,KACpB1vB,EAAOkE,EAAK0O,QAAQ5S,EAExBkE,GAAKusB,OAAS,GAAIR,IAAGS,MACjBC,OAAQV,GAAGW,KAAKC,YAAYnB,EAAKE,IAAKF,EAAKC,MAC3CE,KAAMH,EAAKG,KAAO,EAAIH,EAAKG,KAAO,EAClCiB,QAAS,IAEb5sB,EAAK6sB,MAAQ,GAAId,IAAGjuB,KAChBoB,OAAQpD,EACRyvB,OAAQvrB,EAAK6rB,SACbL,KAAMxrB,EAAKusB,OACXO,aAAef,GAAGgB,YAAYC,UAAUC,iBAAiB,MAI7DjtB,EAAKktB,YAAc,GAAInB,IAAGoB,MAAMnB,QAC5B7sB,OAAQa,EAAK8rB,OACbvY,IAAKvT,EAAK6sB,QAKd7sB,EAAKotB,QAAU,GAAIrB,IAAGsB,SAClBC,YAAa,gBACb3oB,QAAS+lB,SAAS6C,eAAe,gBAIrCvtB,EAAK6sB,MAAMW,WAAWxtB,EAAKotB,SAI3BptB,EAAKytB,cAAgB,GAAI1B,IAAGoB,MAAMnB,QAC9B7sB,OAAQ,GAAI4sB,IAAG5sB,OAAO6sB,OACtBzY,IAAKvT,EAAK6sB,MACVhY,MAAO,GAAIkX,IAAGlX,MAAM6Y,OAChBlI,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBnc,MAAO,mBACPmF,MAAO,IAEX4O,KAAM,GAAIwG,IAAGlX,MAAM+Y,MACfpc,MAAO,iCAMnBxR,EAAK6tB,QAAQ7tB,EAAKmQ,YAElBnQ,EAAKke,uBhBi0NJhgB,IAAK,cACLC,MAAO,SgBzzNAuQ,GACR,GAAI1O,GAAOvE,IACX,KAAIgB,aAAO6C,QAAQoP,GAAnB,CAEA,GAAIhM,GAAOgM,EAAQhM,MAAQ,OACvBvD,EAASuP,EAAQvP,SAAWyP,KAAM,OAGlCue,EAAQ,GAAIpB,IAAGoB,MAAMzqB,EACzByqB,GAAMW,UAAU9tB,EAAK+tB,YAAY5uB,GAKjC,IAA2B6uB,GAAvBC,GAAiB,CACrB,KACID,EAAKb,EAAMe,YACXF,EAAGG,cAEP,MAAOjb,GACH,IACI8a,EAAKb,EAAMe,YAAYA,YACvBF,EAAGG,cAEP,MAAOjb,GACH+a,GAAiB,GAIzB,GAAIA,EAAgB,CAChB,GAAIG,GAAa,SAASC,GACtB,GAAIC,KAKJ,OAJAD,GAAQE,UAAUxrB,QAAQ,SAASiQ,GAC/Bsb,EAAOtb,GAAKqb,EAAQG,gBAAgBxb,KAExCsb,EAAA,GAAeD,EAAQI,QAChBH,GAEPI,EAAW,WACX,IAAKjyB,aAAO6C,QAAQoP,EAAQmG,OACxB,IACI7U,EAAK0uB,UAAUryB,IAAK8wB,EAAMe,YAAarZ,MAAOnG,EAAQmG,QAE1D,MAAO3B,GACH,IACIlT,EAAK0uB,UAAUryB,IAAK2xB,EAAInZ,MAAOnG,EAAQmG,QAE3C,MAAO3B,GACH,IACIlT,EAAK0uB,UAAUryB,IAAK8wB,EAAOtY,MAAOnG,EAAQmG,QAE9C,MAAO3B,GACH,KAAM,sCAQ1B8a,GAAGW,KAAK,SAAU,SAAShP,GACvB,GAAqB,SAAjBqO,EAAGY,WAAuB,CAC1B,GAAIC,GAAOb,EAAGG,aAUd,IATAnuB,EAAKisB,cAAc9oB,KAAKgqB,EAAMe,aAG9BW,EAAK9rB,QAAQ,SAAS+rB,GAClBA,EAAEvtB,IAAI,OAAQ6sB,EAAWU,IACzBA,EAAEvtB,IAAI,OAAQ,gBAIb9E,aAAO6C,QAAQoP,EAAQjM,QAAShG,aAAOmE,WAAW8N,EAAQjM,KAAKssB,YAAetyB,aAAO6C,QAAQoP,EAAQjM,KAAKwN,OAAUxT,aAAO6C,QAAQoP,EAAQjM,KAAKwN,KAAKC,MAASzT,aAAO6C,QAAQoP,EAAQjM,KAAKwN,KAAKvN,MA+BhMgsB,QA/BuM,CACvM,GAAIvM,GAAK,GAAAtlB,cAAgB6R,EAAQjM,KACjC0f,GAAGC,cAAc,GAAI,SAAS3f,GAC1B,GAAIssB,GAAYrgB,EAAQjM,KAAKssB,UACzBC,EAAUtgB,EAAQjM,KAAKusB,SAEtBvyB,aAAO6C,QAAQ0vB,IAAYvyB,aAAOmE,WAAWouB,KAC9CvsB,EAAOusB,EAAQvsB,IAEnBosB,EAAK9rB,QAAQ,SAAS+rB,GAClB,GAAIryB,aAAOmC,QAAQ6D,IACf,IAAK,GAAI5D,GAAI,EAAGA,EAAI4D,EAAK1D,OAAQF,IAC7B,GAAIkwB,EAAUD,EAAGrsB,EAAK5D,IAAK,CACvB,IAAK,GAAIowB,KAAKxsB,GAAK5D,GACfiwB,EAAE7tB,IAAI,QAAQguB,GAAKxsB,EAAK5D,GAAGowB,EAE/B,YAKR,IAAIF,EAAUD,EAAGrsB,GACb,IAAK,GAAI5D,KAAK4D,GACVqsB,EAAE7tB,IAAI,QAAQpC,GAAK4D,EAAK5D,KAIxC6vB,UAepB,MALA1uB,GAAK6rB,SAAS1oB,KAAKgqB,GAEd1wB,aAAO6C,QAAQU,EAAK6sB,QACrB7sB,EAAK6sB,MAAMqC,SAAS/B,GAEjBA,MhBqzNNjvB,IAAK,YACLC,MAAO,WgB/yNR,GAAI6B,GAAOvE,KACP8vB,EAASvrB,EAAK0O,QAAQ6c,MAEtBA,aAAkB5sB,OAClB4sB,EAAOxoB,QAAQ,SAASkB,EAAGpF,GACvBmB,EAAKmvB,aAAazsB,KAAMuB,EAAEvB,KAAMvD,OAAQ8E,EAAE9E,OAAQ0V,MAAO5Q,EAAE4Q,MAAOka,UAAW9qB,EAAE8qB,UAAWtsB,KAAMwB,EAAExB,SAGjGhG,aAAO4C,SAASksB,IACrBvrB,EAAKmvB,aAAazsB,KAAM6oB,EAAO7oB,KAAMvD,OAAQosB,EAAOpsB,OAAQ0V,MAAO0W,EAAO1W,MAAOka,UAAWxD,EAAOwD,UAAWtsB,KAAM8oB,EAAO9oB,UhB0zN9HvE,IAAK,cACLC,MAAO,SgBlzNA8E,GACR,GAAI9D,GAASqB,MACb,QAAQyC,EAAE2L,MACN,IAAK,WACDzP,EAAS,GAAI4sB,IAAG5sB,OAAOiwB,UACnBlxB,IAAK+E,EAAE/E,IACPmxB,WAAYpsB,EAAEosB,YAAc,QAEhC,MACJ,KAAK,SACDlwB,EAAS,GAAI4sB,IAAG5sB,OAAOmwB,QACnBnC,MAAOlqB,EAAEkqB,OAAS,cAEtB,MAEJ,KAAK,WACDhuB,EAAS,GAAI4sB,IAAG5sB,OAAOowB,UACnBrf,IAAKjN,EAAEiN,IACPsf,YAAavsB,EAAEusB,aAAe,aAElC,MACJ,KAAK,iBACDrwB,EAAS,GAAI4sB,IAAG5sB,OAAOswB,gBACnBvf,IAAKjN,EAAEiN,KAEX,MACJ,KAAK,SACD/Q,EAAS,GAAI4sB,IAAG5sB,OAAO6sB,QACnB9b,IAAKjN,EAAEiN,IACP1M,OAAqBhD,SAAbyC,EAAEO,OAAuB,KAAO,GAAIuoB,IAAGvoB,OAAOP,EAAEO,SACpDksB,cAAezsB,EAAEysB,gBAAiB,KAG1C,MACJ,KAAK,UACDvwB,EAAS,GAAI4sB,IAAG5sB,OAAOwwB,SACnBC,SAAU3sB,EAAE2sB,UAAY,GACxBzwB,OAAQ1D,KAAKsyB,YAAY9qB,EAAE9D,SAE/B,MACJ,KAAK,cACDA,EAAS,GAAI4sB,IAAG5sB,OAAO0wB,aACnB1wB,OAAQ1D,KAAKsyB,YAAY9qB,EAAE9D,QAE3B0V,MAAO,GAAIkX,IAAGlX,MAAM6Y,OAChBnI,KAAM,GAAIwG,IAAGlX,MAAM+Y,MACfpc,MAAO,6BAEXgU,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBnc,MAAO,UACPmF,MAAO,OAInB,MACJ,SACIxX,EAAS,GAAI4sB,IAAG5sB,OAAO2wB,IAK/B,MAAO3wB,MhB0zNNjB,IAAK,oBACLC,MAAO,WgBpzNR,GAAI6B,GAAOvE,KACLs0B,EAAW,GAAIC,EAAY,GAAIC,EAAU,GAAIC,EAAW,IAAMC,EAAiB,IAYjFC,EAAkB,SAAS5rB,GAC3B,MAAOunB,IAAGW,KAAK2D,UAAUC,EAAU9rB,GAAI,YAAa,cAEpD8rB,EAAY,SAAS9rB,GACrB,MAAOunB,IAAGxF,OAAO+J,UAAU9rB,EAAE+rB,cAAcC,cAE3CC,EAAuB,SAASv0B,GAChC,MAAO6vB,IAAGW,KAAK2D,UAAUn0B,EAAG,YAAa,cAMzCw0B,EAAe,SAASrC,GACxB,GAAIruB,EAAKusB,OAAO+D,YAAY,IAAMA,EAAUjC,GAAS,IAAMruB,EAAKusB,OAAO+D,YAAY,IAAMA,EAAUjC,GAAS,GAA5G,CAEA,GAAIsC,GAAM5E,GAAG6E,UAAUD,KACnB/rB,SAAUsrB,EACV/wB,OAASa,EAAKusB,OAAO+D,aAEzBtwB,GAAK6sB,MAAMgE,aAAaF,GACxB3wB,EAAKusB,OAAOuE,UAAUR,EAAUjC,MAMhC0C,EAAqB,SAAS1C,GAK9B,QAAS2C,GAAQrb,GACb,GAAIsb,GAAgBtb,EAAMsb,cACtBC,EAAavb,EAAMub,WACnBC,EAAY9C,EAAQkC,cAAca,QAClCC,EAAUH,EAAWxtB,KAAO2O,EAC5Bif,EAAeD,EAAUzsB,EAEzBka,EAA2C,GAAlCiN,GAAGwF,OAAOC,QAAQF,GAAqB,EAChD5L,EAAUqG,GAAGwF,OAAOC,QAAQ,EAAIF,GAEhCzc,EAAQ,GAAIkX,IAAGlX,MAAM6Y,OACrB+D,MAAO,GAAI1F,IAAGlX,MAAM6c,QAChB5S,OAAQA,EACR6S,aAAa,EACbnM,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBnc,MAAO,mBAAqBkU,EAAU,IACtC/O,MAAO,IAAO+O,OAO1B,OAFAuL,GAAcvC,SAAS7Z,GACvBoc,EAAcW,aAAaT,GACvBE,EAAUzsB,MACVmnB,IAAG8F,WAAWC,QAAQC,OAI1B/xB,GAAK6sB,MAAMmF,SAhCf,GAEID,GAFAntB,EAAW,IACXyN,GAAQ,GAAIE,OAAO0f,SAiCvBF,GAAc/xB,EAAK6sB,MAAMvO,GAAG,cAAe0S,IAO3CkB,EAAuB,SAAS1tB,GAChC,GAAIioB,GAASgE,EAAqBzwB,EAAKusB,OAAO+D,aAC1C6B,EAAe/B,EAAgB5rB,EACnC,QAAQ5C,KAAKwwB,KAAKxwB,KAAKywB,IAAIF,EAAa,GAAK1F,EAAO,GAAI,GAAK7qB,KAAKywB,IAAIF,EAAa,GAAK1F,EAAO,GAAI,IAAM0F,EAAa,GAAK1F,EAAO,IAAO,IAEzI6F,EAAc,SAAS7vB,GACvB,IAAIhG,aAAO6C,QAAQmD,GAAnB,CACA,GAE4CF,GAFxCgwB,EAAwB,SAASC,GAAU,MAAOA,GAAOC,OAAO,GAAGC,cAAgBF,EAAOruB,MAAM,IAChGwuB,EAAa,SAASC,EAAQC,GAAQ,MAAY,IAARA,GAAcp2B,aAAO6C,QAAQuzB,IAASp2B,aAAO4C,SAASwzB,GAAc,GAAW,WAAaN,EAAsBK,GAAU,oBAA2BC,EAAO,gBACxMvE,EAASqE,EAAW,OAAQlwB,EAAKmM,KAChCnS,cAAO6C,QAAQmD,EAAKsM,QAAOuf,GAAWqE,EAAW,MAAOlwB,EAAKsM,KAAK2c,KAAOjpB,EAAKsM,KAAK,IAAM4jB,EAAW,MAAOlwB,EAAKsM,KAAK0c,KAAOhpB,EAAKsM,KAAK,IAE3I,KAAK,GAAIlQ,KAAK0D,GAAIE,EAAKtE,MACnBmwB,GAAUqE,EAAW9zB,EAAG0D,EAAE1D,GAE9B,OAAOyvB,IAKXtuB,GAAK6sB,MAAMvO,GAAG,cAAe,SAASwU,GAClC,GAAItuB,GAAIxE,EAAK6sB,MAAMkG,sBAAsBD,EAAIE,MAAO,SAAS3E,EAASlB,GAClE,MAAOkB,IAIX,IAAI7pB,IAAMxE,EAAKizB,eAAgB,CAO3B,GANIjzB,EAAKizB,iBACkC,cAAnCjzB,EAAKizB,eAAehyB,IAAI,SAA2BjB,EAAKizB,eAAehyB,IAAI,YAC3EjB,EAAKizB,eAAevE,SAAS1uB,EAAKizB,eAAehyB,IAAI,aAErDjB,EAAKytB,cAAcS,YAAYgF,cAAclzB,EAAKizB,iBAEtDzuB,EAAG,CACH,GAAI2uB,GAAS3uB,EAAEvD,IAAI,YAAamyB,EAAc,mBAAoBC,EAAc,EAAGC,EAAY,0BAC3FH,KACAC,EAA+C,WAAjCD,EAAOI,YAAYC,WAA0B,mBAAqBxzB,EAAKkkB,gBAAgBiP,EAAOI,YAAYC,YACxHH,EAAcF,EAAOI,YAAYE,WAAa,EAC9CH,EAA6C,4BAA/BH,EAAOO,UAAUF,WAA2C,2BAA6BxzB,EAAKkkB,gBAAgBiP,EAAOO,UAAUF,YAEjJ,IAAIG,GAAW,GAAI5H,IAAGlX,MAAM6Y,OACxBlI,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBnc,MAAO4hB,EACPzc,MAAO0c,IAEX9N,KAAM,GAAIwG,IAAGlX,MAAM+Y,MACfpc,MAAO8hB,KAGXH,GACA3uB,EAAEkqB,SAASiF,IAEX3zB,EAAKytB,cAAciB,SAASiF,GAC5B3zB,EAAKytB,cAAcS,YAAY0F,WAAWpvB,IAGlDxE,EAAKizB,eAAiBzuB,EAE1B,GAAIA,EAAG,CACHxE,EAAK6sB,MAAMgH,mBAAmBhf,MAAMif,OAAS,UAgC7C9zB,EAAKotB,QAAQ2G,aAAalf,MAAMmf,QAAU,MAI1C,KACQh0B,EAAK0O,QAAQmJ,QAAQrU,QAAQxD,EAAK0O,QAAQmJ,QAAQrU,OAAOgB,EAAEvD,IAAI,SAEvE,MAAMiS,GACF,KAAM,0BAIV,GAAI+gB,GAAUj0B,EAAK0O,QAAQmJ,QAAQrU,OAASxD,EAAK0O,QAAQmJ,QAAQrU,OAAOgB,EAAEvD,IAAI,SAAWqxB,EAAY9tB,EAAEvD,IAAI,QAC3G,IAAIxE,aAAO6C,QAAQ20B,IAAyC,IAA7BA,EAAQtzB,WAAWuzB,OAAc,MAEhEl0B,GAAKotB,QAAQ2G,aAAalf,MAAMmf,QAAU,QAC1Ch0B,EAAKotB,QAAQ2G,aAAaI,UAAYF,EAEtCj0B,EAAKotB,QAAQgH,YAAYtB,EAAIuB,YAK5B7vB,IACDxE,EAAK6sB,MAAMgH,mBAAmBhf,MAAMif,OAAS,GAC7C9zB,EAAKotB,QAAQ2G,aAAalf,MAAMmf,QAAU,UAWlDh0B,EAAK6sB,MAAM8B,KAAK,aAAc,SAASmE,GACnC9tB,WAAW,WACPhF,EAAK8rB,OAAOqC,cAAcprB,QAAQ,SAASyB,EAAG3F,GACrB,aAAjB2F,EAAEvD,IAAI,SACN8vB,EAAmBvsB,MAE5B2rB,KAIPnwB,EAAK6sB,MAAMvO,GAAG,QAAS,SAASwU,GAG5B,GAAItuB,GAAIxE,EAAK6sB,MAAMkG,sBAAsBD,EAAIE,MAAO,SAAS3E,EAASlB,GAElE,MADAntB,GAAKs0B,gBAAkBjG,EAChBA,GAEP7pB,IAIAksB,EAAalsB,GAoBZA,IACDxE,EAAKotB,QAAQ2G,aAAalf,MAAMmf,QAAU,UAIlDtJ,SAAS6J,iBAAiB,UAAW,SAAS5U,GAC1C,GAAI6U,GAAiB,SAASxhB,GAC1B,GAAIyhB,GAAkBj0B,OAClBk0B,EAAcC,GAClB30B,GAAK8rB,OAAOqC,cAAcprB,QAAQ,SAASyB,EAAG3F,GAC1C,GAAqB,aAAjB2F,EAAEvD,IAAI,QAAwB,CAC9B,GAAI2zB,GAAe1C,EAAqB1tB,IAElCowB,EAAa,IAAM5hB,GAAK+c,IAAe6E,EAAa,IAAM5hB,GAAKgd,IAAe4E,EAAa,GAAKF,GAAkC,GAAnBE,EAAa,KAC9HF,EAAcE,EAAa,GAC3BH,EAAkBjwB,MAI1BiwB,IACAzvB,WAAW+rB,EAAmB0D,GAAkBtE,GAChDO,EAAa+D,IAGrB,QAAO9U,EAAEkV,SACL,IAAK9E,GACDyE,EAAezE,EACf,MACJ,KAAKC,GACDwE,EAAexE,EACf,MACJ,KAAKC,UhB22NZ/xB,IAAK,eACLC,MAAO,SgB5zNCuQ,GACT,GAAI1O,GAAOvE,IACX,KAAIgB,aAAO6C,QAAQoP,KAAYjS,aAAO6C,QAAQoP,EAAQjM,MAAtD,CACA,GAAIA,GAAOiM,EAAQjM,KAAMoS,EAAQnG,EAAQmG,MAQrCigB,EAAe,SAASryB,EAAMsM,EAAML,GAEpC,GAAKjS,aAAOmC,QAAQmQ,IAAwB,GAAfA,EAAKhQ,OAAlC,CAEA,GAAMg2B,GAAc,mDACdC,EAAgB,EAElBvJ,EAAS1c,EAAK,GACd2c,EAAS3c,EAAK,GACdkmB,EAASvmB,EAAWA,EAAQumB,QAAUF,EAAeA,EACrDtb,EAAS/K,EAAWA,EAAQ+K,OAAUub,EAAiBA,EAEvDE,EAAS,GAAInJ,IAAGoJ,SAChBxjB,WAAY,GACZjP,KAAM,YACND,KAAMA,EAEN2yB,SAAU,GAAIrJ,IAAGsJ,KAAKC,MAAMvJ,GAAGW,KAAKC,YAAYjB,EAAKD,OASrD8J,EAAoB,SAASN,EAAQxb,GACrC,MAAO,IAAIsS,IAAGlX,MAAM6Y,OAChB+D,MAAO,GAAI1F,IAAGlX,MAAM2gB,MAChBC,QAAS,GAAK,GACdC,IAAKT,EACLxb,MAAOA,MASnB,OAJAyb,GAAOxG,SAAS6G,EAAkBN,EAAQxb,IAG1CzZ,EAAK8rB,OAAO8H,WAAWsB,GAChBA,IAGPS,EAAc31B,EAAK41B,oBAAoBnzB,EAAKsM,KAChD,IAAwB,MAApB4mB,EAAY5mB,KAAhB,CAGA,GAAwB,UAApB4mB,EAAYjzB,KACZ,MAAOoyB,GAAaryB,EAAMkzB,EAAY5mB,KAAM8F,EAUhD,IAAIwe,GAAcxe,EAASA,EAAMwe,aAAe,EAAK,EACjDD,EAAcve,EAASA,EAAMue,aAAe,UAAa,UACzDE,EAAcze,EAASA,EAAMye,WAAa,2BAA8B,2BAExEj3B,EAAM,GAAI0vB,IAAGoJ,SACbxjB,WAAY,GACZjP,KAAM,MAAQizB,EAAYjzB,KAC1BD,KAAMA,EACN2yB,SAA8B,WAApBO,EAAYjzB,KAAoB,GAAIqpB,IAAGsJ,KAAKQ,QAAQF,EAAY5mB,MAA4B,QAApB4mB,EAAYjzB,KAAiB,GAAIqpB,IAAGsJ,KAAKS,WAAWH,EAAY5mB,MAAQ,GAAIgd,IAAGsJ,KAAKU,aAAaJ,EAAY5mB,OAGnM1S,GAAIk0B,cAAcF,UAAU,YAAa,YASzC,IAAI2F,GAAiB,SAAS3C,EAAaD,EAAaE,GACpD,MAAO,IAAIvH,IAAGlX,MAAM6Y,OAChBlI,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBhX,MAAO0c,EACP7hB,MAAO4hB,IAEX7N,KAAM,GAAIwG,IAAGlX,MAAM+Y,MACfpc,MAAO8hB,OAKf2C,EAAWD,EAAe3C,EAAaD,EAAaE,EAMxD,OALAj3B,GAAIkF,IAAI,WAAY00B,GACpB55B,EAAIqyB,SAASuH,GAGbj2B,EAAK8rB,OAAO8H,WAAWv3B,GAChBA,OhBw0NN6B,IAAK,sBACLC,MAAO,SgBh0NQ4Q,GAChB,GAAmBrM,GAAfwzB,KAAqBC,GAASpnB,KAAM,KAAMrM,KAAM,KACpD,IAAKjG,aAAO4C,SAAS0P,IAAwBvO,QAAfuO,EAAKhQ,QAAyBtC,aAAOmC,QAAQmQ,IAAwB,GAAfA,EAAKhQ,SAAgBq3B,MAAMrnB,EAAK,MAAQqnB,MAAMrnB,EAAK,IAGnI,GADArM,EAAO,SACYlC,QAAfuO,EAAKhQ,OAAqB,CAC1B,GAAItC,aAAO6C,QAAQyP,EAAK0c,MAAQhvB,aAAO6C,QAAQyP,EAAK2c,KAChD,MAAOyK,EACXD,IAAYnnB,EAAK2c,IAAK3c,EAAM0c,SAG5ByK,GAAWnnB,MAGZ,IAAItS,aAAOmC,QAAQmQ,GAAO,CAE7B,GAAIsnB,GAAkB,SAASh6B,GAC3B,GAAIiyB,KASJ,OARI7xB,cAAO4C,SAAShD,IAAsBmE,QAAdnE,EAAI0C,QAC5BuvB,EAAA,OAAmB7xB,aAAO6C,QAAQjD,EAAIovB,OAAShvB,aAAO6C,QAAQjD,EAAIqvB,KAC9D4C,EAAA,QAAiBA,EAAA,MAAkBjyB,EAAIqvB,IAAKrvB,EAAIovB,QAGpD6C,EAAA,MAAkB7xB,aAAOmC,QAAQvC,IAAsB,GAAdA,EAAI0C,SAAgBq3B,MAAM/5B,EAAI,MAAQ+5B,MAAM/5B,EAAI,IACrFiyB,EAAA,QAAiBA,EAAA,KAAiBjyB,IAEnCiyB,EAIX,IAAmB,GAAfvf,EAAKhQ,QAAes3B,EAAgBtnB,EAAK,IAAIunB,OAASD,EAAgBtnB,EAAK,IAAIunB,MAC/E5zB,EAAO,OACPwzB,EAAS/yB,KAAKkzB,EAAgBtnB,EAAK,IAAIA,MACvCmnB,EAAS/yB,KAAKkzB,EAAgBtnB,EAAK,IAAIA,UAGtC,MAAIA,EAAKhQ,QAAU,GA+BnB,MAAOo3B,EA7BR,IAAK15B,aAAO6C,QAAQyP,EAAK,GAAG,KAAQtS,aAAO6C,QAAQyP,EAAK,GAAG,GAAG,KAyB1D,GAPArM,EAAO,UACPwzB,EAAS/yB,SACT4L,EAAK,GAAGhM,QAAQ,SAAS7G,GAErB,GAAIG,GAAMg6B,EAAgBn6B,EACtBG,GAAIi6B,OAAOJ,EAAS,GAAG/yB,KAAK9G,EAAI0S,QAEpCmnB,EAAS,GAAGn3B,QAAU,EAAG,MAAOo3B,OAxBpCzzB,GAAO,eACPqM,EAAKhM,QAAQ,SAASwzB,EAAI13B,GACtB,MAAIpC,cAAOmC,QAAQ23B,IAAoB,GAAbA,EAAGx3B,QACzBm3B,EAAS/yB,WACTozB,EAAG,GAAGxzB,QAAQ,SAAS7G,GAEnB,GAAIG,GAAMg6B,EAAgBn6B,EACtBG,GAAIi6B,OAAOJ,EAASr3B,GAAG,GAAGsE,KAAK9G,EAAI0S,QAGvCmnB,EAASr3B,GAAG,GAAGE,QAAU,EAAUo3B,EAAvC,QAEQA,KAkB5B,OACIpnB,KAAMmnB,EACNxzB,KAAMA,MhBs0NTxE,IAAK,UACLC,MAAO,SgB9zNJsE,GACJ,KAAIhG,aAAO6C,QAAQmD,IAAUhG,aAAO6C,QAAQmD,EAAKuN,QAAUvT,aAAO6C,QAAQmD,EAAKwN,OAA/E,CACA,GAAIjQ,GAAOvE,KAEP0mB,EAAK,GAAAtlB,cAAgB4F,EACzB0f,GAAGC,cAAc,MAAO,SAAS3f,GAC7BzC,EAAKyC,KAAOA,EACPhG,aAAO6C,QAAQU,EAAK6sB,SACjBpwB,aAAOmC,QAAQoB,EAAKyC,MACpBzC,EAAKyC,KAAKM,QAAQ,SAASC,EAAGnE,GAC1BmB,EAAKw2B,cAAc/zB,KAAMO,MAG7BhD,EAAKw2B,cAAc/zB,KAAMzC,EAAKyC,chBg0NzCvE,IAAK,aACLC,MAAO,WgB3zNR,GAAI8tB,KAaJ,OAZAxwB,MAAKwwB,cAAclpB,QAAQ,SAAS+rB,GAChC,IACI7C,EAAgBA,EAAcwK,OAAO3H,EAAEZ,YAAYC,eAEvD,MAAOjb,GACH,IACI+Y,EAAgBA,EAAcwK,OAAO3H,EAAEX,eAE3C,MAAOjb,QAIRzX,KAAKqwB,OAAOqC,cAAcsI,OAAOxK,MhB4zNvC/tB,IAAK,SACLC,MAAO,WgBzzNR,MAAO1C,MAAKoxB,ShBo0NX3uB,IAAK,KACLC,MAAO,SgB7zNTiW,EAAWrU,GACV,GAAIC,GAAOvE,KAEPi7B,GACAnf,MAAS,SAASub,GACd,GAAItuB,GAAIxE,EAAK6sB,MAAMkG,sBAAsB/yB,EAAK6sB,MAAM8J,cAAc7D,GAAM,SAASzE,EAASlB,GACtF,MAAOkB,IAEP5xB,cAAOmE,WAAWb,IAAayE,GAC/BzE,EAAS/D,KAAKP,KAAM+I,IAG5BoyB,YAAe,SAAS9D,GACpB,GAAItuB,GAAIxE,EAAK6sB,MAAMkG,sBAAsBD,EAAIE,MAAO,SAAS3E,EAASlB,GAClE,MAAOkB,IAEP5xB,cAAOmE,WAAWb,IAAayE,GAC/BzE,EAAS/D,KAAKP,KAAM+I,IAG5BqyB,WAAc,SAAS/D,GACfr2B,aAAOmE,WAAWb,IAClBA,EAAS/D,KAAKP,KAAMq3B,IAKf,UAAb1e,EACApU,EAAK6sB,MAAMiK,cAAcvC,iBAAiBngB,EAAWsiB,EAAqBtiB,IACxD,eAAbA,EACLpU,EAAK6sB,MAAMvO,GAAGlK,EAAWsiB,EAAqBtiB,IAC5B,cAAbA,GACLpU,EAAK6sB,MAAM8B,KAAKva,EAAWsiB,EAAqBtiB,OhB2zNnDlW,IAAK,kBACLC,MAAO,SgBzzNIqT,GACZ,GAAIA,EAAMulB,SAAS,QAAS,CACxB,GAAIC,GAAQxlB,EAAMnQ,MAAM,KAAKmQ,EAAMnQ,MAAM,KAAKtC,OAAS,GAAGqD,QAAQ,IAAK,IACnE60B,EAAezlB,EAAMpP,QAAQ,IAAM40B,EAAO,IAAI50B,QAAQ,IAAK,IAC3D80B,EAAWz6B,aAAOoH,YAAY,GAAKozB,EACvC,OAAO,QAAUC,EAAS71B,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,IAAM21B,EAAM9C,OAAS,IAG7E,MAAOz3B,cAAOoH,YAAY,GAAK2N,MhBi0NlCtT,IAAK,WACLC,MAAO,SgB1zNHuQ,GACL,KAAIjS,aAAO6C,QAAQoP,IAAYjS,aAAO6C,QAAQoP,EAAQrS,MAAQI,aAAO6C,QAAQoP,EAAQmG,QAErF,GAAIpY,aAAOmE,WAAW8N,EAAQmG,QAAUnG,EAAQmG,gBAAiBkX,IAAGlX,MAAM6Y,MACtEhf,EAAQrS,IAAIqyB,SAAShgB,EAAQmG,WAE5B,CACD,GASIA,GATEkgB,EAAc,mDACdC,EAAgB,EAElB5B,EAAc1kB,EAAQmG,MAAMue,YAAc1kB,EAAQmG,MAAMue,YAAc,UACtEC,EAAc3kB,EAAQmG,MAAMwe,YAAc3kB,EAAQmG,MAAMue,YAAc,EACtEE,EAAc5kB,EAAQmG,MAAMye,UAAY5kB,EAAQmG,MAAMye,UAAgB,2BACtE2B,EAAoC,UAAtBvmB,EAAQmG,MAAMnS,MAA0C,aAAtBgM,EAAQmG,MAAMnS,KAAuBgM,EAAQmG,MAAMogB,QAAUF,EAAiB,KAC9Htb,EAAoC,UAAtB/K,EAAQmG,MAAMnS,MAA0C,aAAtBgM,EAAQmG,MAAMnS,KAAuBgM,EAAQmG,MAAM4E,OAAUub,EAAiB,IAIpH,OAAVC,EACAvmB,EAAQrS,IAAIqyB,SAAS7Z,EAAQ,GAAIkX,IAAGlX,MAAM6Y,OACtC+D,MAAO,GAAI1F,IAAGlX,MAAM2gB,MAChBC,QAAS,GAAK,GACdC,IAAKT,EACLxb,MAAOA,OAIf/K,EAAQrS,IAAIqyB,SAAS7Z,EAAQ,GAAIkX,IAAGlX,MAAM6Y,OACtClI,OAAQ,GAAIuG,IAAGlX,MAAM8Y,QACjBnc,MAAO4hB,EACPzc,MAAO0c,IAEX9N,KAAM,GAAIwG,IAAGlX,MAAM+Y,MACfpc,MAAO8hB,OAInB5kB,EAAQrS,IAAIkF,IAAI,WAAYsT,OhBk0N/B3W,IAAK,yBACLC,MAAO,SgBzzNWuQ,GACnB,GAAI1O,GAAOvE,IACPgB,cAAO6C,QAAQoP,IAAYjS,aAAO6C,QAAQoP,EAAQwB,MAEtDlQ,EAAKmvB,aACDzsB,KAAM,QACNvD,QACIyP,KAAM,cACNzP,QACIyP,KAAM,SACNsB,IAAKxB,EAAQwB,IACb1M,OAAQ,YAGhBf,KAAMiM,EAAQjM,KACdoS,MAAOnG,EAAQmG,WhBo1NlB3W,IAAK,aACL+C,IAAK,WgB92PN,MAAOxF,MAAKgU,ahB45PXlO,IAAK,SgBv2PKoc,GACPA,IACAliB,KAAKgU,YAAckO,MhB22PtBzf,IAAK,OACL+C,IAAK,WgB/5PN,MAAOxF,MAAK0F,OhBk6PXI,IAAK,SgB32PDoc,GACDA,IACAliB,KAAK0F,MAAQwc,MhB+2PhBzf,IAAK,UACL+C,IAAK,WgBr6PN,MAAOxF,MAAKmU,ahB06PR9R,IAGXzC,cgB5+PoByC,GhBg/Pf,SAASxC,EAAQD","file":"C9.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"C9\"] = factory();\n\telse\n\t\troot[\"C9\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _C = __webpack_require__(9);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(10);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(11);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(12);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(13);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(14);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tvar _C17 = __webpack_require__(15);\n\t\n\tvar _C18 = _interopRequireDefault(_C17);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Map Importer\n\tmodule.exports = {\n\t\tBarChart: _C2.default,\n\t\tDonutChart: _C4.default,\n\t\tLineChart: _C6.default,\n\t\tPieChart: _C8.default,\n\t\tTimeLine: _C10.default,\n\t\n\t\tMap: _C12.default,\n\t\n\t\tDataAdapter: _C16.default,\n\t\tHelper: _C14.default\n\t};\n\t\n\t// CSS Importer\n\t\n\t\n\t// Helper Importer\n\t// Chart Importer\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar Helper = {\n\t\n\t    each: function each(loopable, callback, self, reverse) {\n\t        // Check to see if null or undefined firstly.\n\t        var i, len;\n\t        if (self.isArray(loopable)) {\n\t            len = loopable.length;\n\t            if (reverse) {\n\t                for (i = len - 1; i >= 0; i--) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            } else {\n\t                for (i = 0; i < len; i++) {\n\t                    callback.call(self, loopable[i], i);\n\t                }\n\t            }\n\t        } else if ((typeof loopable === 'undefined' ? 'undefined' : _typeof(loopable)) === 'object') {\n\t            var keys = Object.keys(loopable);\n\t            len = keys.length;\n\t            for (i = 0; i < len; i++) {\n\t                callback.call(self, loopable[keys[i]], keys[i]);\n\t            }\n\t        }\n\t    },\n\t\n\t    setValue: function setValue(value, key) {\n\t        var self = this;\n\t        self[key] = value;\n\t    },\n\t\n\t    setPrefix: function setPrefix(config) {\n\t        var constPrefix = '_';\n\t        if (config) {\n\t            return constPrefix + config;\n\t        }\n\t    },\n\t\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined || Util.isArray(value) && value.length === 0 || Util.isArray(value) && Util.isEmpty(value[0]);\n\t    },\n\t\n\t    isObject: function isObject(object) {\n\t        return !Util.isEmpty(object) && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return !Util.isEmpty(array) && (Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]');\n\t    },\n\t\n\t    isFunction: function isFunction(func) {\n\t        return !Util.isEmpty(func) && typeof func === 'function';\n\t    },\n\t\n\t    // Overlap source by target\n\t    merge: function merge(target, source) {\n\t        var obj3 = {};\n\t        for (var attrname in source) {\n\t            if (!Util.isEmpty(source[attrname])) obj3[attrname] = source[attrname];\n\t        }\n\t        for (var attrname in target) {\n\t            if (!Util.isEmpty(target[attrname])) obj3[attrname] = target[attrname];\n\t        }\n\t        return obj3;\n\t    },\n\t\n\t    // Overlap target by source\n\t    mergeDeep: function mergeDeep(target, source) {\n\t        return _mergeDeep(target, source);\n\t    },\n\t\n\t    get: function get(_key, _data) {\n\t        var _keys = _key.split(\".\");\n\t        var _current = _data;\n\t\n\t        for (var i = 0; i < _keys.length; i++) {\n\t\n\t            if ('undefined' == typeof _current[_keys[i]]) {\n\t                return '';\n\t            } else {\n\t                _current = _current[_keys[i]];\n\t            }\n\t        }\n\t\n\t        return _current;\n\t    },\n\t\n\t    set: function set(_key, _value, _context) {\n\t        var _current = _context; // a moving reference to internal objects within obj\n\t        var _keys = _key.split('.');\n\t        var len = _keys.length;\n\t        for (var i = 0; i < len - 1; i++) {\n\t            var _handle = _keys[i];\n\t            if (!_current[_handle]) _current[_handle] = {};\n\t            _current = _current[_handle];\n\t        }\n\t\n\t        _current[_keys[len - 1]] = _value;\n\t    },\n\t\n\t    max: function max(arr) {\n\t        return Math.max.apply(Math, _toConsumableArray(arr));\n\t    },\n\t\n\t    min: function min(arr) {\n\t        return Math.min.apply(Math, _toConsumableArray(arr));\n\t    },\n\t\n\t    sum: function sum(arr) {\n\t        return arr.reduce(function (a, b) {\n\t            return a + b;\n\t        }, 0);\n\t    },\n\t\n\t    guid: function guid() {\n\t        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function (c) {\n\t            var r = Math.random() * 16 | 0,\n\t                v = c == 'x' ? r : r & 0x3 | 0x8;\n\t            return v.toString(16);\n\t        });\n\t    },\n\t\n\t    getMinMax: function getMinMax(data, type, isLogaric) {\n\t        var self = this;\n\t        var _temp = new Array();\n\t        var _min = 0,\n\t            _max = 0;\n\t        if (type == \"stack\") {\n\t            data.forEach(function (d) {\n\t                d.forEach(function (s) {\n\t                    if (s.y0 > 0) _temp.push(s.y1);else _temp.push(s.y1 + s.y0);\n\t                });\n\t            });\n\t        } else {\n\t            data.forEach(function (d) {\n\t                d.forEach(function (s) {\n\t                    _temp.push(s.y0);\n\t                });\n\t            });\n\t        }\n\t\n\t        var _newMin = self.min(_temp);\n\t        var _newMax = self.max(_temp);\n\t        if (_newMin < _min || isLogaric) _min = _newMin;\n\t        if (_newMax > _max) _max = _newMax;\n\t\n\t        return { min: _min, max: _max };\n\t    },\n\t    dateParser: function dateParser(format) {\n\t        return d3.time.format(format).parse;\n\t    },\n\t    dateFormatter: function dateFormatter(format) {\n\t        return d3.time.format(format);\n\t    },\n\t    // Convert color 'from' to 'to' (if any) in propotion of 'p'\n\t    // Use to lighten/darken specific color\n\t    shadeColor: function shadeColor(p, from, to) {\n\t        // Convert color from 'Name' to 'Hex'\n\t        from = Util.convertColorToHex(from) || from;\n\t\n\t        if (typeof p != \"number\" || p < -1 || p > 1 || typeof from != \"string\" || from[0] != 'r' && from[0] != '#' || typeof to != \"string\" && typeof to != \"undefined\") return null; //ErrorCheck\n\t        if (!this.sbcRip) this.sbcRip = function (d) {\n\t            var l = d.length,\n\t                RGB = new Object();\n\t            if (l > 9) {\n\t                d = d.split(\",\");\n\t                if (d.length < 3 || d.length > 4) return null; //ErrorCheck\n\t                RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;\n\t            } else {\n\t                if (l == 8 || l == 6 || l < 4) return null; //ErrorCheck\n\t                if (l < 6) d = \"#\" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + \"\" + d[4] : \"\"); //3 digit\n\t                d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r((d >> 24 & 255) / 255 * 10000) / 10000 : -1;\n\t            }\n\t            return RGB;\n\t        };\n\t        var i = parseInt,\n\t            r = Math.round,\n\t            h = from.length > 9,\n\t            h = typeof to == \"string\" ? to.length > 9 ? true : to == \"c\" ? !h : false : h,\n\t            b = p < 0,\n\t            p = b ? p * -1 : p,\n\t            to = to && to != \"c\" ? to : b ? \"#000000\" : \"#FFFFFF\",\n\t            f = this.sbcRip(from),\n\t            t = this.sbcRip(to);\n\t        if (!f || !t) return null; //ErrorCheck\n\t        if (h) return \"rgb(\" + r((t[0] - f[0]) * p + f[0]) + \",\" + r((t[1] - f[1]) * p + f[1]) + \",\" + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? \")\" : \",\" + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + \")\");else return \"#\" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);\n\t    },\n\t    //smooth scroll c9 table\n\t    scroll: function scroll(element, to, duration) {\n\t        var self = this;\n\t        if (duration <= 0) return;\n\t        var difference = to - element.scrollTop;\n\t        var perTick = difference / duration * 10;\n\t\n\t        setTimeout(function () {\n\t            element.scrollTop = element.scrollTop + perTick;\n\t            if (element.scrollTop === to) return;\n\t            self.scroll(element, to, duration - 10);\n\t        }, 10);\n\t    }\n\t};\n\t\n\tvar Util = {\n\t    isEmpty: function isEmpty(value) {\n\t        return value === null || value === undefined;\n\t    },\n\t\n\t    isArray: function isArray(array) {\n\t        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\n\t    },\n\t\n\t    isObject: function isObject(object) {\n\t        return object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && !Array.isArray(object);\n\t    },\n\t\n\t    convertColorToHex: function convertColorToHex(colour) {\n\t        var colours = {\n\t            \"aliceblue\": \"#f0f8ff\", \"antiquewhite\": \"#faebd7\", \"aqua\": \"#00ffff\", \"aquamarine\": \"#7fffd4\", \"azure\": \"#f0ffff\",\n\t            \"beige\": \"#f5f5dc\", \"bisque\": \"#ffe4c4\", \"black\": \"#000000\", \"blanchedalmond\": \"#ffebcd\", \"blue\": \"#0000ff\", \"blueviolet\": \"#8a2be2\", \"brown\": \"#a52a2a\", \"burlywood\": \"#deb887\",\n\t            \"cadetblue\": \"#5f9ea0\", \"chartreuse\": \"#7fff00\", \"chocolate\": \"#d2691e\", \"coral\": \"#ff7f50\", \"cornflowerblue\": \"#6495ed\", \"cornsilk\": \"#fff8dc\", \"crimson\": \"#dc143c\", \"cyan\": \"#00ffff\",\n\t            \"darkblue\": \"#00008b\", \"darkcyan\": \"#008b8b\", \"darkgoldenrod\": \"#b8860b\", \"darkgray\": \"#a9a9a9\", \"darkgreen\": \"#006400\", \"darkkhaki\": \"#bdb76b\", \"darkmagenta\": \"#8b008b\", \"darkolivegreen\": \"#556b2f\",\n\t            \"darkorange\": \"#ff8c00\", \"darkorchid\": \"#9932cc\", \"darkred\": \"#8b0000\", \"darksalmon\": \"#e9967a\", \"darkseagreen\": \"#8fbc8f\", \"darkslateblue\": \"#483d8b\", \"darkslategray\": \"#2f4f4f\", \"darkturquoise\": \"#00ced1\",\n\t            \"darkviolet\": \"#9400d3\", \"deeppink\": \"#ff1493\", \"deepskyblue\": \"#00bfff\", \"dimgray\": \"#696969\", \"dodgerblue\": \"#1e90ff\",\n\t            \"firebrick\": \"#b22222\", \"floralwhite\": \"#fffaf0\", \"forestgreen\": \"#228b22\", \"fuchsia\": \"#ff00ff\",\n\t            \"gainsboro\": \"#dcdcdc\", \"ghostwhite\": \"#f8f8ff\", \"gold\": \"#ffd700\", \"goldenrod\": \"#daa520\", \"gray\": \"#808080\", \"green\": \"#008000\", \"greenyellow\": \"#adff2f\",\n\t            \"honeydew\": \"#f0fff0\", \"hotpink\": \"#ff69b4\",\n\t            \"indianred \": \"#cd5c5c\", \"indigo\": \"#4b0082\", \"ivory\": \"#fffff0\", \"khaki\": \"#f0e68c\",\n\t            \"lavender\": \"#e6e6fa\", \"lavenderblush\": \"#fff0f5\", \"lawngreen\": \"#7cfc00\", \"lemonchiffon\": \"#fffacd\", \"lightblue\": \"#add8e6\", \"lightcoral\": \"#f08080\", \"lightcyan\": \"#e0ffff\", \"lightgoldenrodyellow\": \"#fafad2\",\n\t            \"lightgrey\": \"#d3d3d3\", \"lightgreen\": \"#90ee90\", \"lightpink\": \"#ffb6c1\", \"lightsalmon\": \"#ffa07a\", \"lightseagreen\": \"#20b2aa\", \"lightskyblue\": \"#87cefa\", \"lightslategray\": \"#778899\", \"lightsteelblue\": \"#b0c4de\",\n\t            \"lightyellow\": \"#ffffe0\", \"lime\": \"#00ff00\", \"limegreen\": \"#32cd32\", \"linen\": \"#faf0e6\",\n\t            \"magenta\": \"#ff00ff\", \"maroon\": \"#800000\", \"mediumaquamarine\": \"#66cdaa\", \"mediumblue\": \"#0000cd\", \"mediumorchid\": \"#ba55d3\", \"mediumpurple\": \"#9370d8\", \"mediumseagreen\": \"#3cb371\", \"mediumslateblue\": \"#7b68ee\",\n\t            \"mediumspringgreen\": \"#00fa9a\", \"mediumturquoise\": \"#48d1cc\", \"mediumvioletred\": \"#c71585\", \"midnightblue\": \"#191970\", \"mintcream\": \"#f5fffa\", \"mistyrose\": \"#ffe4e1\", \"moccasin\": \"#ffe4b5\",\n\t            \"navajowhite\": \"#ffdead\", \"navy\": \"#000080\",\n\t            \"oldlace\": \"#fdf5e6\", \"olive\": \"#808000\", \"olivedrab\": \"#6b8e23\", \"orange\": \"#ffa500\", \"orangered\": \"#ff4500\", \"orchid\": \"#da70d6\",\n\t            \"palegoldenrod\": \"#eee8aa\", \"palegreen\": \"#98fb98\", \"paleturquoise\": \"#afeeee\", \"palevioletred\": \"#d87093\", \"papayawhip\": \"#ffefd5\", \"peachpuff\": \"#ffdab9\", \"peru\": \"#cd853f\", \"pink\": \"#ffc0cb\", \"plum\": \"#dda0dd\", \"powderblue\": \"#b0e0e6\", \"purple\": \"#800080\",\n\t            \"red\": \"#ff0000\", \"rosybrown\": \"#bc8f8f\", \"royalblue\": \"#4169e1\",\n\t            \"saddlebrown\": \"#8b4513\", \"salmon\": \"#fa8072\", \"sandybrown\": \"#f4a460\", \"seagreen\": \"#2e8b57\", \"seashell\": \"#fff5ee\", \"sienna\": \"#a0522d\", \"silver\": \"#c0c0c0\", \"skyblue\": \"#87ceeb\", \"slateblue\": \"#6a5acd\", \"slategray\": \"#708090\", \"snow\": \"#fffafa\", \"springgreen\": \"#00ff7f\", \"steelblue\": \"#4682b4\",\n\t            \"tan\": \"#d2b48c\", \"teal\": \"#008080\", \"thistle\": \"#d8bfd8\", \"tomato\": \"#ff6347\", \"turquoise\": \"#40e0d0\",\n\t            \"violet\": \"#ee82ee\",\n\t            \"wheat\": \"#f5deb3\", \"white\": \"#ffffff\", \"whitesmoke\": \"#f5f5f5\",\n\t            \"yellow\": \"#ffff00\", \"yellowgreen\": \"#9acd32\"\n\t        };\n\t\n\t        if (typeof colours[colour.toLowerCase()] != 'undefined') return colours[colour.toLowerCase()];\n\t\n\t        return false;\n\t    }\n\t};\n\t\n\tfunction _mergeDeep(target, source) {\n\t    if (Util.isObject(target) && Util.isObject(source)) {\n\t        for (var key in source) {\n\t            if (Util.isObject(source[key])) {\n\t                if (Helper.isEmpty(target[key])) {\n\t                    Object.assign(target, _defineProperty({}, key, {}));\n\t                }\n\t                _mergeDeep(target[key], source[key]);\n\t            } else {\n\t                Object.assign(target, _defineProperty({}, key, source[key]));\n\t            }\n\t        }\n\t    }\n\t    return target;\n\t}\n\t\n\tmodule.exports = Helper;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DataAdapter = function () {\n\t    function DataAdapter(options, chartType, callback) {\n\t        _classCallCheck(this, DataAdapter);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t            keys: {\n\t                name: \"name\",\n\t                value: \"value\",\n\t                x: \"value.x\",\n\t                y: \"value\",\n\t                coor: \"coor\",\n\t                icon: \"icon\"\n\t            },\n\t            groups: [],\n\t            stacks: [],\n\t            timeFormat: false,\n\t\n\t            // NO NEED TO ADD TO DATA OPTIONS\n\t            // Just use to define default parameters\n\t            colorRange: null\n\t        };\n\t\n\t        self._keys = _C2.default.merge(options.keys, config.keys);\n\t        self._groups = options.groups || config.groups;\n\t        self._stacks = options.stacks || config.stacks;\n\t        self._timeFormat = options.timeFormat || config.timeFormat;\n\t        self._colorRange = options.colorRange || config.colorRange;\n\t\n\t        self._dataSource = [];\n\t        self._dataTarget = []; // Initialize new Array to use Array methods\n\t        self._dataRefs = [];\n\t\n\t        self._options = options;\n\t        self._chartType = chartType;\n\t        self._callback = callback;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DataAdapter, [{\n\t        key: \"updateConfig\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t\n\t            // self.initDataSource();\n\t        }\n\t\n\t        // initDataSource() {\n\t        //     var self = this;\n\t\n\t        //     // if (self.hasPlainData()) {\n\t        //     //     self.executePlainData();\n\t        //     // }\n\t        //     // TESTING\n\t        //     //  else if (self.hasFile()) {\n\t        //     //     self.executeFile();\n\t        //     // }\n\t        // }\n\t\n\t    }, {\n\t        key: \"hasPlainData\",\n\t        value: function hasPlainData() {\n\t            var self = this;\n\t\n\t            // return options.plain && Helper.isArray(options.plain);\n\t            return !_C2.default.isEmpty(self.options.plain); // fix for map\n\t        }\n\t    }, {\n\t        key: \"hasFile\",\n\t        value: function hasFile() {\n\t            var self = this;\n\t\n\t            return _C2.default.isObject(self.options.file) && !_C2.default.isEmpty(self.options.file.url) && !_C2.default.isEmpty(self.options.file.type);\n\t        }\n\t    }, {\n\t        key: \"executePlainData\",\n\t        value: function executePlainData(callback) {\n\t            var self = this;\n\t\n\t            self.dataSource = self.options.plain;\n\t\n\t            callback.call(self, self.dataSource);\n\t        }\n\t    }, {\n\t        key: \"executeFile\",\n\t        value: function executeFile(callback) {\n\t            var self = this;\n\t\n\t            self.file = self.options.file;\n\t\n\t            if (!_C2.default.isEmpty(self.file)) {\n\t\n\t                switch (self.file.type) {\n\t                    case \"csv\":\n\t                        self.getCsv(callback);\n\t                        break;\n\t                    case \"tsv\":\n\t                        self.getTsv(callback);\n\t                        break;\n\t                    case \"text\":\n\t                        self.getText(callback);\n\t                        break;\n\t                    case \"json\":\n\t                        self.getJson(callback);\n\t                        break;\n\t                    case \"xml\":\n\t                        self.getXml(callback);\n\t                        break;\n\t                    case \"xhr\":\n\t                        self.getJson(callback);\n\t                        break;\n\t                    default:\n\t                        self.getJson(callback);\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getDataTypeForBarChart\",\n\t        value: function getDataTypeForBarChart() {\n\t            var self = this;\n\t\n\t            if (!_C2.default.isEmpty(self.groups) && _C2.default.isArray(self.groups) && self.groups.length !== 1) {\n\t                return \"group\";\n\t            } else if (!_C2.default.isEmpty(self.stacks) && _C2.default.isArray(self.stacks)) {\n\t                return \"stack\";\n\t            }\n\t\n\t            // default grouped bar if user do not defined groups for array value\n\t            for (var i = self.dataSource.length - 1; i >= 0; i--) {\n\t                if (_C2.default.isArray(_C2.default.get(self.keys.value, self.dataSource[i]))) return \"group\";\n\t            }\n\t\n\t            return \"single\";\n\t        }\n\t    }, {\n\t        key: \"getDataTarget\",\n\t        value: function getDataTarget(type, callback) {\n\t            var self = this;\n\t\n\t            // TESTING\n\t            if (self.hasFile()) {\n\t                self.executeFile(function (data) {\n\t                    self.dataSource = data;\n\t                    self.generateDataTarget(type);\n\t                    callback.call(self, self.dataTarget);\n\t                });\n\t            } else if (self.hasPlainData()) {\n\t                self.executePlainData(function (data) {\n\t                    self.dataSource = data;\n\t                    self.generateDataTarget(type);\n\t                    callback.call(self, self.dataTarget);\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: \"generateDataTarget\",\n\t        value: function generateDataTarget(type) {\n\t            var self = this;\n\t\n\t            switch (type) {\n\t                case \"bar\":\n\t                    self.getDataTargetForBarChart();\n\t                    break;\n\t\n\t                case \"line\":\n\t                    self.getDataTargetForLineChart();\n\t                    break;\n\t\n\t                case \"pie\":\n\t                    self.getDataTargetForPieChart();\n\t                    break;\n\t\n\t                case \"donut\":\n\t                    self.getDataTargetForDonutChart();\n\t                    break;\n\t\n\t                case \"timeline\":\n\t                    self.getDataTargetForTimelineChart();\n\t                    break;\n\t\n\t                case \"map\":\n\t                    self.getDataTargetForMap();\n\t                    break;\n\t\n\t                default:\n\t                    self.dataTarget = self.dataSource;\n\t                    break;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getName\",\n\t        value: function getName(v) {\n\t            return v.name;\n\t        }\n\t    }, {\n\t        key: \"getValue\",\n\t        value: function getValue(v) {\n\t            var self = this;\n\t\n\t            return _C2.default.get(self.keys, v);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*=================================================\r\n\t        =            Normalize Data For Charts            =\r\n\t        =================================================*/\n\t\n\t    }, {\n\t        key: \"getDataTargetForBarChart\",\n\t        value: function getDataTargetForBarChart() {\n\t            var self = this;\n\t\n\t            var groups;\n\t            var groupRefs;\n\t            var stacks;\n\t            var groupRefs;\n\t\n\t            var _ret = function () {\n\t                switch (self.getDataTypeForBarChart()) {\n\t                    case \"single\":\n\t                        var color = self.colorRange;\n\t                        var groups = self.groups;\n\t\n\t                        self.dataSource.forEach(function (data, index) {\n\t                            var _data = [{\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"value\": _C2.default.get(self.keys.value, data),\n\t                                \"y0\": _C2.default.get(self.keys.value, data),\n\t                                \"y1\": _C2.default.get(self.keys.value, data),\n\t                                \"group\": groups[0] || 'data' + 1,\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true,\n\t                                \"color\": color(0)\n\t                            }];\n\t                            self.dataTarget.push(_data);\n\t                        });\n\t\n\t                        // return self.dataTarget;\n\t                        break;\n\t\n\t                    case \"group\":\n\t                        groups = self.groups;\n\t                        groupRefs = [];\n\t                        // Iterate over each group\n\t\n\t                        self.dataSource.forEach(function (data, index) {\n\t                            var _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                            var _stack = [],\n\t                                _stackItem = {\n\t                                \"color\": \"#ffffff\",\n\t                                \"y0\": 0,\n\t                                \"y1\": 1,\n\t                                \"group\": \"\",\n\t                                \"name\": \"\",\n\t                                \"data-ref\": \"\",\n\t                                \"group-ref\": \"\",\n\t                                \"enable\": true\n\t                            },\n\t                                color = self.colorRange;\n\t\n\t                            // Iterate each single bar in a group\n\t                            if (_C2.default.isArray(_dsArray)) {\n\t                                _dsArray.forEach(function (d, i) {\n\t                                    if (groupRefs.length - 1 < i) groupRefs.push(_C2.default.guid());\n\t                                    if (_C2.default.isEmpty(groups[i])) groups.push('data' + (i + 1));\n\t                                    _stackItem = {\n\t                                        \"color\": color(i),\n\t                                        \"y0\": d,\n\t                                        \"y1\": d > 0 ? d : 0,\n\t                                        \"group\": groups[i],\n\t                                        \"name\": _C2.default.get(self.keys.name, data),\n\t                                        \"value\": d,\n\t                                        \"data-ref\": _C2.default.guid(),\n\t                                        \"group-ref\": groupRefs[i],\n\t                                        \"enable\": true\n\t                                    };\n\t                                    _stack.push(_stackItem);\n\t                                });\n\t                            } else {\n\t                                if (groupRefs.length == 0) groupRefs.push(_C2.default.guid());\n\t                                if (_C2.default.isEmpty(groups[0])) groups.push('data1');\n\t                                _stackItem = {\n\t                                    \"color\": color(0),\n\t                                    \"y0\": _dsArray,\n\t                                    \"y1\": _dsArray > 0 ? _dsArray : 0,\n\t                                    \"group\": groups[0],\n\t                                    \"name\": _C2.default.get(self.keys.name, data),\n\t                                    \"value\": _dsArray,\n\t                                    \"data-ref\": _C2.default.guid(),\n\t                                    \"group-ref\": groupRefs[0],\n\t                                    \"enable\": true\n\t                                };\n\t                                _stack.push(_stackItem);\n\t                            }\n\t\n\t                            self.dataTarget.push(_stack);\n\t                        });\n\t\n\t                        self.groups = groups;\n\t                        return {\n\t                            v: self.dataTarget\n\t                        };\n\t                        break;\n\t\n\t                    case \"stack\":\n\t                        stacks = self.stacks;\n\t                        groupRefs = [];\n\t                        // Iterate over each group\n\t\n\t                        self.dataSource.forEach(function (data, index) {\n\t                            var _dsArray = _C2.default.get(self.keys.value, data);\n\t\n\t                            var _stack = [],\n\t                                _stackItem = {\n\t                                \"color\": \"#ffffff\",\n\t                                \"y0\": 0,\n\t                                \"y1\": 1,\n\t                                \"group\": \"\",\n\t                                \"name\": \"\",\n\t                                \"data-ref\": \"\",\n\t                                \"enable\": true\n\t                            },\n\t                                color = self.colorRange;\n\t\n\t                            // Iterate each single bar in a group\n\t                            if (_C2.default.isArray(_dsArray)) {\n\t                                (function () {\n\t                                    var _negBase = 0;\n\t                                    var _posBase = 0;\n\t                                    _dsArray.forEach(function (d, i) {\n\t                                        if (groupRefs.length - 1 < i) groupRefs.push(_C2.default.guid());\n\t                                        if (_C2.default.isEmpty(stacks[i])) stacks.push('data' + (i + 1));\n\t                                        _stackItem = {\n\t                                            \"color\": color(i),\n\t                                            \"y0\": d,\n\t                                            \"y1\": d > 0 ? d + _posBase : _negBase,\n\t                                            \"group\": stacks[i],\n\t                                            \"name\": _C2.default.get(self.keys.name, data),\n\t                                            \"value\": d,\n\t                                            \"data-ref\": _C2.default.guid(),\n\t                                            \"group-ref\": groupRefs[i],\n\t                                            \"enable\": true\n\t                                        };\n\t                                        _stack.push(_stackItem);\n\t                                        if (d > 0) _posBase += d;else _negBase += d;\n\t                                    });\n\t                                })();\n\t                            } else {\n\t                                if (groupRefs.length == 0) groupRefs.push(_C2.default.guid());\n\t                                if (_C2.default.isEmpty(stacks[0])) stacks.push('data1');\n\t                                _stackItem = {\n\t                                    \"color\": color(0),\n\t                                    \"y0\": _dsArray,\n\t                                    \"y1\": _dsArray > 0 ? _dsArray : 0,\n\t                                    \"group\": stacks[0],\n\t                                    \"name\": _C2.default.get(self.keys.name, data),\n\t                                    \"value\": _dsArray,\n\t                                    \"data-ref\": _C2.default.guid(),\n\t                                    \"group-ref\": groupRefs[0],\n\t                                    \"enable\": true\n\t                                };\n\t                                _stack.push(_stackItem);\n\t                            }\n\t\n\t                            self.dataTarget.push(_stack);\n\t                        });\n\t\n\t                        self.stacks = stacks;\n\t                        return {\n\t                            v: self.dataTarget\n\t                        };\n\t                        break;\n\t\n\t                    default:\n\t                        return {\n\t                            v: self.dataSource\n\t                        };\n\t                        break;\n\t                }\n\t            }();\n\t\n\t            if ((typeof _ret === \"undefined\" ? \"undefined\" : _typeof(_ret)) === \"object\") return _ret.v;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForPieChart\",\n\t        value: function getDataTargetForPieChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForDonutChart\",\n\t        value: function getDataTargetForDonutChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true,\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": _C2.default.get(self.keys.value, data)\n\t                };\n\t\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForTimelineChart\",\n\t        value: function getDataTargetForTimelineChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t\n\t            self.dataSource.forEach(function (data, index) {\n\t\n\t                var _data = {\n\t                    // \"color\"     : color(index),\n\t                    \"icon\": _C2.default.get(self.keys.icon, data),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": [],\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t\n\t                var _dsArray = _C2.default.get(self.keys.value, data),\n\t                    _valueArray = [],\n\t                    _valueItem = {\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"start\": null,\n\t                    \"end\": null,\n\t                    \"color\": \"#fff\",\n\t                    \"data-ref\": null,\n\t                    \"enable\": true,\n\t                    \"icon\": null\n\t                };\n\t\n\t                if (_C2.default.isArray(_dsArray)) {\n\t                    _dsArray.forEach(function (d, i) {\n\t                        _valueItem = {\n\t                            \"name\": _C2.default.get(self.keys.name, data),\n\t                            \"start\": new Date(d.start),\n\t                            \"end\": new Date(d.end),\n\t                            \"color\": color(index),\n\t                            \"data-ref\": _C2.default.guid(),\n\t                            \"enable\": true,\n\t                            \"icon\": _C2.default.get(self.keys.icon, data)\n\t                        };\n\t                        _valueArray.push(_valueItem);\n\t                    });\n\t                } else {\n\t                    _valueItem = {\n\t                        \"name\": _C2.default.get(self.keys.name, data),\n\t                        \"start\": new Date(_dsArray.start),\n\t                        \"end\": new Date(_dsArray.end),\n\t                        \"color\": color(index),\n\t                        \"data-ref\": _C2.default.guid(),\n\t                        \"enable\": true,\n\t                        \"icon\": _C2.default.get(self.keys.icon, data)\n\t                    };\n\t                    _valueArray.push(_valueItem);\n\t                }\n\t                _data.value = _valueArray;\n\t\n\t                self.dataTarget.push(_data);\n\t            });\n\t            return self.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"getDataTargetForLineChart\",\n\t        value: function getDataTargetForLineChart() {\n\t            var self = this;\n\t\n\t            var color = self.colorRange;\n\t            self.dataSource.forEach(function (data, index) {\n\t                var _data = {\n\t                    \"color\": color(index),\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"value\": [],\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t\n\t                var _valueXArray = _C2.default.get(self.keys.x, data),\n\t                    _valueYArray = _C2.default.get(self.keys.y, data),\n\t                    _valueArray = [],\n\t                    _valueItem = {\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"valueX\": null,\n\t                    \"valueY\": null,\n\t                    \"data-ref\": _C2.default.guid(),\n\t                    \"enable\": true\n\t                };\n\t\n\t                if (_C2.default.isArray(_valueYArray)) {\n\t                    /**\r\n\t                     *\r\n\t                     * CASE 1: [{name:, value: []}, {}, ..]\r\n\t                     *\r\n\t                     */\n\t\n\t                    if (!_C2.default.isArray(_valueXArray)) {\n\t                        _valueYArray.forEach(function (d, i) {\n\t                            _valueItem = {\n\t                                \"name\": _C2.default.get(self.keys.name, data),\n\t                                \"valueX\": i,\n\t                                \"valueY\": d,\n\t                                \"data-ref\": _C2.default.guid(),\n\t                                \"enable\": true\n\t                            };\n\t                            _valueArray.push(_valueItem);\n\t                        });\n\t                    } else\n\t\n\t                        /**\r\n\t                         *\r\n\t                         * CASE 2: [{name:, value: {x: [], y:[]}, {}, ..]\r\n\t                         *\r\n\t                         */\n\t\n\t                        if (_C2.default.isArray(_valueXArray) && !self.timeFormat) {\n\t                            _valueYArray.forEach(function (d, i) {\n\t                                _valueItem = {\n\t                                    \"name\": _C2.default.get(self.keys.name, data),\n\t                                    \"valueX\": !_C2.default.isEmpty(_valueXArray[i]) ? _valueXArray[i] : i,\n\t                                    \"valueY\": d,\n\t                                    \"data-ref\": _C2.default.guid(),\n\t                                    \"enable\": true\n\t                                };\n\t                                _valueArray.push(_valueItem);\n\t                            });\n\t                        } else\n\t\n\t                            /**\r\n\t                             *\r\n\t                             * CASE 3: [{name:, value: {x: [], y:[]}, {}, ..] with config `timeFormat`\r\n\t                             *\r\n\t                             */\n\t\n\t                            if (_C2.default.isArray(_valueXArray) && self.timeFormat) {\n\t                                (function () {\n\t                                    var _parser = _C2.default.dateParser(self.timeFormat);\n\t\n\t                                    _valueYArray.forEach(function (d, i) {\n\t                                        _valueItem = {\n\t                                            \"name\": _C2.default.get(self.keys.name, data),\n\t                                            \"valueX\": !_C2.default.isEmpty(_valueXArray[i]) ? _parser(_valueXArray[i]) : i,\n\t                                            \"valueY\": d,\n\t                                            \"data-ref\": _C2.default.guid(),\n\t                                            \"enable\": true\n\t                                        };\n\t                                        _valueArray.push(_valueItem);\n\t                                    });\n\t                                })();\n\t                            }\n\t                }\n\t\n\t                _data.value = _valueArray;\n\t\n\t                self.dataTarget.push(_data);\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t        /*=====  End of Normalize Data For Charts  ======*/\n\t\n\t        /*=================================================\r\n\t        =              Normalize Data For Map             =\r\n\t        =================================================*/\n\t\n\t    }, {\n\t        key: \"getDataTargetForMap\",\n\t        value: function getDataTargetForMap() {\n\t            var self = this;\n\t\n\t            var getDataValue = function getDataValue(key, data, isArray) {\n\t                var _keys = key.split('.');\n\t                var _value = _C2.default.get(key, data);\n\t                var _v = void 0;\n\t                if (_keys.length == 1 && _keys[0] == 'value' && !isArray) {\n\t                    _v = _value;\n\t                } else {\n\t                    _v = new Object();\n\t                    _v[_keys[_keys.length - 1]] = _value;\n\t                }\n\t                return _v;\n\t            };\n\t\n\t            var getData = function getData(data) {\n\t                var _data = {\n\t                    \"name\": _C2.default.get(self.keys.name, data),\n\t                    \"coor\": _C2.default.get(self.keys.coor, data),\n\t                    \"value\": null\n\t                };\n\t                if (_C2.default.isArray(self.keys.value)) {\n\t                    self.keys.value.forEach(function (k) {\n\t                        var _v = getDataValue(k, data, true);\n\t                        _data.value = _C2.default.merge(_data.value, _v);\n\t                    });\n\t                } else {\n\t                    _data.value = getDataValue(self.keys.value, data, false);\n\t                }\n\t\n\t                return _data;\n\t            };\n\t\n\t            if (!_C2.default.isArray(self.dataSource)) self.dataTarget = getData(self.dataSource);else self.dataSource.forEach(function (data) {\n\t                self.dataTarget.push(getData(data));\n\t            });\n\t\n\t            return self.dataTarget;\n\t        }\n\t\n\t        /*=====    End of Normalize Data For Map   ======*/\n\t\n\t        /*=============================================\r\n\t        =            Data Input From Files            =\r\n\t        =============================================*/\n\t\n\t    }, {\n\t        key: \"getCsv\",\n\t        value: function getCsv(callback) {\n\t\n\t            var self = this;\n\t\n\t            d3.csv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                if (!_C2.default.isEmpty(callback) && _C2.default.isFunction(callback)) callback.call(self, data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getTsv\",\n\t        value: function getTsv(callback) {\n\t\n\t            var self = this;\n\t\n\t            d3.tsv(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                if (!_C2.default.isEmpty(callback) && _C2.default.isFunction(callback)) callback.call(self, data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getText\",\n\t        value: function getText(callback) {\n\t\n\t            var self = this;\n\t\n\t            d3.text(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                if (!_C2.default.isEmpty(callback) && _C2.default.isFunction(callback)) callback.call(self, data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getJson\",\n\t        value: function getJson(callback) {\n\t\n\t            var self = this;\n\t\n\t            d3.json(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                if (!_C2.default.isEmpty(callback) && _C2.default.isFunction(callback)) callback.call(self, data);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"getXml\",\n\t        value: function getXml(callback) {\n\t\n\t            var self = this;\n\t\n\t            d3.xml(self.file.url, function (err, data) {\n\t                if (err) throw err;\n\t\n\t                // Convert the XML document to an array of objects.\n\t                // Note that querySelectorAll returns a NodeList, not a proper Array,\n\t                // so we must use map.call to invoke array methods.\n\t                data = [].map.call(data.querySelectorAll(\"data\"), function (d) {\n\t                    return {\n\t                        name: d.querySelector(\"name\").textContent,\n\t                        value: d.querySelector(\"value\").textContent\n\t                    };\n\t                });\n\t\n\t                if (!_C2.default.isEmpty(callback) && _C2.default.isFunction(callback)) callback.call(self, data);\n\t            });\n\t        }\n\t\n\t        /*=====  End of Data Input From Files  ======*/\n\t\n\t    }, {\n\t        key: \"options\",\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"callback\",\n\t        get: function get() {\n\t            return this._callback;\n\t        }\n\t    }, {\n\t        key: \"chartType\",\n\t        get: function get() {\n\t            return this._chartType;\n\t        }\n\t    }, {\n\t        key: \"file\",\n\t        get: function get() {\n\t            return this._file;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._file = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"keys\",\n\t        get: function get() {\n\t            return this._keys;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._keys = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataSource\",\n\t        get: function get() {\n\t            return this._dataSource;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataSource = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"dataTarget\",\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"groups\",\n\t        get: function get() {\n\t            return this._groups;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._groups = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"stacks\",\n\t        get: function get() {\n\t            return this._stacks;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._stacks = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"colorRange\",\n\t        get: function get() {\n\t            return this._colorRange;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._colorRange = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"timeFormat\",\n\t        get: function get() {\n\t            return this._timeFormat;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._timeFormat = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return DataAdapter;\n\t}();\n\t\n\texports.default = DataAdapter;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tooltip = function () {\n\t    function Tooltip(options) {\n\t        _classCallCheck(this, Tooltip);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            show: true,\n\t            position: 'right', // [top, right, bottom, left]\n\t            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n\t            fontColor: '#fff',\n\t            fontSize: '11px',\n\t            format: null\n\t        };\n\t\n\t        self._options = options;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Tooltip, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Draw Tooltip\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw(data, chart, eventType) {\n\t            var self = this;\n\t\n\t            var format = self.format;\n\t\n\t            // First of all, remove all exisiting tooltips\n\t            d3.select(chart.id).selectAll('.c9-custom-tooltip-container').remove();\n\t\n\t            var selector = d3.select(chart.id);\n\t\n\t            // TODO: Add margin to tooltip configs\n\t            // Default: (100, 100) relative to mouse coordinate and chart margin transformation\n\t            var divOnHover = selector.append('div').attr('class', function () {\n\t                return 'c9-custom-tooltip-container ' + self.getTriangleClass();\n\t            })\n\t            // .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1] - 100) + ')'; })\n\t            .style('display', 'none').style('position', 'absolute').style('pointer-events', 'all').style('background-color', self.options.backgroundColor).style('color', self.options.fontColor).style('font-size', self.options.fontSize);\n\t            // .style('width', '100px')\n\t            // .style('height', '50px')\n\t            // .html(function() {\n\t            //     return self.getFormatByChartType(chart, data);\n\t            // });\n\t\n\t            self.eventFactory = {\n\t\n\t                'mouseover': function mouseover(_data) {\n\t                    divOnHover.html(function () {\n\t                        return self.getFormatByChartType(chart, _data);\n\t                    }).transition()\n\t                    // .style('left', function() {return d3.mouse(this)[0] + 'px';})\n\t                    .style('left', function () {\n\t                        return self.getCoordinate(chart)['left'];\n\t                    })\n\t                    // .style('top', function() {return d3.mouse(this)[1]  + 'px';})\n\t                    .style('top', function () {\n\t                        return self.getCoordinate(chart)['top'];\n\t                    }).duration(200).style(\"display\", 'block').style('pointer-events', 'none');\n\t                },\n\t\n\t                'mousemove': function mousemove(_data) {\n\t                    divOnHover.html(function () {\n\t                        return self.getFormatByChartType(chart, _data);\n\t                    }).transition()\n\t                    // .style('left', function() {return d3.mouse(this)[0] + 'px';})\n\t                    .style('left', function () {\n\t                        return self.getCoordinate(chart)['left'];\n\t                    })\n\t                    // .style('top', function() {return d3.mouse(this)[1]  + 'px';})\n\t                    .style('top', function () {\n\t                        return self.getCoordinate(chart)['top'];\n\t                    }).duration(200).style(\"display\", 'block').style('pointer-events', 'none');\n\t                },\n\t\n\t                'mouseout': function mouseout(_data) {\n\t                    divOnHover.transition().duration(200).style('display', 'none');\n\t                }\n\t\n\t            };\n\t\n\t            if (self.options.show) {\n\t\n\t                switch (eventType) {\n\t                    case 'mouseover':\n\t                        self.eventFactory.mouseover(data);\n\t                        break;\n\t                    case 'mouseout':\n\t                        self.eventFactory.mouseout(data);\n\t                        break;\n\t                    case 'mousemove':\n\t                        self.eventFactory.mousemove(data);\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getTriangleClass',\n\t        value: function getTriangleClass() {\n\t            var self = this;\n\t            var r = void 0;\n\t\n\t            switch (self.options.position) {\n\t                case 'top':\n\t                    r = 'c9-tooltip-top';\n\t                    break;\n\t                case 'right':\n\t                    r = 'c9-tooltip-right';\n\t                    break;\n\t                case 'bottom':\n\t                    r = 'c9-tooltip-bottom';\n\t                    break;\n\t                case 'left':\n\t                    r = 'c9-tooltip-left';\n\t                    break;\n\t            }\n\t            return r;\n\t        }\n\t    }, {\n\t        key: 'setDefaultFormatByChartType',\n\t        value: function setDefaultFormatByChartType(chart, data) {\n\t            // if (Helper.isEmpty(data)) { console.log(data);return false;}\n\t            var self = this;\n\t\n\t            var chartType = chart.chartType,\n\t                format = void 0;\n\t\n\t            switch (chartType) {\n\t                case 'bar':\n\t                    format = function format(data) {\n\t                        return '<strong>' + data.name + '</strong>' + '<br><span>' + data.value + '</span>';\n\t                    };\n\t                    break;\n\t                case 'pie':\n\t                    format = function format(data) {\n\t                        return '<strong>' + data.data.name + '</strong>' + '<br><span>' + data.data.value + '</span>';\n\t                    };\n\t                    break;\n\t                case 'donut':\n\t                    format = function format(data) {\n\t                        return '<strong>' + data.data.name + '</strong>' + '<br><span>' + data.data.value + '</span>';\n\t                    };\n\t                    break;\n\t                case 'line':\n\t                    format = function format(data) {\n\t                        var _format = '';\n\t                        data.forEach(function (d, i) {\n\t                            _format += '<strong>' + d.name + '</strong>' + '<br><span> Value X: ' + d.valueX + '</span>' + '<br><span> Value Y: ' + d.valueY + '</span><br>';\n\t                        });\n\t                        return _format;\n\t                    };\n\t                    break;\n\t                case 'timeline':\n\t                    format = function format(data) {\n\t                        return (data.name ? '<strong>' + data.name + '</strong>' : '<img src=' + data.icon + '\" width=\"' + chart.options.itemHeight + '\" height=\"' + chart.options.itemHeight + '\">') + '<br><strong>Start at: </strong><span>' + data.start + '</span><br><strong>End at: </strong><span>' + data.end + '</span>';\n\t                    };\n\t                    break;\n\t            }\n\t\n\t            // Update format for tooltip based on chart type\n\t            self.format = self.options.format || format;\n\t            // console.log(self.format);\n\t        }\n\t    }, {\n\t        key: 'getCoordinate',\n\t        value: function getCoordinate(chart) {\n\t            var self = this;\n\t            var r = void 0;\n\t\n\t            var offset = self.getOffset(d3.select(chart.id)[0][0]);\n\t\n\t            switch (self.options.position) {\n\t                case 'top':\n\t                    r = {\n\t                        'left': d3.event.pageX - offset.left - 50 + 'px',\n\t                        'top': d3.event.pageY - offset.top - 50 + 'px'\n\t                    };\n\t                    break;\n\t                case 'right':\n\t                    r = {\n\t                        // 'left': (d3.event.pageX - offset.left - 50) + 'px',\n\t                        'left': d3.event.pageX - offset.left + 'px',\n\t                        // 'top': (d3.event.pageY - offset.top - 50) + 'px'\n\t                        'top': d3.event.pageY - offset.top - 25 + 'px'\n\t                    };\n\t                    break;\n\t                case 'bottom':\n\t                    r = {\n\t                        'left': d3.event.pageX - offset.left - 50 + 'px',\n\t                        'top': d3.event.pageY - offset.top + 50 + 'px'\n\t                    };\n\t                    break;\n\t                case 'left':\n\t                    r = {\n\t                        // 'left': (d3.event.pageX - offset.left + 50) + 'px',\n\t                        'left': d3.event.pageX - offset.left - 50 + 'px',\n\t                        // 'top': (d3.event.pageY - offset.top - 50) + 'px'\n\t                        'top': d3.event.pageY - offset.top - 25 + 'px'\n\t                    };\n\t                    break;\n\t            }\n\t            return r;\n\t        }\n\t    }, {\n\t        key: 'getOffset',\n\t        value: function getOffset(elem) {\n\t            var box = { top: 0, left: 0 };\n\t\n\t            // BlackBerry 5, iOS 3 (original iPhone)\n\t            if (_typeof(elem.getBoundingClientRect) !== undefined) {\n\t                box = elem.getBoundingClientRect();\n\t            }\n\t\n\t            return {\n\t                top: box.top + (window.pageYOffset || elem.scrollTop) - (elem.clientTop || 0),\n\t                left: box.left + (window.pageXOffset || elem.scrollLeft) - (elem.clientLeft || 0)\n\t            };\n\t        }\n\t    }, {\n\t        key: 'getFormatByChartType',\n\t        value: function getFormatByChartType(chart, data) {\n\t            var self = this;\n\t\n\t            self.setDefaultFormatByChartType(chart, data);\n\t\n\t            var r = self.format(data);\n\t\n\t            return r;\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'format',\n\t        get: function get() {\n\t            return this._format;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._format = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._eventFactory = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Tooltip;\n\t}();\n\t\n\texports.default = Tooltip;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Chart = function () {\n\t    function Chart(options) {\n\t        _classCallCheck(this, Chart);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t            // size (width, height), margin, padding\n\t            width: 750,\n\t            height: 500,\n\t            margin: {\n\t                top: 100,\n\t                left: 50,\n\t                right: 50,\n\t                bottom: 50\n\t            },\n\t\n\t            // interaction in chart\n\t            hover: {\n\t                enable: true,\n\t                options: {\n\t                    template: '',\n\t                    onMouseOver: {\n\t                        fadeIn: 200,\n\t                        callback: function callback(data) {\n\t                            // console.dir(data);\n\t                        }\n\t                    },\n\t                    onMouseOut: {\n\t                        fadeOut: 500,\n\t                        callback: function callback(data) {\n\t                            // console.dir(data);\n\t                        }\n\t                    },\n\t                    onMouseMove: {\n\t                        callback: function callback(data) {\n\t                            // console.dir(data);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t\n\t            click: {\n\t                callback: function callback(data) {\n\t                    // console.dir(data);\n\t                }\n\t            },\n\t\n\t            // title\n\t            title: {\n\t                show: true,\n\t                text: \"Sample Chart\",\n\t                position: 'top',\n\t                fontSize: \"14px\"\n\t            },\n\t\n\t            // legend\n\t            legend: {\n\t                show: true,\n\t                position: \"top\",\n\t                size: 10,\n\t                fontSize: \"12px\",\n\t                fontColor: \"#999\",\n\t                fontWeight: 'bold',\n\t                margin: [5, 5, 5, 5],\n\t                space: 10\n\t            },\n\t\n\t            // tooltip\n\t            tooltip: {\n\t                show: true,\n\t                position: 'right', // [top, right, bottom, left]\n\t                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n\t                fontColor: '#fff',\n\t                fontSize: '11px',\n\t                format: null\n\t            },\n\t\n\t            // table \n\t            table: {\n\t                container: \"body\",\n\t                show: false,\n\t                headings: [\"Name\", \"Value\"],\n\t                style: \"stripe\", // \"strip\", \"border\"\n\t                serial: true,\n\t                hover: {\n\t                    enable: true,\n\t                    callback: null\n\t                },\n\t                click: {\n\t                    enable: true,\n\t                    callback: null\n\t                }\n\t            },\n\t\n\t            // color range\n\t            colorRange: \"category20\",\n\t\n\t            // data\n\t            data: {\n\t                // ALL OPTIONS AVAILABLE IN DATA CONFIG\n\t                plain: [],\n\t                file: {\n\t                    type: null,\n\t                    url: null\n\t                },\n\t                keys: {\n\t                    name: \"name\",\n\t                    value: \"value\",\n\t                    time: \"time\"\n\t                },\n\t                groups: [],\n\t                stacks: []\n\t            },\n\t\n\t            axis: {\n\t                x: {\n\t                    tick: {\n\t                        rotate: 0,\n\t                        count: 10,\n\t                        size: 6,\n\t                        padding: 3,\n\t                        format: undefined,\n\t                        values: [],\n\t                        //the following use for timeline chart\n\t                        type: d3.time.hours,\n\t                        interval: 1\n\t                    },\n\t                    label: {\n\t                        text: \"Name\",\n\t                        position: \"default\"\n\t                    },\n\t                    show: true,\n\t                    grid: false,\n\t                    type: \"\"\n\t                },\n\t                y: {\n\t                    tick: {\n\t                        rotate: 0,\n\t                        count: 10,\n\t                        size: 6,\n\t                        padding: 3,\n\t                        format: undefined,\n\t                        values: []\n\t                    },\n\t                    label: {\n\t                        text: \"Value\",\n\t                        position: \"default\"\n\t                    },\n\t                    show: true,\n\t                    grid: true,\n\t                    type: \"\"\n\t                }\n\t            },\n\t\n\t            // sub-chart\n\t            subchart: {\n\t                show: false,\n\t                height: 100\n\t            }\n\t        };\n\t\n\t        self._options = options;\n\t\n\t        self.initConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Chart, [{\n\t        key: 'initConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Init parent config\r\n\t         * Only in BaseClass <Chart> to init config\r\n\t         */\n\t        value: function initConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t\n\t            var options = self.options;\n\t\n\t            self.id = options.id || config.id;\n\t            self.width = options.width || config.width;\n\t            self.height = options.height || config.height;\n\t            self.colorRange = options.colorRange || config.colorRange;\n\t\n\t            self.margin = _C2.default.merge(options.margin, config.margin);\n\t            self.hover = _C2.default.merge(options.hover, config.hover);\n\t            self.click = _C2.default.merge(options.click, config.click);\n\t\n\t            self.dataOption = _C2.default.mergeDeep(config.data, options.data);\n\t\n\t            self.options.subchart = _C2.default.merge(options.subchart, config.subchart);\n\t            self.options.table = _C2.default.merge(options.table, config.table);\n\t            self.options.tooltip = _C2.default.merge(options.tooltip, config.tooltip);\n\t            self.options.legend = _C2.default.merge(options.legend, config.legend);\n\t            self.options.axis = _C2.default.mergeDeep(config.axis, options.axis);\n\t        }\n\t\n\t        /**\r\n\t         * Update parent config\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateConfig',\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t\n\t            var options = self.options;\n\t\n\t            self.id = options.id || config.id;\n\t            self.width = options.width || config.width;\n\t            self.height = options.height || config.height;\n\t            self.colorRange = options.colorRange || config.colorRange;\n\t\n\t            self.margin = _C2.default.merge(options.margin, config.margin);\n\t            self.hover = _C2.default.merge(options.hover, config.hover);\n\t            self.click = _C2.default.merge(options.click, config.click);\n\t\n\t            self.dataOption = _C2.default.mergeDeep(config.data, options.data);\n\t\n\t            self.options.subchart = _C2.default.merge(options.subchart, config.subchart);\n\t            self.options.table = _C2.default.merge(options.table, config.table);\n\t            self.options.tooltip = _C2.default.merge(options.tooltip, config.tooltip);\n\t            self.options.legend = _C2.default.merge(options.legend, config.legend);\n\t            self.options.axis = _C2.default.mergeDeep(config.axis, options.axis);\n\t        }\n\t\n\t        /**\r\n\t         * Draw or Re-draw Base Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            var margin = self.margin,\n\t                id = self.id,\n\t                width = self.width - margin.left - margin.right,\n\t                height = self.height - margin.top - margin.bottom;\n\t\n\t            self.container = d3.select(id);\n\t\n\t            // Remove existing chart at current container\n\t            self.container.selectAll(\".c9-svg\").data([]).exit().remove();\n\t\n\t            self.svg = d3.select(id).style('position', 'relative').append(\"svg\").attr('class', 'c9-svg').attr(\"width\", self.width).attr(\"height\", self.height).style('overflow', 'visible'); // to overwrite overflow: hidden by Boostrap as default\n\t\n\t\n\t            self.svg.append(\"defs\").append(\"clipPath\").attr(\"id\", \"clip\").append(\"rect\").attr(\"width\", width).attr(\"height\", height);\n\t\n\t            self.body = self.svg.append(\"g\").attr('class', 'c9-chart c9-custom-container').attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        }\n\t\n\t        /**\r\n\t         * Get lightening color to create effect when interacting\r\n\t         * @param  {[type]} color [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getLightenColor',\n\t        value: function getLightenColor(color) {\n\t            return _C2.default.shadeColor(0.5, color);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {}\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            var self = this;\n\t\n\t            _C2.default.set(key, value, self.options);\n\t\n\t            // Self-update on Base Chart to make sure that self.options consisting\n\t            // of all new values\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(data, dataConfig) {}\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'container',\n\t        get: function get() {\n\t            return this._container;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._container = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'id',\n\t        get: function get() {\n\t            if (this._id !== 'body') {\n\t                return '#' + this._id;\n\t            }\n\t            return this._id;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._id = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'width',\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._width = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this._height;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._height = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'actualWidth',\n\t        get: function get() {\n\t            return this._actualWidth;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._actualWidth = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'actualHeight',\n\t        get: function get() {\n\t            return this._actualHeight;\n\t        }\n\t\n\t        /**\r\n\t         * If colorRange is Array of color then scale range according to it\r\n\t         * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n\t         */\n\t        ,\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._actualHeight = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'colorRange',\n\t        get: function get() {\n\t            var color = this._colorRange;\n\t\n\t            if (typeof color == 'string') {\n\t                try {\n\t                    return d3.scale[color]();\n\t                } catch (err) {\n\t                    return function (i) {\n\t                        return color;\n\t                    };\n\t                }\n\t            } else if ((typeof color === 'undefined' ? 'undefined' : _typeof(color)) == 'object') {\n\t                return d3.scale.ordinal().range(color);\n\t            }\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._colorRange = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'margin',\n\t        get: function get() {\n\t            return this._margin;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._margin = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataOption',\n\t        get: function get() {\n\t            return this._dataOption;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataOption = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'svg',\n\t        get: function get() {\n\t            return this._svg;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._svg = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'body',\n\t        get: function get() {\n\t            return this._body;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._body = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hover',\n\t        get: function get() {\n\t            return this._hover;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._hover = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'click',\n\t        get: function get() {\n\t            return this._click;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._click = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataTarget',\n\t        get: function get() {\n\t            return this._dataTarget;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataTarget = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dataSource',\n\t        get: function get() {\n\t            return this._dataSource;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._dataSource = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'eventFactory',\n\t        get: function get() {\n\t            return this._eventFactory;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._eventFactory = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._x = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._y = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'chartType',\n\t        get: function get() {\n\t            return this._chartType;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._chartType = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'title',\n\t        get: function get() {\n\t            return this._title;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._title = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'axis',\n\t        get: function get() {\n\t            return this._axis;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._axis = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'legend',\n\t        get: function get() {\n\t            return this._legend;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._legend = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'table',\n\t        get: function get() {\n\t            return this._table;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._table = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'tooltip',\n\t        get: function get() {\n\t            return this._tooltip;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._tooltip = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Chart;\n\t}();\n\t\n\texports.default = Chart;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Axis = function () {\n\t    function Axis(options, chart, width, height) {\n\t        _classCallCheck(this, Axis);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            x: {\n\t                tick: {\n\t                    rotate: 0,\n\t                    count: 10, // number of ticks to display\n\t                    size: 6, // size of tick\n\t                    padding: 3,\n\t                    format: undefined,\n\t                    values: [],\n\t                    //the following use for timeline chart\n\t                    time: undefined,\n\t                    interval: 1\n\t                },\n\t                label: {\n\t                    text: \"Name\",\n\t                    position: \"default\"\n\t                },\n\t                show: true,\n\t                grid: false,\n\t                type: \"\"\n\t            },\n\t            y: {\n\t                tick: {\n\t                    rotate: 0,\n\t                    count: 10,\n\t                    size: 6,\n\t                    padding: 3,\n\t                    format: undefined,\n\t                    values: []\n\t                },\n\t                label: {\n\t                    text: \"Value\",\n\t                    position: \"default\"\n\t                },\n\t                show: true,\n\t                grid: true,\n\t                type: \"\"\n\t            }\n\t        };\n\t\n\t        self._options = options;\n\t        self._chart = chart;\n\t        self._width = width;\n\t        self._height = height;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    _createClass(Axis, [{\n\t        key: \"updateConfig\",\n\t\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t\n\t            self.x = self.chart.x;\n\t            self.y = self.chart.y;\n\t\n\t            self.data = self.chart.dataTarget;\n\t            self.isLogaricVariant = self.chart.options.isLogaric;\n\t\n\t            if (self.chart.chartType == \"timeline\") {\n\t                var xScale = d3.time.scale().domain([self.chart.options.starting, self.chart.options.ending]).range([0, self.width]);\n\t\n\t                self.xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\").tickFormat(self.options.x.tick.format === undefined ? d3.time.format(\"%I %p\") : self.options.x.tick.format)\n\t                // .tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize)\n\t                .ticks(self.options.x.tick.time || self.options.x.tick.count, self.options.x.tick.interval);\n\t                // delete options.starting;\n\t                // delete options.ending;\n\t            } else {\n\t                self.xAxis = d3.svg.axis().scale(self.x).orient(\"bottom\").tickPadding(self.options.x.tick.padding).ticks(self.options.x.tick.count).tickValues(self.options.x.tick.values.length > 0 ? self.options.x.tick.values : undefined).tickFormat(self.options.x.type == \"timeseries\" ? self.options.x.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.x.tick.format ? self.options.x.tick.format : undefined);\n\t\n\t                // In LOG scale, can't specify default number of ticks\n\t                // must be filter with tickFormat instead\n\t                // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\n\t                if (self.isLogaricVariant) {\n\t                    self.yAxis = d3.svg.axis().scale(self.y).orient(\"left\").ticks(self.options.y.tick.count, self.options.y.type == \"timeseries\" ? self.options.y.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.y.tick.format ? self.options.y.tick.format : undefined).tickPadding(self.options.y.tick.padding).tickValues(self.options.y.tick.values.length > 0 ? self.options.y.tick.values : undefined);\n\t                } else {\n\t                    self.yAxis = d3.svg.axis().scale(self.y).orient(\"left\").ticks(self.options.y.tick.count).tickPadding(self.options.y.tick.padding).tickValues(self.options.y.tick.values.length > 0 ? self.options.y.tick.values : undefined).tickFormat(self.options.y.type == \"timeseries\" ? self.options.y.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.y.tick.format ? self.options.y.tick.format : undefined);\n\t                }\n\t            }\n\t\n\t            if (self.chart.chartType != \"timeline\") {\n\t                // Grid\n\t                if (self.options.x.grid) {\n\t                    self.xAxis.innerTickSize(-self.height).outerTickSize(0);\n\t                }\n\t\n\t                if (self.options.y.grid) {\n\t                    self.yAxis.innerTickSize(-self.width).outerTickSize(0);\n\t                }\n\t            }\n\t\n\t            var textAnchor = function textAnchor(angle) {\n\t                var sin = Math.sin(angle * Math.PI / 180).toFixed(15);\n\t                return sin == 0 ? \"middle\" : sin > 0 ? \"start\" : \"end\";\n\t            };\n\t\n\t            var textDx = function textDx(angle) {\n\t                var sin = Math.sin(angle * Math.PI / 180).toFixed(15);\n\t                return 8 * sin;\n\t            };\n\t\n\t            var textY = function textY(angle) {\n\t                return 11.5 - 2.5 * (angle / 15) * (angle > 0 ? 1 : -1);\n\t            };\n\t\n\t            //draw x axis\n\t            self.chart.body.append(\"g\").attr(\"class\", \"c9-axis c9-axis-x\").attr(\"transform\", \"translate(0,\" + self.height + \")\").call(self.xAxis);\n\t\n\t            //draw tick\n\t            self.chart.svg.select(\".c9-axis.c9-axis-x\").selectAll(\"text\").style(\"text-anchor\", textAnchor(self.options.x.tick.rotate)).attr(\"y\", textY(self.options.x.tick.rotate)).attr(\"x\", 0).attr(\"dy\", \".71em\").attr(\"dx\", textDx(self.options.x.tick.rotate)).attr(\"transform\", \"rotate(\" + self.options.x.tick.rotate + \")\");\n\t            //draw label\n\t            self.chart.svg.select(\".c9-axis.c9-axis-x\").append(\"text\").attr(\"class\", \"c9-axis c9-axis-x-text\").attr(\"dx\", \"-.8em\").attr(\"dy\", \"-.55em\").attr(\"x\", self.width + 20).attr(\"y\", 10).style(\"text-anchor\", \"start\").text(self.options.x.label.text);\n\t\n\t            //hide x axis\n\t            if (!self.options.x.show) {\n\t                self.chart.svg.select(\".c9-axis.c9-axis-x>.domain\").style(\"display\", \"none\");\n\t                if (!self.options.x.grid) self.chart.svg.selectAll(\".c9-axis.c9-axis-x>g.tick>line\").style(\"display\", \"none\");\n\t            }\n\t\n\t            if (self.chart.chartType != \"timeline\") {\n\t                self.chart.body.append(\"g\").attr(\"class\", \"c9-axis c9-axis-y\").call(self.yAxis);\n\t\n\t                self.chart.svg.select(\".c9-axis.c9-axis-y\").append(\"text\").attr(\"class\", \"c9-axis c9-axis-y-text\").attr(\"y\", -10).attr(\"dy\", \".10\").style(\"text-anchor\", \"end\").text(self.options.y.label.text);\n\t\n\t                if (!self.options.y.show) {\n\t                    self.chart.svg.select(\".c9-axis.c9-axis-y>.domain\").style(\"display\", \"none\");\n\t                    if (!self.options.y.grid) self.chart.svg.selectAll(\".c9-axis.c9-axis-y>g.tick>line\").style(\"display\", \"none\");\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(x, y, duration) {\n\t            var self = this;\n\t\n\t            if (!_C2.default.isEmpty(x)) {\n\t                self.x = x;\n\t\n\t                if (self.chart.chartType == 'timeline') {\n\t                    var xScale = d3.time.scale().domain([self.chart.options.starting, self.chart.options.ending]).range([0, self.width]);\n\t\n\t                    self.xAxis.scale(xScale);\n\t                } else {\n\t                    self.xAxis.scale(self.x);\n\t                }\n\t\n\t                self.chart.body.select('.c9-axis.c9-axis-x').transition().duration(duration).call(self.xAxis);\n\t            }\n\t            if (!_C2.default.isEmpty(y)) {\n\t                self.y = y;\n\t\n\t                if (self.chart.chartType == 'timeline') {\n\t                    return;\n\t                } else {\n\t                    self.yAxis.scale(self.y);\n\t                }\n\t\n\t                self.chart.body.select(\".c9-axis.c9-axis-y\").transition().duration(duration).call(self.yAxis);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            self.update(self.x, self.y, 100);\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: \"x\",\n\t        get: function get() {\n\t            return this._x;\n\t        },\n\t\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._x = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"y\",\n\t        get: function get() {\n\t            return this._y;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._y = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"xAxis\",\n\t        get: function get() {\n\t            return this._xAxis;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._xAxis = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"yAxis\",\n\t        get: function get() {\n\t            return this._yAxis;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._yAxis = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"chart\",\n\t        get: function get() {\n\t            return this._chart;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._chart = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"options\",\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"width\",\n\t        get: function get() {\n\t            return this._width;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._width = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"height\",\n\t        get: function get() {\n\t            return this._height;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._height = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Axis;\n\t}();\n\t\n\texports.default = Axis;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Legend = function () {\n\t    function Legend(options, chart) {\n\t        _classCallCheck(this, Legend);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            show: true,\n\t            position: \"top\",\n\t            size: 10,\n\t            fontSize: \"12px\",\n\t            fontColor: \"#999\",\n\t            fontWeight: 'bold',\n\t            margin: [5, 5, 5, 5],\n\t            space: 10,\n\t            box: false\n\t        };\n\t\n\t        self._options = options;\n\t        self._chart = chart;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Legend, [{\n\t        key: \"updateConfig\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t\n\t            self.maxWidth = self.chart.width;\n\t            self.maxHeight = self.chart.height;\n\t            self.data = self.chart.dataTarget;\n\t        }\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            self.data = data;\n\t\n\t            if (self.options.show) {\n\t                // Remove current legend\n\t                self.chart.svg.selectAll('.c9-custom-legend.c9-custom-legend-container').remove();\n\t\n\t                // var color = self.color;\n\t                var domain = [];\n\t\n\t                if (self.chart.chartType == \"bar\") {\n\t                    self.data = self.data[self.data.reduce(function (p, c, i, a) {\n\t                        return a[p].length > c.length ? p : i;\n\t                    }, 0)];\n\t                }\n\t\n\t                // Legend will be appended in main SVG container\n\t                // var container = d3.select(self._body[0][0].parentNode)\n\t                var container = self.chart.svg.append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-container\");\n\t\n\t                // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\n\t\n\t                self.item = container.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\").data(self.data).enter().append(\"g\").attr(\"class\", \"c9-custom-legend c9-custom-legend-item\").attr('data-ref', function (d) {\n\t                    return d['data-ref'];\n\t                }).attr('data-enable', function (d) {\n\t                    return d['enable'];\n\t                });\n\t\n\t                self.item.append('rect').attr('class', 'c9-custom-legend c9-custom-legend-rect').attr('width', self.options.size).attr('height', self.options.size).attr('r', self.options.size).attr('fill', function (d) {\n\t                    return d.color || d[0].color;\n\t                })\n\t                // .attr('stroke', function(d){ return d.color || d[0].color; })\n\t                .style('cursor', 'pointer');\n\t\n\t                self.item.append('rect').attr('width', 5).attr('height', self.options.size).attr('x', self.options.size).attr('y', 0).attr('opacity', 0).style('cursor', 'pointer');\n\t\n\t                self.item.append('text').attr('class', 'c9-custom-legend c9-custom-legend-text').attr('x', self.options.size + 5).attr('y', self.options.size).style('font-size', self.options.fontSize).style('font-weight', self.options.fontWeight).style('fill', self.options.fontColor).style('cursor', 'pointer')\n\t                // .attr('text-anchor', 'middle')\n\t                .text(function (d) {\n\t                    return self.chart.chartType == \"bar\" ? d.group : d.name;\n\t                });\n\t\n\t                //caculate position for legend\n\t                var getSize = function getSize(item) {\n\t                    return item.getBoundingClientRect();\n\t                };\n\t                var getXY = function getXY(item) {\n\t                    var xy = d3.select(item).attr('transform').split(',');\n\t                    return {\n\t                        x: parseFloat(xy[0].replace('translate(', '')),\n\t                        y: parseFloat(xy[1].replace(')', ''))\n\t                    };\n\t                };\n\t\n\t                var r = 0; // current row\n\t                var items = self.chart.svg.selectAll(\".c9-custom-legend-item\")[0];\n\t                var itemHeight = getSize(items[0]).height;\n\t                var numItemsCol = Math.floor((self.maxHeight - self.options.margin[0] - self.options.margin[2]) / (itemHeight + self.options.space));\n\t\n\t                if (self.options.space > itemHeight) numItemsCol++;\n\t\n\t                var maxWidthCol = new Array(Math.floor(items.length / numItemsCol));\n\t\n\t                items.forEach(function (i, n) {\n\t                    var pos = Math.floor(n / numItemsCol);\n\t                    var width = getSize(i).width;\n\t                    if (maxWidthCol[pos] == undefined || width > maxWidthCol[pos]) maxWidthCol[pos] = width;\n\t                });\n\t\n\t                if (self.options.position == \"bottom\") {\n\t                    self.item.attr(\"transform\", function (d, i) {\n\t                        if (i > 0) {\n\t                            var item = items[i];\n\t                            var preItem = items[i - 1];\n\t                            var newR = Math.floor((getXY(preItem).x + getSize(preItem).width + self.options.space + getSize(item).width + self.options.margin[1]) / self.maxWidth);\n\t                            if (newR > 0) r++;\n\t                            return \"translate(\" + (newR > 0 ? self.options.margin[3] : getXY(preItem).x + getSize(preItem).width + self.options.space) + \",\" + (self.maxHeight - self.options.margin[0] - itemHeight - r * (itemHeight + self.options.space)) + \")\";\n\t                        } else {\n\t                            return \"translate(\" + self.options.margin[3] + \",\" + (self.maxHeight - self.options.margin[0] - itemHeight) + \")\";\n\t                        }\n\t                    });\n\t                } else if (self.options.position == \"left\") {\n\t                    self.item.attr(\"transform\", function (d, i) {\n\t                        var pos = Math.floor(i / numItemsCol);\n\t\n\t                        if (i > 0) {\n\t                            var prePos = Math.floor((i - 1) / numItemsCol);\n\t                            var item = items[i];\n\t                            var preItem = items[i - 1];\n\t                            return \"translate(\" + (pos > prePos ? maxWidthCol[pos] + self.options.space + getXY(preItem).x : getXY(preItem).x) + \",\" + (pos > prePos ? self.options.margin[0] : getXY(preItem).y + getSize(preItem).height + self.options.space) + \")\";\n\t                        } else return \"translate(\" + self.options.margin[3] + \",\" + self.options.margin[0] + \")\";\n\t                    });\n\t                } else if (self.options.position == \"right\") {\n\t                    self.item.attr(\"transform\", function (d, i) {\n\t                        var pos = Math.floor(i / numItemsCol);\n\t                        if (i > 0) {\n\t                            var prePos = Math.floor((i - 1) / numItemsCol);\n\t                            var item = items[i];\n\t                            var preItem = items[i - 1];\n\t                            return \"translate(\" + (pos > prePos ? getXY(preItem).x - self.options.space - maxWidthCol[pos] : getXY(preItem).x) + \",\" + (pos > prePos ? self.options.margin[0] : getXY(preItem).y + getSize(preItem).height + self.options.space) + \")\";\n\t                        } else return \"translate(\" + (self.maxWidth - self.options.margin[3] - maxWidthCol[pos]) + \",\" + self.options.margin[0] + \")\";\n\t                    });\n\t                } else {\n\t                    self.item.attr(\"transform\", function (d, i) {\n\t                        if (i > 0) {\n\t                            var item = items[i];\n\t                            var preItem = items[i - 1];\n\t                            var newR = Math.floor((getXY(preItem).x + getSize(preItem).width + self.options.space + getSize(item).width + self.options.margin[1]) / self.maxWidth);\n\t                            if (newR > 0) r++;\n\t\n\t                            return \"translate(\" + (newR > 0 ? self.options.margin[3] : getXY(preItem).x + getSize(preItem).width + self.options.space) + \",\" + (self.options.margin[0] + r * (itemHeight + self.options.space)) + \")\";\n\t                        } else return \"translate(\" + self.options.margin[3] + \",\" + self.options.margin[0] + \")\";\n\t                    });\n\t                }\n\t\n\t                // if (self._legendBox && legendDomain.length > 0) {\n\t                //     var box = legendContainer[0][0].getBBox();\n\t                //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\n\t                //         .attr(\"x\", 0)\n\t                //         .attr(\"y\", 0)\n\t                //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\n\t                //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\n\t                //         .style(\"fill\", \"none\")\n\t                //         .style(\"stroke\", color);\n\t                // }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            self.update(self.chart.dataTarget);\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction event dispatchers for legend\r\n\t         * For: Donut Chart, Pie Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForLineChart\",\n\t        value: function updateInteractionForLineChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            var hoverOptions = chart.hover.options,\n\t                hoverEnable = chart.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = chart.click.callback;\n\t\n\t            self.itemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    if (_C2.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, item);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.attr('data-enable') == 'false') {\n\t                        selector.attr('data-enable', true);\n\t                        selector.style('opacity', '1');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.attr('data-enable', false);\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    // update line\n\t                    var newData = [];\n\t                    chart.dataTarget.forEach(function (_data) {\n\t                        if (_data['data-ref'] == item['data-ref']) _data.enable = enable;\n\t                        if (_data.enable) newData.push(_data);\n\t                    });\n\t\n\t                    chart.updateDomain(newData);\n\t                    chart.axis.update(chart.x, chart.y, 750);\n\t                    chart.update(newData);\n\t\n\t                    // Update subchart\n\t                    if (chart.options.subchart.show) {\n\t                        chart.subChartX.domain(chart.x.domain());\n\t                        chart.subChartY.domain(chart.y.domain());\n\t                        chart.svg.select('.c9-subchart-custom .c9-subchart-axis').transition().duration(750).call(chart.subChartXAxis);\n\t                        chart.updateSubChart(newData);\n\t                    }\n\t\n\t                    // Update overlay to make it at the bottom of structure\n\t                    chart.updateOverlay();\n\t                    chart.updateInteraction();\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    if (_C2.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t\n\t                    // Add pointer to cursor and make it lighten\n\t                    // legendSelector.style('cursor', 'pointer');\n\t                    self.lightenLegendItem(legendSelector);\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t                    if (_C2.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t\n\t                    // Add pointer to cursor\n\t                    // legendSelector.style('cursor', 'pointer');\n\t                    self.normalizeLegendItem(legendSelector);\n\t                }\n\t\n\t            };\n\t\n\t            if (self.options.show) {\n\t                self.item.on(self.itemEventFactory);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction event dispatchers for legend\r\n\t         * For: Donut Chart, Pie Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForDonutPieChart\",\n\t        value: function updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\n\t\n\t            var self = this;\n\t\n\t            var hoverOptions = chart.hover.options,\n\t                hoverEnable = chart.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = chart.click.callback;\n\t\n\t            var chartType = chart.chartType;\n\t\n\t            var chartInnerBefore = chartType == 'pie' ? 0 : chart.options.innerRadius,\n\t                chartOuterBefore = chartType == 'pie' ? chart.options.radius : chart.options.outerRadius,\n\t                chartInnerAfter = chartType == 'pie' ? 0 : chart.options.innerRadius,\n\t                chartOuterAfter = chartType == 'pie' ? chart.options.radius * 1.2 : chart.options.outerRadius * 1.2;\n\t\n\t            self.itemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    if (_C2.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, item);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.attr('data-enable') == 'false') {\n\t                        selector.attr('data-enable', true);\n\t                        selector.attr('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.attr('data-enable', false);\n\t                        selector.attr('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    /*----------  Reset opacity after click  ----------*/\n\t\n\t                    self.item.each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    chart.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t                    /*----------  End Reset opacity after click  ----------*/\n\t\n\t                    chart.pie.value(function (d) {\n\t                        if (d[\"data-ref\"] == item[\"data-ref\"]) d.enable = enable;\n\t                        return d.enable ? d.value : 0;\n\t                    });\n\t\n\t                    path = path.data(chart.pie(dataSet));\n\t\n\t                    path.transition().duration(500).attrTween('d', function (d) {\n\t                        var interpolate = d3.interpolate(chart.currentData, d);\n\t                        // Returns an interpolator between the two arbitrary values a and b. \n\t                        // The interpolator implementation is based on the type of the end value b.\n\t                        chart.currentData = interpolate(0);\n\t                        return function (t) {\n\t                            return arc(interpolate(t));\n\t                        };\n\t                    })\n\t                    // Remove stroke when re-draw arcs to avoid duplicate strokes\n\t                    .attr('stroke', 'none');;\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    if (_C2.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    // legendSelector.style('cursor', 'pointer');\n\t                    self.lightenLegendItem(legendSelector);\n\t\n\t                    if (legendSelector.attr('data-enable')) {\n\t                        // For Legend\n\t                        self.item.each(function () {\n\t                            if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable')) {\n\t                                d3.select(this).attr('opacity', '0.3');\n\t                            }\n\t                        });\n\t\n\t                        // For Chart\n\t                        chart.selectAllPath().each(function () {\n\t                            if (d3.select(this).attr('data-ref') !== item['data-ref']) {\n\t                                d3.select(this).attr('opacity', '0.3');\n\t                            }\n\t                        });\n\t\n\t                        var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                        selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter));\n\t                    }\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t                    if (_C2.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    // legendSelector.style('cursor', 'pointer');\n\t                    self.normalizeLegendItem(legendSelector);\n\t\n\t                    // if (legendSelector.attr('data-enable') == 'true') {\n\t                    // For Legend\n\t                    self.item.each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable')) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    // For Chart\n\t                    chart.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore));\n\t                    // }\n\t                }\n\t\n\t            };\n\t\n\t            if (self.options.show) self.item.on(self.itemEventFactory);\n\t        }\n\t\n\t        /**\r\n\t         * Update interaction for barchart\r\n\t         * @param  {[type]} chart       [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: \"updateInteractionForBarChart\",\n\t        value: function updateInteractionForBarChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            var hoverOptions = chart.hover.options,\n\t                hoverEnable = chart.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = chart.click.callback;\n\t\n\t            self.itemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    if (_C2.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, item);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    var enable = true,\n\t                        dataBackup = chart.dataTarget,\n\t                        dataSet = self.data;\n\t                    var totalEnable = d3.sum(dataSet.map(function (d) {\n\t                        return d.enable ? 1 : 0;\n\t                    }));\n\t\n\t                    var enableSet = [];\n\t                    var enableSetOld = [];\n\t                    var data = [];\n\t                    // Add pointer to cursor\n\t                    // selector.style('cursor', 'pointer');\n\t\n\t                    // If current selector is disabled, then turn it on back\n\t                    // Else, set enable to false\n\t                    if (selector.attr('data-enable') == 'false') {\n\t                        selector.attr('data-enable', 'true');\n\t                        selector.style('opacity', '1.0');\n\t                    } else {\n\t                        if (totalEnable < 2) return;\n\t                        selector.attr('data-enable', 'false');\n\t                        selector.style('opacity', '0.1');\n\t                        enable = false;\n\t                    }\n\t\n\t                    //set current data for legend\n\t                    self.data.forEach(function (d, i) {\n\t                        if (d.enable) enableSetOld.push(d.group);\n\t                        if (d.group == item.group) d.enable = enable;\n\t                        if (d.enable) enableSet.push(d.group);\n\t                    });\n\t\n\t                    dataBackup.forEach(function (d) {\n\t                        var negElement = [];\n\t                        var posElement = [];\n\t                        d.forEach(function (s) {\n\t                            enableSet.forEach(function (e, i) {\n\t                                if (e == s.group) {\n\t                                    if (s.y0 < 0) negElement.push({ e: s, s: i });else posElement.push({ e: s, s: i });\n\t                                }\n\t                            });\n\t                        });\n\t                        if (!chart.isGroup) {\n\t                            if (negElement.length > 0) {\n\t                                if (negElement[0].e.y1 < 0) negElement[0].e.y1 = 0;\n\t                                for (var i = 1; i < negElement.length; i++) {\n\t                                    negElement[i].e.y1 = negElement[i - 1].e.y1 + negElement[i - 1].e.y0;\n\t                                };\n\t                            }\n\t                            if (posElement.length > 0) {\n\t                                if (posElement[0].e.y1 - posElement[0].e.y0 != 0) posElement[0].e.y1 = posElement[0].e.y0;\n\t                                for (var i = 1; i < posElement.length; i++) {\n\t                                    posElement[i].e.y1 = posElement[i - 1].e.y1 + posElement[i].e.y0;\n\t                                };\n\t                            }\n\t                        }\n\t                        var element = new Array(negElement.length + posElement.length);\n\t                        for (var i = 0; i < negElement.length; i++) {\n\t                            element[negElement[i].s] = negElement[i].e;\n\t                        };\n\t                        for (var i = 0; i < posElement.length; i++) {\n\t                            element[posElement[i].s] = posElement[i].e;\n\t                        };\n\t                        data.push(element);\n\t                    });\n\t\n\t                    chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    var selector = d3.select(this);\n\t                    // selector.style('cursor', 'pointer');\n\t                    self.lightenLegendItem(selector);\n\t\n\t                    if (selector.attr('data-enable') == 'true') d3.selectAll('.c9-custom-bar>.c9-custom-rect').filter(function (d) {\n\t                        return d['group-ref'] != item['group-ref'];\n\t                    }).attr('opacity', 0.3);\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t                    var selector = d3.select(this);\n\t                    // selector.style('cursor', 'pointer');\n\t                    self.normalizeLegendItem(selector);\n\t\n\t                    d3.selectAll('.c9-custom-bar>.c9-custom-rect').filter(function (d) {\n\t                        return d['group-ref'] != item['group-ref'];\n\t                    }).attr('opacity', 1);\n\t                }\n\t\n\t            };\n\t            if (self.options.show) self.item.on(self.itemEventFactory);\n\t        }\n\t    }, {\n\t        key: \"lightenLegendItem\",\n\t        value: function lightenLegendItem(item) {\n\t            var self = this;\n\t\n\t            item.select('.c9-custom-legend-rect').attr('fill', function (d) {\n\t                return _C2.default.shadeColor(0.5, d.color || d[0].color);\n\t            });\n\t            item.select('.c9-custom-legend-text').style('fill', function (d) {\n\t                return _C2.default.shadeColor(-0.5, self.options.fontColor);\n\t            });\n\t        }\n\t    }, {\n\t        key: \"normalizeLegendItem\",\n\t        value: function normalizeLegendItem(item) {\n\t            var self = this;\n\t\n\t            item.select('.c9-custom-legend-rect').attr('fill', function (d) {\n\t                return d.color || d[0].color;\n\t            });\n\t            item.select('.c9-custom-legend-text').style('fill', function (d) {\n\t                return self.options.fontColor;\n\t            });\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: \"options\",\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"chart\",\n\t        get: function get() {\n\t            return this._chart;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._chart = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"item\",\n\t        get: function get() {\n\t            return this._item;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._item = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"itemEventFactory\",\n\t        get: function get() {\n\t            return this._itemEventFactory;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._itemEventFactory = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"maxWidth\",\n\t        get: function get() {\n\t            return this._maxWidth;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._maxWidth = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"maxHeight\",\n\t        get: function get() {\n\t            return this._maxHeight;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._maxHeight = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Legend;\n\t}();\n\t\n\texports.default = Legend;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Table = function () {\n\t    function Table(options, chart) {\n\t        _classCallCheck(this, Table);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            container: \"body\",\n\t            show: false,\n\t            headings: [\"Name\", \"Value\"],\n\t            style: \"default\", // || \"stripe\"\n\t            serial: true,\n\t            hover: {\n\t                enable: true,\n\t                callback: null\n\t            },\n\t            click: {\n\t                enable: true,\n\t                callback: null\n\t            }\n\t        };\n\t\n\t        self._options = options;\n\t        self._chart = chart;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Table, [{\n\t        key: \"updateConfig\",\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t        }\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            if (self.chart.chartType == \"bar\" || self.chart.chartType == \"line\") {\n\t                //headings\n\t                if (self.options.headings.length < 3 && !data[0].value && data[0][0][\"group-ref\"] != undefined) self.options.headings.push(\"Group\");\n\t\n\t                //data\n\t                self.data = [];\n\t                data.forEach(function (d) {\n\t                    (_C2.default.isArray(d) ? d : d.value).forEach(function (b) {\n\t                        self.data.push(b);\n\t                    });\n\t                });\n\t            } else {\n\t                self.data = data;\n\t            }\n\t\n\t            if (self.options.show) {\n\t                d3.selectAll('.c9-table').remove();\n\t                d3.selectAll('.c9-table-container').remove();\n\t\n\t                var headTbl = d3.select(self.options.container !== 'body' ? '#' + self.options.container : 'body').append(\"table\").attr('class', 'c9-table c9-table-header'),\n\t                    thead = headTbl.append(\"thead\"),\n\t                    bodyTbl = d3.select(self.options.container !== 'body' ? '#' + self.options.container : 'body').append(\"div\").attr('class', 'c9-table-container').append(\"table\").attr('class', function () {\n\t                    return self.getTableStyle();\n\t                }),\n\t                    tbody = bodyTbl.append(\"tbody\");\n\t\n\t                // Append serial no heading\n\t                // Bind each statistic to a line of the table\n\t                // Show serial no.\n\t                var hRows = thead.append(\"tr\");\n\t\n\t                if (self.options.serial) {\n\t                    hRows.append(\"th\").text(\"#\");\n\t                }\n\t\n\t                hRows.selectAll(\"thead\").data(self.options.headings).enter().append(\"th\").text(function (d) {\n\t                    return d;\n\t                });\n\t\n\t                // Bind each statistic to a line of the table\n\t                // Show serial no.\n\t                var bRows = tbody.selectAll(\"tr\").data(self.data).enter().append(\"tr\").attr(\"data-ref\", function (d) {\n\t                    return d[\"data-ref\"];\n\t                });\n\t\n\t                if (self.options.serial) {\n\t                    bRows.append(\"td\").text(function (d, i) {\n\t                        return i + 1;\n\t                    });\n\t                }\n\t\n\t                // Add statistic names to each row\n\t                bRows.append(\"td\").text(function (d) {\n\t                    return d.name;\n\t                });\n\t\n\t                // Add values to each row\n\t                bRows.append(\"td\").text(function (d) {\n\t                    return d.value || d.y0 || d.valueY;\n\t                });\n\t\n\t                // Add group if chart is bar chart\n\t                if (self.chart.chartType == \"bar\" && self.options.headings.length < 3 && !data[0].value && data[0][0][\"group-ref\"] != undefined) bRows.append(\"td\").text(function (d) {\n\t                    return d.group;\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            self.update(self.chart.dataTarget);\n\t        }\n\t    }, {\n\t        key: \"updateInteractionForBarChart\",\n\t        value: function updateInteractionForBarChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            var hoverOptions = chart.hover.options,\n\t                hoverEnable = chart.hover.enable,\n\t                onMouseOverCallback = hoverOptions.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = chart.click.callback;\n\t\n\t            self.itemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    if (_C2.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, item);\n\t                    }\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    if (!item) return;\n\t\n\t                    var selector = d3.select(this);\n\t                    selector.style('cursor', 'pointer');\n\t                    // if (selector.attr('data-enable') == 'true')\n\t                    d3.selectAll('.c9-custom-bar>.c9-custom-rect').filter(function (d) {\n\t                        return d['data-ref'] != item['data-ref'];\n\t                    }).attr('opacity', 0.3);\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t                    if (!item) return;\n\t                    d3.select(this).style('cursor', 'pointer');\n\t                    d3.selectAll('.c9-custom-bar>.c9-custom-rect').filter(function (d) {\n\t                        return d['data-ref'] != item['data-ref'];\n\t                    }).attr('opacity', 1);\n\t                }\n\t\n\t            };\n\t            if (self.options.show) self.selectAllRow().on(self.itemEventFactory);\n\t        }\n\t    }, {\n\t        key: \"updateInteractionForDonutPieChart\",\n\t        value: function updateInteractionForDonutPieChart(chart) {\n\t\n\t            var self = this;\n\t\n\t            var hoverOptions = chart.hover.options,\n\t                hoverEnable = chart.hover.enable,\n\t                onMouseOverCallback = hoverOptions.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = chart.click.callback;\n\t\n\t            var chartType = chart.chartType;\n\t\n\t            var chartInnerBefore = chartType == 'pie' ? 0 : chart.options.innerRadius,\n\t                chartOuterBefore = chartType == 'pie' ? chart.options.radius : chart.options.outerRadius,\n\t                chartInnerAfter = chartType == 'pie' ? 0 : chart.options.innerRadius,\n\t                chartOuterAfter = chartType == 'pie' ? chart.options.radius * 1.2 : chart.options.outerRadius * 1.2;\n\t            self.itemEventFactory = {\n\t\n\t                'click': function click(item) {\n\t                    if (_C2.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, item);\n\t                    }\n\t                },\n\t\n\t                'mouseover': function mouseover(item) {\n\t                    if (!item) return;\n\t\n\t                    if (_C2.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t                    // if (legendSelector.attr('enable') == 'true') {\n\t\n\t                    // For Chart\n\t                    chart.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\n\t                            d3.select(this).attr('opacity', '0.3');\n\t                        }\n\t                    });\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter));\n\t                    // }\n\t                },\n\t\n\t                'mouseout': function mouseout(item) {\n\t                    if (!item) return;\n\t\n\t                    if (_C2.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, item);\n\t                    }\n\t\n\t                    var legendSelector = d3.select(this);\n\t                    // Add pointer to cursor\n\t                    legendSelector.style('cursor', 'pointer');\n\t\n\t                    chart.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\n\t\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore));\n\t                }\n\t\n\t            };\n\t\n\t            if (self.options.show) self.selectAllRow().on(self.itemEventFactory);\n\t        }\n\t    }, {\n\t        key: \"selectAllRow\",\n\t        value: function selectAllRow() {\n\t            return d3.selectAll(\".c9-table tr\");\n\t        }\n\t    }, {\n\t        key: \"getTableStyle\",\n\t        value: function getTableStyle() {\n\t            var self = this;\n\t\n\t            if (self.options.style === 'default') {\n\t                return 'c9-table c9-table-body';\n\t            } else if (self.options.style === 'stripe') {\n\t                return 'c9-table c9-table-body c9-stripe';\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: \"data\",\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._data = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"chart\",\n\t        get: function get() {\n\t            return this._chart;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._chart = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"options\",\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Table;\n\t}();\n\t\n\texports.default = Table;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Title = function () {\n\t    function Title(options, chart) {\n\t        _classCallCheck(this, Title);\n\t\n\t        var self = this;\n\t\n\t        var config = {\n\t            show: true,\n\t            text: \"Sample Chart\",\n\t            position: 'top',\n\t            fontSize: \"14px\"\n\t        };\n\t\n\t        self._options = options;\n\t        self._chart = chart;\n\t\n\t        self.updateConfig(config);\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(Title, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        value: function updateConfig(config) {\n\t            var self = this;\n\t\n\t            self.options = _C2.default.mergeDeep(config, self.options);\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t\n\t            if (self.options.show) {\n\t                var text = self.chart.svg.append(\"g\").attr('class', 'c9-custom-title c9-custom-title-container').append(\"text\").attr(\"class\", \"c9-custom-title c9-custom-title-text\");\n\t\n\t                // Get title self.chart.width: text.node().getComputedTextLength()           \n\t                text.attr(\"x\", (self.chart.width - text.node().getComputedTextLength()) / 2)\n\t                // text.attr(\"x\", (((self.chart.width - 200) / 2)))           \n\t                .attr(\"y\", self.setYLocation(self.chart.height, self.chart.margin)).attr(\"text-anchor\", \"middle\").style(\"font-size\", self.options.fontSize).text(self.options.text);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setYLocation',\n\t        value: function setYLocation(height, margin) {\n\t            var self = this;\n\t\n\t            if (self.options.position === 'top') {\n\t                return margin.top / 2;\n\t            } else if (self.options.position === 'bottom') {\n\t                return height - margin.bottom / 2;\n\t            }\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t    }, {\n\t        key: 'chart',\n\t        get: function get() {\n\t            return this._chart;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._chart = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._options = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Title;\n\t}();\n\t\n\texports.default = Title;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _C = __webpack_require__(4);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(5);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(8);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BarChart = function (_Chart) {\n\t    _inherits(BarChart, _Chart);\n\t\n\t    function BarChart(options) {\n\t        _classCallCheck(this, BarChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        // var config = {\n\t        //     // barWidth: undefined,\n\t        //     isLogaric: false,\n\t        // };\n\t\n\t        self.config = {\n\t            // barWidth: undefined,\n\t            isLogaric: false\n\t        };\n\t\n\t        // self.updateConfig(config);\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t    // get barWidth() {\n\t    //     return this._barWidth;\n\t    // }\n\t\n\t    _createClass(BarChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Init Bar Chart Config\r\n\t         */\n\t        value: function updateConfig(config, callback) {\n\t            _get(BarChart.prototype.__proto__ || Object.getPrototypeOf(BarChart.prototype), 'updateConfig', this).call(this, config);\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(config, self.options);\n\t\n\t            self.chartType = \"bar\";\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            // TESTING\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                var barChartType = da.getDataTypeForBarChart();\n\t                if (barChartType != \"single\") {\n\t                    self._groupNames = da.groups.length > 0 ? da.groups : da.stacks; //define group names use for showing legend\n\t                    self._isGroup = barChartType == \"group\";\n\t                }\n\t\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t                var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\n\t                    y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\n\t\n\t                var minMax = _C14.default.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\n\t\n\t                x.domain(self.dataTarget.map(function (d) {\n\t                    return d[0].name;\n\t                }));\n\t\n\t                y.domain([minMax.min, minMax.max]);\n\t\n\t                /******** Handle for grouped, stacked bar chart ********/\n\t                if (self.groupNames) {\n\t                    self.xGroup = d3.scale.ordinal();\n\t                    self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\n\t                }\n\t\n\t                /**********************************************/\n\t\n\t                // Make flexible width according to barWidth\n\t                // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\n\t                self.x = x;\n\t                self.y = y;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t\n\t            // var da = new DataAdapter(dataOption);\n\t            // self.dataTarget = da.getDataTarget(self.chartType);\n\t            // console.log(self.dataTarget);\n\t            // self.dataSource = da.dataSource;\n\t\n\t            // var barChartType = da.getDataTypeForBarChart();\n\t            // if (barChartType != \"single\") {\n\t            //     self._groupNames    = da.groups.length > 0 ? da.groups : da.stacks;  //define group names use for showing legend\n\t            //     self._isGroup       = barChartType == \"group\";\n\t            // }\n\t\n\t            // var width        = self.width - self.margin.left - self.margin.right,\n\t            //     height       = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            // // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t            // var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\n\t            //     y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\n\t\n\t            // var minMax = Helper.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\n\t\n\t            // x.domain(self.dataTarget.map(function(d) {\n\t            //     return d[0].name;\n\t            // }));\n\t\n\t            // y.domain([minMax.min, minMax.max]);\n\t\n\t            // /******** Handle for grouped, stacked bar chart ********/\n\t            // if (self.groupNames) {\n\t            //     self.xGroup = d3.scale.ordinal();\n\t            //     self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\n\t            // }\n\t\n\t            // /**********************************************/\n\t\n\t            // // Make flexible width according to barWidth\n\t            // // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\n\t            // self.x              = x;\n\t            // self.y              = y;\n\t        }\n\t\n\t        /**\r\n\t         * Update Chart Data Config\r\n\t         * Notes: Merge Deep change order of Config and Option\r\n\t         * ---------------------------------------------------\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateDataConfig',\n\t        value: function updateDataConfig(dataCfg, callback) {\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(self.options, dataCfg);\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                var barChartType = da.getDataTypeForBarChart();\n\t                if (barChartType != \"single\") {\n\t                    self._groupNames = da.groups.length > 0 ? da.groups : da.stacks; //define group names use for showing legend\n\t                    self._isGroup = barChartType == \"group\";\n\t                }\n\t\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\n\t                var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\n\t                    y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\n\t\n\t                var minMax = _C14.default.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\n\t\n\t                x.domain(self.dataTarget.map(function (d) {\n\t                    return d[0].name;\n\t                }));\n\t\n\t                y.domain([minMax.min, minMax.max]);\n\t\n\t                /******** Handle for grouped, stacked bar chart ********/\n\t                if (self.groupNames) {\n\t                    self.xGroup = d3.scale.ordinal();\n\t                    self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\n\t                }\n\t\n\t                /**********************************************/\n\t\n\t                // Make flexible width according to barWidth\n\t                // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\n\t                self.x = x;\n\t                self.y = y;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on data\r\n\t         * @param  {[type]} data [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            self.body.selectAll(\".c9-chart-bar.c9-custom-rect\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data([]).exit().remove();\n\t\n\t            var color = self.colorRange,\n\t                x = self.x,\n\t                y = self.y,\n\t                xGroup = self.xGroup;\n\t\n\t            var bar = self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data(data).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d) {\n\t                return \"translate(\" + x(d[0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-chart-bar.c9-custom-rect\").data(function (d) {\n\t                return d;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-chart-bar c9-custom-rect\").style(\"fill\", function (d, i) {\n\t                return d.color || color(i);\n\t            }).attr(\"x\", function (d) {\n\t                return self.isGroup ? xGroup(d.group) : undefined;\n\t            }).attr(\"y\", function (d) {\n\t                return y(d.y1);\n\t            }).attr(\"width\", function (d) {\n\t                return self.isGroup ? xGroup.rangeBand() : x.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : y(0) - y(Math.abs(d.y0));\n\t            });\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction with Legend\r\n\t         * @param  {[type]} data          [description]\r\n\t         * @param  {[type]} groupNames    [description]\r\n\t         * @param  {[type]} groupNamesOld [description]\r\n\t         * @param  {[type]} newLabel      [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateLegendInteraction',\n\t        value: function updateLegendInteraction(data, groupNames, groupNamesOld, newLabel) {\n\t            var self = this;\n\t            var type = self.groupType;\n\t\n\t            var y = self.y;\n\t            var minMax = _C14.default.getMinMax(data, self.isGroup == false ? \"stack\" : null, self.options.isLogaric);\n\t            y.domain([minMax.min, minMax.max]);\n\t            self.axis.update(null, y, 750);\n\t\n\t            var xGroup = d3.scale.ordinal();\n\t            xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var xGroupOld = d3.scale.ordinal();\n\t            xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\n\t\n\t            var midGroup = undefined;\n\t            //check add new label in the middle\n\t            if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1) midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\n\t\n\t            // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\n\t            self.body.selectAll(\".c9-chart-bar.c9-custom-rect\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data([]).exit().remove();\n\t\n\t            var bar = self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data(data).enter().append(\"g\").attr(\"class\", \"c9-chart-bar c9-custom-bar\").attr(\"transform\", function (d, i) {\n\t                return \"translate(\" + self.x(self.dataTarget[i][0].name) + \",0)\";\n\t            });\n\t\n\t            var bars = bar.selectAll(\".c9-custom-rect\").data(function (d) {\n\t                return d;\n\t            });\n\t\n\t            bars.enter().append(\"rect\").attr(\"class\", \"c9-chart-bar c9-custom-rect\").style(\"fill\", function (d) {\n\t                return d.color;\n\t            }).attr(\"x\", function (d) {\n\t                // use for stack\n\t                if (!self.isGroup) return undefined;\n\t                // use for group\n\t                // group member positioning at the end of groups, so its x is the position of right edge of bar\n\t                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1) return self.x.rangeBand();\n\t                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\n\t            }).attr(\"y\", function (d) {\n\t                return self.isGroup ? y(d.y1) : self.options.isLogaric ? y(y.domain()[1]) : y(0);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\n\t            }).attr(\"height\", function (d) {\n\t                return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : self.isGroup ? y(0) - y(Math.abs(d.y0)) : 0;\n\t            });\n\t\n\t            bars.transition().duration(750).attr(\"x\", function (d) {\n\t                return !self.isGroup ? undefined : xGroup(d.group);\n\t            }).attr(\"width\", function (d) {\n\t                return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand();\n\t            }).attr(\"y\", function (d) {\n\t                return y(d.y1);\n\t            }).attr(\"height\", function (d) {\n\t                return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : y(0) - y(Math.abs(d.y0));\n\t            });\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Retrieve value from upper and lower bounds of each stack\r\n\t         * @param  {String} lower Lower bound of value\r\n\t         * @param  {String} upper Upper bound of value\r\n\t         * @return {String}       Value to return\r\n\t         */\n\t\n\t    }, {\n\t        key: 'retrieveValue',\n\t        value: function retrieveValue(lower, upper) {\n\t            var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\n\t            var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\n\t            return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\n\t        }\n\t\n\t        /**\r\n\t         * Select all bars as type RECT in Bar Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllBar',\n\t        value: function selectAllBar() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('.c9-custom-rect');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                selector = self.selectAllBar(),\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = self.click.callback;\n\t\n\t            var tooltip = new _C12.default(self.options.tooltip);\n\t\n\t            // Update Event Factory\n\t            self.eventFactory = {\n\t                'click': function click(d) {\n\t                    if (_C14.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseover': function mouseover(d) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, d);\n\t                    }\n\t\n\t                    // For table\n\t                    if (self.options.table.show) {\n\t                        var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\n\t                        tr.filter(function (i) {\n\t                            return i['data-ref'] != d['data-ref'];\n\t                        }).selectAll('td').style('opacity', '0.5');\n\t                        var selectedItem = tr.filter(function (i) {\n\t                            return i['data-ref'] == d['data-ref'];\n\t                        });\n\t                        //set its style and scroll to its pos\n\t                        selectedItem.selectAll('td').style('opacity', '1');\n\t                        _C14.default.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\n\t                    }\n\t\n\t                    d3.select(this).style(\"fill\", function (d, i) {\n\t                        return self.getLightenColor(d.color || color(i));\n\t                    });\n\t\n\t                    tooltip.draw(d, self, 'mouseover');\n\t                },\n\t                'mouseout': function mouseout(d) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, d);\n\t                    }\n\t\n\t                    // For Table\n\t                    if (self.options.table.show) d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\n\t\n\t                    d3.select(this).style(\"fill\", function (d, i) {\n\t                        return d.color || color(i);\n\t                    });\n\t\n\t                    tooltip.draw(d, self, 'mouseout');\n\t                }\n\t            };\n\t\n\t            selector.on(self.eventFactory);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            _get(BarChart.prototype.__proto__ || Object.getPrototypeOf(BarChart.prototype), 'on', this).call(this, eventType, callback);\n\t\n\t            var self = this;\n\t            var selector = self.selectAllBar();\n\t\n\t            // Update Event Factory\n\t            var eventFactory = {\n\t                'click.event': function clickEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseover.event': function mouseoverEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseout.event': function mouseoutEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                }\n\t            };\n\t\n\t            var eventName = eventType + '.event';\n\t\n\t            selector.on(eventName, eventFactory[eventName]);\n\t        }\n\t\n\t        /**\r\n\t         * [Main draw function of Bar Chart]\r\n\t         * @return {[type]} [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            _get(BarChart.prototype.__proto__ || Object.getPrototypeOf(BarChart.prototype), 'draw', this).call(this);\n\t\n\t            var self = this;\n\t\n\t            // var axis    = new Axis(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\n\t            // var title   = new Title(self.options.title, self);\n\t            // var legend  = new Legend(self.options.legend, self, self.dataTarget);\n\t            // var table   = new Table(self.options.table, self, self.dataTarget);\n\t\n\t            // self.axis = axis;\n\t            // self.title = title;\n\t            // self.table = table;\n\t            // self.legend = legend;\n\t\n\t            // TESTING\n\t            self.updateConfig(self.config, function (data) {\n\t                var axis = new _C4.default(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\n\t                var title = new _C6.default(self.options.title, self);\n\t                var legend = new _C8.default(self.options.legend, self, self.dataTarget);\n\t                var table = new _C10.default(self.options.table, self, self.dataTarget);\n\t                self.axis = axis;\n\t                self.title = title;\n\t                self.table = table;\n\t                self.legend = legend;\n\t\n\t                // Draw axis\n\t                // self.axis.draw();\n\t\n\t                // Draw title\n\t                self.title.draw();\n\t                // Update Chart based on dataTarget\n\t                self.update(data);\n\t                self.updateInteraction();\n\t\n\t                // Draw legend\n\t                self.legend.draw();\n\t                self.legend.updateInteractionForBarChart(self);\n\t\n\t                // Draw table\n\t                self.table.draw();\n\t                self.table.updateInteractionForBarChart(self);\n\t            });\n\t\n\t            // // Draw axis\n\t            // self.axis.draw();\n\t\n\t            // // Draw title\n\t            // self.title.draw();\n\t\n\t            // // Update Chart based on dataTarget\n\t            // self.update(self.dataTarget);\n\t            // self.updateInteraction();\n\t\n\t            // // Draw legend\n\t            // self.legend.draw();\n\t            // self.legend.updateInteractionForBarChart(self);\n\t\n\t            // // Draw table\n\t            // self.table.draw();\n\t            // self.table.updateInteractionForBarChart(self);\n\t        }\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            _get(BarChart.prototype.__proto__ || Object.getPrototypeOf(BarChart.prototype), 'setOption', this).call(this, key, value);\n\t\n\t            var self = this;\n\t\n\t            _C14.default.set(key, value, self.options);\n\t\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(newData, newDataConfig) {\n\t            var self = this;\n\t\n\t            var newCfg = {};\n\t\n\t            if (!_C14.default.isEmpty(newDataConfig)) {\n\t\n\t                newCfg.data = {\n\t                    plain: newData,\n\t                    keys: newDataConfig\n\t                };\n\t            } else {\n\t\n\t                newCfg.data = {\n\t                    plain: newData\n\t                };\n\t            }\n\t\n\t            // Update Chart\n\t            self.updateDataConfig(newCfg, function (data) {\n\t                self.update(data);\n\t\n\t                // Update Axis\n\t                self.axis.update(self.x, self.y, 100);\n\t\n\t                // Update Legend\n\t                self.legend.update(data);\n\t                self.legend.updateInteractionForBarChart(self);\n\t\n\t                // Update Table\n\t                self.table.update(data);\n\t            });\n\t        }\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'groupType',\n\t        get: function get() {\n\t            return this._groupType;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        // set barWidth(arg) {\n\t        //     if (arg) {\n\t        //         this._barWidth = arg;\n\t        //     }\n\t        // }\n\t\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._groupType = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'xGroup',\n\t        get: function get() {\n\t            return this._xGroup;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._xGroup = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'groupNames',\n\t        get: function get() {\n\t            return this._groupNames;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._groupNames = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isGroup',\n\t        get: function get() {\n\t            return this._isGroup;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._isGroup = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BarChart;\n\t}(_C2.default);\n\t\n\texports.default = BarChart;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _C = __webpack_require__(4);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(5);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(8);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DonutChart = function (_Chart) {\n\t    _inherits(DonutChart, _Chart);\n\t\n\t    function DonutChart(options) {\n\t        _classCallCheck(this, DonutChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (DonutChart.__proto__ || Object.getPrototypeOf(DonutChart)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\n\t        self.config = {\n\t            outerRadius: R,\n\t            innerRadius: R > 80 ? R - 80 : R - 40\n\t        };\n\t\n\t        // self.updateConfig(config);\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(DonutChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig(config, callback) {\n\t            _get(DonutChart.prototype.__proto__ || Object.getPrototypeOf(DonutChart.prototype), 'updateConfig', this).call(this, config);\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(config, self.options);\n\t\n\t            self.chartType = 'donut';\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateDataConfig',\n\t        value: function updateDataConfig(dataCfg, callback) {\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(self.options, dataCfg);\n\t\n\t            self.chartType = 'donut';\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update Donut Chart based on new data\r\n\t         * @param  {[type]} data [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange;\n\t\n\t            self.arc = d3.svg.arc().outerRadius(self.options.outerRadius).innerRadius(self.options.innerRadius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            self.body.selectAll(\".c9-chart-donut.c9-custom-arc-container\").data([]).exit().remove();\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart-donut c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-donut.c9-custom-arc').data(self.pie(data)).enter().append('g').attr('class', 'c9-chart-donut c9-custom-arc');\n\t\n\t            // Append main path contains donut\n\t            // TODO: add a unique class to allow Legend could find selected donut/pie\n\t            arcs.append('path').attr('class', 'c9-chart-donut c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').each(function (d) {\n\t                self.currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-donut c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body\n\t            // .selectAll('g')\n\t            .selectAll('path.c9-chart-donut.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                selector = self.selectAllPath(),\n\t                width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange,\n\t                chartInnerBefore = self.options.innerRadius,\n\t                chartOuterBefore = self.options.outerRadius,\n\t                chartInnerAfter = self.options.innerRadius,\n\t                chartOuterAfter = self.options.outerRadius * 1.2;\n\t\n\t            var hoverOptions = self.hover.options,\n\t                hoverEnable = self.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = self.click.callback;\n\t\n\t            var tooltip = new _C12.default(self.options.tooltip);\n\t\n\t            // Main Event Dispatch for paths in donut chart\n\t            self._eventFactory = {\n\t                'click': function click(d, i) {\n\t                    if (_C14.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, d);\n\t                    }\n\t                },\n\t\n\t                'mouseover': function mouseover(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, d);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    selector.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter));\n\t\n\t                    // For legend\n\t                    if (self.options.legend.show) self.legend.item.each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\n\t                            d3.select(this).attr('opacity', '0.3');\n\t                        }\n\t                    });\n\t\n\t                    // For Table\n\t                    if (self.options.table.show) {\n\t                        var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\n\t                        tr.filter(function (i) {\n\t                            return i['data-ref'] != d.data['data-ref'];\n\t                        }).selectAll('td').style('opacity', '0.5');\n\t                        var selectedItem = tr.filter(function (i) {\n\t                            return i['data-ref'] == d.data['data-ref'];\n\t                        });\n\t                        //set its style and scroll to its pos\n\t                        selectedItem.selectAll('td').style('opacity', '1');\n\t                        _C14.default.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\n\t                    }\n\t\n\t                    // For Chart\n\t                    self.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\n\t                            d3.select(this).attr('opacity', '0.3');\n\t                        }\n\t                    });\n\t\n\t                    // For Tooltip\n\t                    tooltip.draw(d, self, 'mouseover');\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, d);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore));\n\t\n\t                    // For legend\n\t                    if (self.options.legend.show) self.legend.item.each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    // For Table\n\t                    if (self.options.table.show) d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\n\t\n\t                    // For Chart\n\t                    self.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    // For Tooltip\n\t                    tooltip.draw(d, self, 'mouseout');\n\t                }\n\t\n\t            };\n\t\n\t            selector.on(self._eventFactory);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            _get(DonutChart.prototype.__proto__ || Object.getPrototypeOf(DonutChart.prototype), 'on', this).call(this, eventType, callback);\n\t\n\t            var self = this;\n\t            var selector = self.selectAllPath();\n\t\n\t            // Update Event Factory\n\t            var eventFactory = {\n\t                'click.event': function clickEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseover.event': function mouseoverEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseout.event': function mouseoutEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                }\n\t            };\n\t\n\t            var eventName = eventType + '.event';\n\t\n\t            selector.on(eventName, eventFactory[eventName]);\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Donut Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            _get(DonutChart.prototype.__proto__ || Object.getPrototypeOf(DonutChart.prototype), 'draw', this).call(this);\n\t\n\t            var self = this;\n\t\n\t            self.updateConfig(self.config, function (data) {\n\t                var title = new _C6.default(self.options.title, self);\n\t                var legend = new _C8.default(self.options.legend, self, self.dataTarget);\n\t                var table = new _C10.default(self.options.table, self, self.dataTarget);\n\t\n\t                self.title = title;\n\t                self.legend = legend;\n\t                self.table = table;\n\t\n\t                // Draw title\n\t                self.title.draw();\n\t\n\t                // Update interaction of this own chart\n\t                self.update(self.dataTarget);\n\t                self.updateInteraction();\n\t\n\t                self.legend = legend;\n\t                self.table = table;\n\t\n\t                // Draw legend\n\t                self.legend.draw();\n\t                self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t                // Draw table\n\t                self.table.draw();\n\t                self.table.updateInteractionForDonutPieChart(self);\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            _get(DonutChart.prototype.__proto__ || Object.getPrototypeOf(DonutChart.prototype), 'setOption', this).call(this, key, value);\n\t\n\t            var self = this;\n\t\n\t            _C14.default.set(key, value, self.options);\n\t\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(newData, newDataConfig) {\n\t            var self = this;\n\t\n\t            var newCfg = {};\n\t\n\t            if (!_C14.default.isEmpty(newDataConfig)) {\n\t\n\t                newCfg.data = {\n\t                    plain: newData,\n\t                    keys: newDataConfig\n\t                };\n\t            } else {\n\t\n\t                newCfg.data = {\n\t                    plain: newData\n\t                };\n\t            }\n\t\n\t            self.updateDataConfig(newCfg, function (data) {\n\t                // Update Chart\n\t                self.update(data);\n\t\n\t                // Update Legend\n\t                self.legend.update(data);\n\t                self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t                // Update Table\n\t                self.table.update(data);\n\t                self.table.updateInteractionForDonutPieChart(self);\n\t            });\n\t        }\n\t\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._pie = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._arc = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._currentData = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return DonutChart;\n\t}(_C2.default);\n\t\n\texports.default = DonutChart;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _C = __webpack_require__(4);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(5);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(8);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LineChart = function (_Chart) {\n\t    _inherits(LineChart, _Chart);\n\t\n\t    function LineChart(options) {\n\t        _classCallCheck(this, LineChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        self.config = {\n\t            point: {\n\t                show: true,\n\t                fill: \"steelblue\",\n\t                stroke: \"steelblue\",\n\t                'stroke-width': 1,\n\t                opacity: 1.0,\n\t                radius: 5\n\t            },\n\t            area: {\n\t                show: true\n\t            },\n\t            line: {\n\t                style: \"solid\", // \"dash\", \"dot\"\n\t                width: 2\n\t            },\n\t            interpolate: \"linear\" };\n\t\n\t        // self.updateConfig(config);\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(LineChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        /**\r\n\t         * Init Line Chart Config\r\n\t         */\n\t        value: function updateConfig(config, callback) {\n\t            _get(LineChart.prototype.__proto__ || Object.getPrototypeOf(LineChart.prototype), 'updateConfig', this).call(this, config);\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(config, self.options);\n\t\n\t            self.chartType = \"line\";\n\t            self.bisectDate = d3.bisector(function (d) {\n\t                return d.valueX;\n\t            }).left;\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t                self.isTimeDomain = da.timeFormat;\n\t\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                self.x = self.isTimeDomain ? d3.time.scale().range([0, width]) : d3.scale.linear().range([0, width]), self.y = d3.scale.linear().range([height, 0]);\n\t\n\t                self.updateDomain(self.dataTarget);\n\t\n\t                self.lineGen = d3.svg.line().x(function (d) {\n\t                    return self.x(d.valueX);\n\t                }).y(function (d) {\n\t                    return self.y(d.valueY);\n\t                }).interpolate(self.options.interpolate);\n\t\n\t                self.areaGen = d3.svg.area().x(function (d) {\n\t                    return self.x(d.valueX);\n\t                }).y0(function (d) {\n\t                    return self.y(d.valueY);\n\t                }).y1(height).interpolate(self.options.interpolate);\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update data config\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateDataConfig',\n\t        value: function updateDataConfig(dataCfg, callback) {\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(self.options, dataCfg);\n\t\n\t            self.chartType = \"line\";\n\t            self.bisectDate = d3.bisector(function (d) {\n\t                return d.valueX;\n\t            }).left;\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t                self.isTimeDomain = da.timeFormat;\n\t\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                self.x = self.isTimeDomain ? d3.time.scale().range([0, width]) : d3.scale.linear().range([0, width]), self.y = d3.scale.linear().range([height, 0]);\n\t\n\t                self.updateDomain(self.dataTarget);\n\t\n\t                self.lineGen = d3.svg.line().x(function (d) {\n\t                    return self.x(d.valueX);\n\t                }).y(function (d) {\n\t                    return self.y(d.valueY);\n\t                }).interpolate(self.options.interpolate);\n\t\n\t                self.areaGen = d3.svg.area().x(function (d) {\n\t                    return self.x(d.valueX);\n\t                }).y0(function (d) {\n\t                    return self.y(d.valueY);\n\t                }).y1(height).interpolate(self.options.interpolate);\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateOverlay',\n\t        value: function updateOverlay() {\n\t            var self = this;\n\t\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            //** Create a invisible rect for mouse tracking\n\t            var paddingX = (self.x.domain()[1] - self.x.domain()[0]) * 0.01,\n\t                paddingY = (self.y.domain()[1] - self.y.domain()[0]) * 0.05;\n\t\n\t            self.body.selectAll(\".c9-chart-line.c9-rect-overlay\").remove();\n\t\n\t            self.body.append('rect').attr('class', 'c9-chart-line c9-rect-overlay')\n\t            // .attr('width', self.actualWidth)\n\t            // .attr('height', self.actualHeight)\n\t            .attr('width', width - self.x(paddingX)).attr('height', height).attr('x', self.x(paddingX) / 2).style('fill', 'none').style('pointer-events', 'all');\n\t        }\n\t    }, {\n\t        key: 'updateHoverLine',\n\t        value: function updateHoverLine() {\n\t            var self = this;\n\t\n\t            //** Add the line to the group\n\t            self.hoverLine = self.body.append('g').attr('class', 'c9-chart-line c9-comparator-line').append('line').style('stroke', 'grey').style('stroke-opacity', 0);\n\t\n\t            self.hoverCircle = self.hoverLine.append('circle').attr('class', 'c9-chart-line c9-comparator-line').attr('r', self.options.point.radius);\n\t        }\n\t\n\t        /**\r\n\t         * Update LineChart Domain\r\n\t         * @param  {[type]} data [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateDomain',\n\t        value: function updateDomain(data) {\n\t            var self = this;\n\t\n\t            var valueXArray = d3.merge(data.map(function (_data) {\n\t                return _data.value.map(function (d) {\n\t                    return d.valueX;\n\t                });\n\t            }));\n\t\n\t            var valueYArray = d3.merge(data.map(function (_data) {\n\t                return _data.value.map(function (d) {\n\t                    return d.valueY;\n\t                });\n\t            }));\n\t\n\t            self.x.domain(d3.extent(valueXArray));\n\t\n\t            self.y.domain(d3.extent(valueYArray));\n\t\n\t            // Update domain if all values positive / negative\n\t            if (self.y.domain()[0] > 0 && self.y.domain()[1] > 0) {\n\t                self.y.domain([0, self.y.domain()[1]]);\n\t            } else if (self.y.domain()[0] < 0 && self.y.domain()[1] < 0) {\n\t                self.y.domain([self.y.domain()[0], 0]);\n\t            }\n\t\n\t            // Check if its is timeDomain then skip\n\t            if (!self.isTimeDomain) {\n\t                var xDomain = self.x.domain(),\n\t                    paddingX = (self.x.domain()[1] - self.x.domain()[0]) * 0.01;\n\t                var yDomain = self.y.domain(),\n\t                    paddingY = (self.y.domain()[1] - self.y.domain()[0]) * 0.05;\n\t\n\t                self.x.domain([xDomain[0] - paddingX, xDomain[1] + paddingX]);\n\t                self.y.domain([yDomain[0], yDomain[1] + paddingY]);\n\t            }\n\t            // else {\n\t            //     var xDomain = self.x.domain(), paddingX = (self.x.domain()[1] - self.x.domain()[0]);\n\t            //     var yDomain = self.y.domain(), paddingY = (self.y.domain()[1] - self.y.domain()[0]);\n\t            //         console.log(xDomain[0]);\n\t            //     self.x.domain([xDomain[0] - new Date(paddingX), xDomain[1] + new Date(paddingX)]);\n\t            //     self.y.domain([yDomain[0], yDomain[1] + paddingY]);\n\t            // }\n\t        }\n\t\n\t        /**\r\n\t         * Update main path of Line Chart when brushing\r\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            self.updateDomain(data);\n\t\n\t            self.body.selectAll(\".c9-chart-line.c9-area-container\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-chart-line.c9-path-container\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-chart-line.c9-point-container\").data([]).exit().remove();\n\t\n\t            if (self.options.area.show) {\n\t                var areaContainer = self.body.append('g').attr('class', 'c9-chart-line c9-area-container').attr(\"clip-path\", \"url(#clip)\");\n\t\n\t                areaContainer.selectAll(\".c9-chart-line.c9-path-area-custom\")\n\t                // self.body.selectAll(\"dot\")\n\t                .data(data).enter().append('path').filter(function (d) {\n\t                    return d.enable;\n\t                })\n\t                // .attr(\"clip-path\", \"url(#clip)\")\n\t                .attr('class', 'c9-chart-line c9-path-area-custom').attr('d', function (d) {\n\t                    return self.areaGen(d.value);\n\t                }).attr('data-ref', function (d) {\n\t                    return 'c9-' + d['data-ref'];\n\t                }).style('fill', function (d) {\n\t                    return d.color;\n\t                }).style('stroke', 'none').style('opacity', '0.5');\n\t            }\n\t\n\t            var pathContainer = self.body.append('g').attr('class', 'c9-chart-line c9-path-container').attr(\"clip-path\", \"url(#clip)\");\n\t\n\t            pathContainer.selectAll(\".c9-chart-line.c9-path-line-custom\")\n\t            // self.body.selectAll(\"dot\")\n\t            .data(data).enter().append('path').filter(function (d) {\n\t                return d.enable;\n\t            }).attr('class', 'c9-chart-line c9-path-line-custom').attr('d', function (d) {\n\t                return self.lineGen(d.value);\n\t            }).attr('data-ref', function (d) {\n\t                return 'c9-' + d['data-ref'];\n\t            }).style('stroke', function (d) {\n\t                return d.color;\n\t            }).style('stroke-dasharray', function () {\n\t                return self.getLineStyle();\n\t            }).style('stroke-width', self.options.line.width).style('fill', 'none');\n\t\n\t            if (self.options.point.show) {\n\t                var pointContainer = self.body.append('g').attr('class', 'c9-chart-line c9-point-container').attr(\"clip-path\", \"url(#clip)\");\n\t\n\t                data.forEach(function (d) {\n\t                    if (!d.enable) return;\n\t                    pointContainer.selectAll(\".c9-chart-line.c9-point-container\")\n\t                    // self.body.selectAll(\"dot\")\n\t                    .data(d.value).enter().append(\"circle\")\n\t                    // .attr(\"clip-path\", \"url(#clip)\")\n\t                    .attr('class', 'c9-chart-line c9-circle-custom').attr(\"r\", self.options.point.radius).attr(\"cx\", function (_d) {\n\t                        return self.x(_d.valueX);\n\t                    }).attr(\"cy\", function (_d) {\n\t                        return self.y(_d.valueY);\n\t                    }).attr(\"data-ref\", function (data) {\n\t                        return data[\"data-ref\"];\n\t                    }).style(\"fill\", self.options.point.fill).style(\"stroke\", self.options.point.stroke).style(\"stroke-width\", self.options.point['stroke-width']).style(\"opacity\", self.options.point.opacity);\n\t                });\n\t            }\n\t\n\t            /*----------  Set actual size for chart after initialization  ----------*/\n\t            var chartBox = self.body.node().getBBox();\n\t            self.actualWidth = chartBox.width - 4 * self.options.point.radius;\n\t            self.actualHeight = chartBox.height;\n\t            /*----------  End of Set actual size for chart after initialization  ----------*/\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Update sub chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateSubChart',\n\t        value: function updateSubChart(data) {\n\t            var self = this;\n\t\n\t            if (self.options.subchart.show) {\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                /*----------  Sub Chart  ----------*/\n\t                self.subChartWidth = width, self.subChartHeight = self.options.subchart.height;\n\t                if (_C14.default.isEmpty(self.subChartMargin)) {\n\t                    self.subChartMargin = {\n\t                        'top': self.actualHeight + 100,\n\t                        'left': self.margin.left\n\t                    };\n\t                }\n\t\n\t                self.subChartX = self._isTimeDomain ? d3.time.scale().range([0, self.subChartWidth]) : d3.scale.linear().range([0, self.subChartWidth]), self.subChartY = d3.scale.linear().range([self.subChartHeight, 0]);\n\t\n\t                self.subChartX.domain(self.x.domain());\n\t                self.subChartY.domain(self.y.domain());\n\t\n\t                self.subChartXAxis = d3.svg.axis().scale(self.subChartX).orient(\"bottom\");\n\t\n\t                self.brush = d3.svg.brush().x(self.subChartX).on(\"brush\", function () {\n\t                    // Update axis\n\t                    self.x.domain(self.brush.empty() ? self.subChartX.domain() : self.brush.extent());\n\t                    self.axis.update(self.x, self.y, 500);\n\t\n\t                    // Update main path of Line Chart\n\t                    if (self.options.area.show) {\n\t                        self.body.selectAll(\"path.c9-chart-line.c9-path-area-custom\").attr(\"d\", function (d) {\n\t                            return self.areaGen(d.value);\n\t                        });\n\t                    }\n\t                    self.body.selectAll(\"path.c9-chart-line.c9-path-line-custom\").attr(\"d\", function (d) {\n\t                        return self.lineGen(d.value);\n\t                    });\n\t\n\t                    if (self.options.point.show) {\n\t                        self.body.selectAll(\"circle.c9-chart-line.c9-circle-custom\").attr(\"cx\", function (d) {\n\t                            return self.x(d.valueX);\n\t                        }).attr(\"cy\", function (d) {\n\t                            return self.y(d.valueY);\n\t                        });\n\t                    }\n\t                });\n\t\n\t                self.subChartAreaGen = d3.svg.area().x(function (d) {\n\t                    return self.subChartX(d.valueX);\n\t                }).y0(function (d) {\n\t                    return self.subChartY(d.valueY);\n\t                }).y1(self.subChartHeight).interpolate(self.options.interpolate);\n\t\n\t                self.svg.attr('height', self.height + self.subChartHeight);\n\t\n\t                self.svg.selectAll(\".c9-subchart-custom\").remove();\n\t                self.svg.selectAll(\".c9-subchart-custom .c9-subchart-axis\").remove();\n\t\n\t                var subChart = self.svg.append(\"g\").attr(\"class\", \"c9-subchart-custom\").attr(\"transform\", \"translate(\" + self.subChartMargin.left + \",\" + self.subChartMargin.top + \")\");\n\t\n\t                var subChartAreaContainer = subChart.append('g').attr('class', 'c9-subchart-custom c9-subchart-area-container').attr(\"clip-path\", \"url(#clip)\");\n\t\n\t                data.forEach(function (d, i) {\n\t                    if (!d.enable) return;\n\t\n\t                    subChartAreaContainer.append(\"path\")\n\t                    // .attr(\"clip-path\", \"url(#clip)\")\n\t                    .attr(\"class\", \"c9-subchart-area\").attr(\"d\", function () {\n\t                        return self.subChartAreaGen(d.value);\n\t                    }).attr('data-ref', 'c9-' + d['data-ref']).style('fill', d.color).style('stroke', 'none').style('opacity', '0.5');\n\t                });\n\t\n\t                subChart.append(\"g\").attr(\"class\", \"c9-subchart-axis\").attr(\"transform\", \"translate(0,\" + self.subChartHeight + \")\").call(self.subChartXAxis);\n\t\n\t                //append the brush for the selection of subsection  \n\t                subChart.append(\"g\").attr(\"class\", \"c9-subchart-brush\").call(self.brush).selectAll(\"rect\").attr(\"height\", self.subChartHeight);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllCircle',\n\t        value: function selectAllCircle() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('circle.c9-chart-line.c9-circle-custom');\n\t        }\n\t\n\t        /**\r\n\t         * Select all rect as type RECT in Line Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectRectLayer',\n\t        value: function selectRectLayer() {\n\t            var self = this;\n\t\n\t            return d3.selectAll('svg rect.c9-chart-line.c9-rect-overlay');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                selector = self.selectRectLayer(),\n\t                hoverEnable = self.hover.enable,\n\t                hoverOptions = self.hover.options,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onMouseMoveCallback = hoverOptions.onMouseMove.callback,\n\t                onClickCallback = self.click.callback;\n\t\n\t            var tooltip = new _C12.default(self.options.tooltip);\n\t\n\t            // Update Event Factory\n\t            self.eventFactory = {\n\t                // 'click': function(d) {\n\t                //     if (Helper.isFunction(onClickCallback)) {\n\t                //         onClickCallback.call(this, d);\n\t                //     }\n\t                // },\n\t                // 'mouseover': function(d) {\n\t                //     if (!hoverEnable) return;\n\t\n\t                //     if (Helper.isFunction(onMouseOverCallback)) {\n\t                //         onMouseOverCallback.call(this, d);\n\t                //     }\n\t\n\t                //     // tooltip.draw(d, self, 'mouseover');\n\t                // },\n\t                'mouseout': function mouseout(d) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    // if (Helper.isFunction(onMouseOutCallback)) {\n\t                    //     onMouseOutCallback.call(this, d);\n\t                    // }\n\t\n\t                    self.hoverLine.style('stroke-opacity', 0);\n\t\n\t                    // Remove circle style before\n\t                    self.selectAllCircle()[0].forEach(function (circle) {\n\t                        d3.select(circle).style('fill', self.options.point.fill).style('fill-opacity', self.options.point.opacity);\n\t                    });\n\t\n\t                    tooltip.draw(d, self, 'mouseout');\n\t                },\n\t                'mousemove': function mousemove(d) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    var mouse = d3.mouse(this),\n\t                        mouseX = mouse[0],\n\t                        mouseY = mouse[1],\n\t                        curValueX = self.x.invert(mouseX);\n\t\n\t                    var sameTimeArr = [],\n\t                        sameTimeValueArr = [];\n\t\n\t                    self.dataTarget.forEach(function (d, i) {\n\t                        sameTimeArr[i] = d.value;\n\t                        sameTimeArr[i].sort(function (a, b) {\n\t                            return a.valueX - b.valueX;\n\t                        });\n\t                        var idx = self._isTimeDomain ? self.bisectDate(sameTimeArr[i], new Date(curValueX)) : self.bisectDate(sameTimeArr[i], curValueX);\n\t\n\t                        var d0, d1;\n\t\n\t                        d0 = idx === 0 ? sameTimeArr[i][idx] : sameTimeArr[i][idx - 1];\n\t                        d1 = !_C14.default.isEmpty(sameTimeArr[i][idx]) ? sameTimeArr[i][idx] : sameTimeArr[i][idx - 1];\n\t\n\t                        // Check d0, d1 still in boundary or not\n\t                        // To work well with brushing\n\t                        d0 = self.checkBoundary(d0.valueX) === -1 ? d1 : d0;\n\t                        d1 = self.checkBoundary(d1.valueX) === 1 ? d0 : d1;\n\t\n\t                        // work out which date value is closest to the mouse\n\t                        sameTimeValueArr[i] = curValueX - d0.valueX > d1.valueX - curValueX ? d1 : d0;\n\t                    });\n\t\n\t                    if (_C14.default.isFunction(onMouseMoveCallback)) {\n\t                        onMouseMoveCallback.call(this, sameTimeValueArr);\n\t                    }\n\t\n\t                    var x = self.x(!_C14.default.isEmpty(sameTimeValueArr[0].valueX) ? sameTimeValueArr[0].valueX : sameTimeValueArr[1].valueX);\n\t                    var y = self.y(!_C14.default.isEmpty(sameTimeValueArr[0].valueY) ? sameTimeValueArr[0].valueY : sameTimeValueArr[1].valueY);\n\t\n\t                    // console.log(x);\n\t\n\t                    // Remove circle style before\n\t                    self.selectAllCircle()[0].forEach(function (circle) {\n\t                        d3.select(circle).style('fill', self.options.point.fill).style('fill-opacity', self.options.point.opacity);\n\t                    });\n\t\n\t                    // Update circle style after mouse move\n\t                    for (var i = 0; i < sameTimeValueArr.length; i++) {\n\t                        var circle = d3.select(\"circle[data-ref='\" + sameTimeValueArr[i]['data-ref'] + \"']\");\n\t                        circle.style('fill', self.getLightenColor(self.options.point.fill)).style('fill-opacity', 1);\n\t                    }\n\t\n\t                    // focus.select('#focusCircle')\n\t                    //     .attr('cx', x)\n\t                    //     .attr('cy', y);\n\t                    self.hoverLine.attr('x1', x).attr('y1', self.y(self.y.domain()[0])).attr('x2', x).attr('y2', self.y(self.y.domain()[1])).style('stroke-opacity', 1);\n\t                    // self.hoverLine\n\t                    //     .attr('x1', self.x(self.x.domain()[0])).attr('y1', y)\n\t                    //     .attr('x2', self.x(self.x.domain()[1])).attr('y2', y)\n\t                    //     .attr('stroke-opacity', 1);\n\t\n\t                    //** Display Hover line\n\t                    // self.hoverLine\n\t                    //     .attr('x1', self.x(sameTimeValueArr[0].valueX))\n\t                    //     .attr('x2', self.x(sameTimeValueArr[0].valueX))\n\t                    //     .attr('stroke-opacity', 1);\n\t\n\t                    tooltip.draw(sameTimeValueArr, self, 'mousemove');\n\t                }\n\t            };\n\t\n\t            selector.on(self.eventFactory);\n\t        }\n\t    }, {\n\t        key: 'getLineStyle',\n\t        value: function getLineStyle() {\n\t            var self = this;\n\t\n\t            var r = void 0;\n\t\n\t            switch (self.options.line.style) {\n\t                case 'dot':\n\t                    r = \"1, 1\";\n\t                    break;\n\t                case 'solid':\n\t                    r = 'none';\n\t                    break;\n\t                case 'dash':\n\t                    r = \"3, 3\";\n\t                    break;\n\t                default:\n\t                    r = 'none';\n\t                    break;\n\t            }\n\t\n\t            return r;\n\t        }\n\t    }, {\n\t        key: 'checkBoundary',\n\t        value: function checkBoundary(value) {\n\t            var self = this;\n\t\n\t            var bound = self.width - self.margin.left - self.margin.right,\n\t                checkWidth = self.x(value);\n\t\n\t            return checkWidth < 0 ? -1 : checkWidth > bound ? 1 : 0;\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            _get(LineChart.prototype.__proto__ || Object.getPrototypeOf(LineChart.prototype), 'on', this).call(this, eventType, callback);\n\t\n\t            var self = this;\n\t            var selector = self.selectRectLayer();\n\t\n\t            // Update Event Factory\n\t            var eventFactory = {\n\t                'mousemove.event': function mousemoveEvent(d) {\n\t\n\t                    var mouse = d3.mouse(this),\n\t                        mouseX = mouse[0],\n\t                        mouseY = mouse[1],\n\t                        curValueX = self.x.invert(mouseX);\n\t\n\t                    var sameTimeArr = [],\n\t                        sameTimeValueArr = [];\n\t\n\t                    self.dataTarget.forEach(function (d, i) {\n\t                        sameTimeArr[i] = d.value;\n\t                        sameTimeArr[i].sort(function (a, b) {\n\t                            return a.valueX - b.valueX;\n\t                        });\n\t                        var idx = self._isTimeDomain ? self.bisectDate(sameTimeArr[i], new Date(curValueX)) : self.bisectDate(sameTimeArr[i], curValueX);\n\t\n\t                        var d0, d1;\n\t\n\t                        d0 = idx === 0 ? sameTimeArr[i][idx] : sameTimeArr[i][idx - 1];\n\t                        d1 = sameTimeArr[i][idx];\n\t\n\t                        // work out which date value is closest to the mouse\n\t                        sameTimeValueArr[i] = curValueX - d0.valueX > d1.valueX - curValueX ? d1 : d0;\n\t                    });\n\t\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, sameTimeValueArr);\n\t                    }\n\t                }\n\t            };\n\t\n\t            var eventName = eventType + '.event';\n\t\n\t            selector.on(eventName, eventFactory[eventName]);\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Line Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            _get(LineChart.prototype.__proto__ || Object.getPrototypeOf(LineChart.prototype), 'draw', this).call(this);\n\t\n\t            var self = this;\n\t\n\t            self.updateConfig(self.config, function (data) {\n\t                var axis = new _C4.default(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\n\t                var title = new _C6.default(self.options.title, self);\n\t                var legend = new _C8.default(self.options.legend, self);\n\t                var table = new _C10.default(self.options.table, self, data);\n\t\n\t                self.axis = axis;\n\t                self.title = title;\n\t                self.legend = legend;\n\t                self.table = table;\n\t\n\t                // Draw title\n\t                self.title.draw();\n\t\n\t                // Draw axis\n\t                self.axis.draw();\n\t\n\t                self.update(data);\n\t                self.updateSubChart(data);\n\t                self.updateOverlay();\n\t                self.updateHoverLine();\n\t                self.updateInteraction();\n\t\n\t                // Draw legend\n\t                self.legend.draw();\n\t                self.legend.updateInteractionForLineChart(self);\n\t\n\t                // Draw table\n\t                self.table.draw();\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            _get(LineChart.prototype.__proto__ || Object.getPrototypeOf(LineChart.prototype), 'setOption', this).call(this, key, value);\n\t\n\t            var self = this;\n\t\n\t            _C14.default.set(key, value, self.options);\n\t\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(newData, newDataConfig) {\n\t            var self = this;\n\t\n\t            var newCfg = {};\n\t\n\t            if (!_C14.default.isEmpty(newDataConfig)) {\n\t\n\t                newCfg.data = {\n\t                    plain: newData,\n\t                    keys: newDataConfig\n\t                };\n\t            } else {\n\t\n\t                newCfg.data = {\n\t                    plain: newData\n\t                };\n\t            }\n\t\n\t            self.updateDataConfig(newCfg, function (data) {\n\t                // Update Chart\n\t                self.update(data);\n\t                self.updateSubChart(data);\n\t\n\t                // Update Axis\n\t                self.axis.update(self.x, self.y, 100);\n\t\n\t                // Update Legend\n\t                self.legend.update(data);\n\t                self.legend.updateInteractionForLineChart(self);\n\t\n\t                // Update Table\n\t                self.table.update(data);\n\t            });\n\t        }\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'isTimeDomain',\n\t        get: function get() {\n\t            return this._isTimeDomain;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._isTimeDomain = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'bisectDate',\n\t        get: function get() {\n\t            return this._bisectDate;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._bisectDate = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hoverLine',\n\t        get: function get() {\n\t            return this._hoverLine;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._hoverLine = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartX',\n\t        get: function get() {\n\t            return this._subChartX;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartX = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartY',\n\t        get: function get() {\n\t            return this._subChartY;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartY = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartWidth',\n\t        get: function get() {\n\t            return this._subChartWidth;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartWidth = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartHeight',\n\t        get: function get() {\n\t            return this._subChartHeight;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartHeight = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartMargin',\n\t        get: function get() {\n\t            return this._subChartMargin;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartMargin = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartXAxis',\n\t        get: function get() {\n\t            return this._subChartXAxis;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartXAxis = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'brush',\n\t        get: function get() {\n\t            return this._brush;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._brush = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartAreaGen',\n\t        get: function get() {\n\t            return this._subChartAreaGen;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartAreaGen = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'lineGen',\n\t        get: function get() {\n\t            return this._lineGen;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._lineGen = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'areaGen',\n\t        get: function get() {\n\t            return this._areaGen;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._areaGen = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return LineChart;\n\t}(_C2.default);\n\t\n\texports.default = LineChart;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _C = __webpack_require__(4);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(5);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(8);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PieChart = function (_Chart) {\n\t    _inherits(PieChart, _Chart);\n\t\n\t    function PieChart(options) {\n\t        _classCallCheck(this, PieChart);\n\t\n\t        var _this = _possibleConstructorReturn(this, (PieChart.__proto__ || Object.getPrototypeOf(PieChart)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        self.config = {\n\t            radius: Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2\n\t        };\n\t\n\t        // self.updateConfig(config);\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(PieChart, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t        value: function updateConfig(config, callback) {\n\t            _get(PieChart.prototype.__proto__ || Object.getPrototypeOf(PieChart.prototype), 'updateConfig', this).call(this, config);\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(config, self.options);\n\t\n\t            self.chartType = 'pie';\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update Donut Chart Config\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateDataConfig',\n\t        value: function updateDataConfig(dataCfg, callback) {\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(self.options, dataCfg);\n\t\n\t            self.chartType = 'pie';\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Update Donut Chart based on new data\r\n\t         * @param  {[type]} data [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom,\n\t                color = self.colorRange;\n\t\n\t            self.arc = d3.svg.arc().innerRadius(0).outerRadius(self.options.radius);\n\t\n\t            //we can sort data here\n\t            self.pie = d3.layout.pie().sort(null).value(function (d) {\n\t                return d.value;\n\t            });\n\t\n\t            self.body.selectAll(\".c9-chart-pie.c9-custom-arc-container\").data([]).exit().remove();\n\t\n\t            //draw chart\n\t            var arcs = self.body.append('g').attr('class', 'c9-chart-pie c9-custom-arc-container').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')').selectAll('.c9-chart-pie.c9-custom-arc').data(self.pie(data)).enter().append('g').attr('class', 'c9-chart-pie c9-custom-arc');\n\t\n\t            // Append main path contains pie\n\t            arcs.append('path').attr('class', 'c9-chart-pie c9-custom-path').attr('data-ref', function (d) {\n\t                return d.data['data-ref'];\n\t            }).attr('d', self.arc).attr('fill', function (d, i) {\n\t                return color(i);\n\t            }).attr('stroke', '#ffffff').each(function (d) {\n\t                self.currentData = d;\n\t            });\n\t            // Current data used for calculate interpolation \n\t            // between current arc vs disabled arc\n\t\n\t\n\t            // Append middle text display name\n\t            // if (self.options.showText) {\n\t            //     arcs.append('text')\n\t            //             .attr('class', 'c9-chart-pie c9-custom-text')\n\t            //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\n\t            //             .attr('dy', '.35em')\n\t            //             .attr('text-anchor', 'middle')\n\t            //             .text(function(d) { return d.data.name; });\n\t            // }\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type PATH in Donut Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllPath',\n\t        value: function selectAllPath() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('path.c9-chart-pie.c9-custom-path');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                selector = self.selectAllPath(),\n\t                color = self.colorRange,\n\t                chartInnerBefore = 0,\n\t                chartOuterBefore = self.options.radius,\n\t                chartInnerAfter = 0,\n\t                chartOuterAfter = self.options.radius * 1.2,\n\t                hoverOptions = self.hover.options,\n\t                hoverEnable = self.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = self.click.callback;\n\t\n\t            var tooltip = new _C12.default(self.options.tooltip);\n\t\n\t            // Main Event Dispatch for paths in pie chart\n\t            self.eventFactory = {\n\t                'click': function click(d, i) {\n\t                    if (_C14.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, d);\n\t                    }\n\t                },\n\t\n\t                'mouseover': function mouseover(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, d);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    selector.transition().attr('d', d3.svg.arc().innerRadius(chartInnerAfter).outerRadius(chartOuterAfter));\n\t\n\t                    // For legend\n\t                    if (self.options.legend.show) {\n\t                        self.legend.item.each(function () {\n\t                            if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable')) {\n\t                                d3.select(this).attr('opacity', '0.3');\n\t                            }\n\t                        });\n\t                    }\n\t\n\t                    // For Table\n\t                    if (self.options.table.show) {\n\t                        var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\n\t                        tr.filter(function (i) {\n\t                            return i['data-ref'] != d.data['data-ref'];\n\t                        }).selectAll('td').style('opacity', '0.5');\n\t                        var selectedItem = tr.filter(function (i) {\n\t                            return i['data-ref'] == d.data['data-ref'];\n\t                        });\n\t                        //set its style and scroll to its pos\n\t                        selectedItem.selectAll('td').style('opacity', '1');\n\t                        _C14.default.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\n\t                    }\n\t\n\t                    // For Chart\n\t                    self.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\n\t                            d3.select(this).attr('opacity', '0.3');\n\t                        }\n\t                    });\n\t\n\t                    // For Tooltip\n\t                    tooltip.draw(d, self, 'mouseover');\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, d);\n\t                    }\n\t\n\t                    var selector = d3.select(this);\n\t                    selector.transition().duration(500).ease('bounce').attr('d', d3.svg.arc().innerRadius(chartInnerBefore).outerRadius(chartOuterBefore));\n\t\n\t                    // For legend\n\t                    if (self.options.legend.show) self.legend.item.each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable')) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    // For Table\n\t                    if (self.options.table.show) {\n\t                        d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\n\t                    }\n\t\n\t                    // For Chart\n\t                    self.selectAllPath().each(function () {\n\t                        if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\n\t                            d3.select(this).attr('opacity', '1.0');\n\t                        }\n\t                    });\n\t\n\t                    // For Tooltip\n\t                    tooltip.draw(d, self, 'mouseout');\n\t                }\n\t            };\n\t\n\t            selector.on(self.eventFactory);\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            _get(PieChart.prototype.__proto__ || Object.getPrototypeOf(PieChart.prototype), 'on', this).call(this, eventType, callback);\n\t\n\t            var self = this;\n\t            var selector = self.selectAllPath();\n\t\n\t            // Update Event Factory\n\t            var eventFactory = {\n\t                'click.event': function clickEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseover.event': function mouseoverEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseout.event': function mouseoutEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                }\n\t            };\n\t\n\t            var eventName = eventType + '.event';\n\t\n\t            selector.on(eventName, eventFactory[eventName]);\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function of Pie Chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            _get(PieChart.prototype.__proto__ || Object.getPrototypeOf(PieChart.prototype), 'draw', this).call(this);\n\t\n\t            var self = this;\n\t\n\t            self.updateConfig(self.config, function (data) {\n\t                var title = new _C6.default(self.options.title, self);\n\t                var legend = new _C8.default(self.options.legend, self, self.dataTarget);\n\t                var table = new _C10.default(self.options.table, self, self.dataTarget);\n\t\n\t                self.title = title;\n\t                self.legend = legend;\n\t                self.table = table;\n\t\n\t                // Draw title\n\t                self.title.draw();\n\t\n\t                // Update interaction of this own chart\n\t                self.update(data);\n\t                self.updateInteraction();\n\t\n\t                // Draw legend\n\t                self.legend.draw();\n\t                self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t                // Draw table\n\t                self.table.draw();\n\t                self.table.updateInteractionForDonutPieChart(self);\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            _get(PieChart.prototype.__proto__ || Object.getPrototypeOf(PieChart.prototype), 'setOption', this).call(this, key, value);\n\t\n\t            var self = this;\n\t\n\t            _C14.default.set(key, value, self.options);\n\t\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(newData, newDataConfig) {\n\t            var self = this;\n\t\n\t            var newCfg = {};\n\t\n\t            if (!_C14.default.isEmpty(newDataConfig)) {\n\t\n\t                newCfg.data = {\n\t                    plain: newData,\n\t                    keys: newDataConfig\n\t                };\n\t            } else {\n\t\n\t                newCfg.data = {\n\t                    plain: newData\n\t                };\n\t            }\n\t\n\t            self.updateDataConfig(newCfg, function (data) {\n\t                // Update Chart\n\t                self.update(self.dataTarget);\n\t\n\t                // Update Legend\n\t                self.legend.update(self.dataTarget);\n\t                self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\n\t\n\t                // Update Table\n\t                self.table.update(self.dataTarget);\n\t                self.table.updateInteractionForDonutPieChart(self);\n\t            });\n\t        }\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'pie',\n\t        get: function get() {\n\t            return this._pie;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._pie = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'arc',\n\t        get: function get() {\n\t            return this._arc;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._arc = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentData',\n\t        get: function get() {\n\t            return this._currentData;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._currentData = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return PieChart;\n\t}(_C2.default);\n\t\n\texports.default = PieChart;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _C = __webpack_require__(4);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(5);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(8);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tvar _C7 = __webpack_require__(6);\n\t\n\tvar _C8 = _interopRequireDefault(_C7);\n\t\n\tvar _C9 = __webpack_require__(7);\n\t\n\tvar _C10 = _interopRequireDefault(_C9);\n\t\n\tvar _C11 = __webpack_require__(3);\n\t\n\tvar _C12 = _interopRequireDefault(_C11);\n\t\n\tvar _C13 = __webpack_require__(1);\n\t\n\tvar _C14 = _interopRequireDefault(_C13);\n\t\n\tvar _C15 = __webpack_require__(2);\n\t\n\tvar _C16 = _interopRequireDefault(_C15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TimeLine = function (_Chart) {\n\t    _inherits(TimeLine, _Chart);\n\t\n\t    function TimeLine(options) {\n\t        _classCallCheck(this, TimeLine);\n\t\n\t        var _this = _possibleConstructorReturn(this, (TimeLine.__proto__ || Object.getPrototypeOf(TimeLine)).call(this, options));\n\t\n\t        var self = _this;\n\t\n\t        self.config = {\n\t            separatorColor: \"rgb(154, 154, 154)\",\n\t            backgroundColor: null,\n\t            starting: 0,\n\t            ending: 0,\n\t            stack: true,\n\t            itemHeight: 25,\n\t            itemMargin: 15,\n\t            labelMargin: 50,\n\t            striped: null\n\t        };\n\t\n\t        // self.updateConfig(config);\n\t        return _this;\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t\n\t    _createClass(TimeLine, [{\n\t        key: 'updateConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function updateConfig(config, callback) {\n\t            _get(TimeLine.prototype.__proto__ || Object.getPrototypeOf(TimeLine.prototype), 'updateConfig', this).call(this, config);\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(config, self.options);\n\t\n\t            self.chartType = \"timeline\";\n\t            self.maxStack = 1;\n\t            self.stackList = {};\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                var maxStack = 0,\n\t                    minTime = 0,\n\t                    maxTime = 0,\n\t                    width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                // count number of stack and calculate min time, max time from data\n\t                if (self.options.stack || self.options.ending === 0 || self.options.starting === 0) {\n\t\n\t                    self.dataTarget.forEach(function (datum, index) {\n\t\n\t                        if (self.options.stack && Object.keys(self.stackList).indexOf(index) == -1) {\n\t                            self.stackList[index] = maxStack;\n\t                            maxStack++;\n\t                        }\n\t\n\t                        datum.value.forEach(function (time, i) {\n\t                            if (self.options.starting === 0) if (time.start < minTime || minTime === 0) minTime = time.start;\n\t                            if (self.options.ending === 0) {\n\t                                if (time.start > maxTime) maxTime = time.start;\n\t                                if (time.end > maxTime) maxTime = time.end;\n\t                            }\n\t                        });\n\t                    });\n\t\n\t                    if (self.options.ending === 0) {\n\t                        self.options.ending = maxTime;\n\t                    }\n\t                    if (self.options.starting === 0) {\n\t                        self.options.starting = minTime;\n\t                    }\n\t                }\n\t\n\t                self.maxStack = maxStack;\n\t\n\t                self.x = d3.time.scale().domain([self.options.starting, self.options.ending]).range([0, self.width]);\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'updateDataConfig',\n\t        value: function updateDataConfig(dataCfg, callback) {\n\t\n\t            var self = this;\n\t\n\t            self.options = _C14.default.mergeDeep(self.options, dataCfg);\n\t\n\t            self.chartType = \"timeline\";\n\t            self.maxStack = 1;\n\t            self.stackList = {};\n\t\n\t            var dataOption = self.dataOption;\n\t            dataOption.colorRange = self.colorRange;\n\t\n\t            var da = new _C16.default(dataOption, self.chartType, null);\n\t            da.getDataTarget(self.chartType, function (data) {\n\t                self.dataTarget = data;\n\t\n\t                var maxStack = 0,\n\t                    minTime = 0,\n\t                    maxTime = 0,\n\t                    width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                // Count number of stack and calculate min time, max time from data\n\t                // Update from existing data, so starting|ending both existed, no need\n\t                // to check\n\t                if (self.options.stack || self.options.ending === 0 || self.options.starting === 0) {\n\t\n\t                    self.dataTarget.forEach(function (datum, index) {\n\t\n\t                        if (self.options.stack && Object.keys(self.stackList).indexOf(index) == -1) {\n\t                            self.stackList[index] = maxStack;\n\t                            maxStack++;\n\t                        }\n\t\n\t                        datum.value.forEach(function (time, i) {\n\t                            // if(self.options.starting === 0)\n\t                            if (time.start < minTime || minTime === 0) minTime = time.start;\n\t                            // if(self.options.ending === 0) {\n\t                            if (time.start > maxTime) maxTime = time.start;\n\t                            if (time.end > maxTime) maxTime = time.end;\n\t                            // }\n\t                        });\n\t                    });\n\t\n\t                    // if (self.options.ending === 0) {\n\t                    self.options.ending = maxTime;\n\t                    // }\n\t                    // if (self.options.starting === 0) {\n\t                    self.options.starting = minTime;\n\t                    // }\n\t                }\n\t\n\t                self.maxStack = maxStack;\n\t\n\t                self.x = d3.time.scale().domain([self.options.starting, self.options.ending]).range([0, self.width]);\n\t\n\t                if (_C14.default.isFunction(callback)) {\n\t                    callback.call(self, self.dataTarget);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(data) {\n\t            var self = this;\n\t\n\t            var width = self.width - self.margin.left - self.margin.right,\n\t                height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t            var scale = width / (self.options.ending - self.options.starting);\n\t\n\t            var color = self.colorRange;\n\t\n\t            var stackList = self.stackList;\n\t\n\t            self.body.selectAll(\".c9-timeline-border-bar\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-timeline-chart.c9-background-container\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-timeline-chart.c9-stripe-background-container\").data([]).exit().remove();\n\t            self.body.selectAll(\".c9-timeline-chart.c9-rect-container\").data([]).exit().remove();\n\t            self.svg.selectAll(\".c9-timeline-chart.c9-label-container\").remove();\n\t            self.body.selectAll(\".c9-timeline-row-separator\").remove();\n\t\n\t            // Update clip-parth\n\t            self.svg.select('#clip').select('rect').attr('height', (self.options.itemHeight + self.options.itemMargin) * data.length);\n\t\n\t            //draw border\n\t            self.body.append(\"rect\").attr(\"class\", \"c9-timeline-border-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", 0 - self.options.itemMargin / 2).attr(\"height\", (self.options.itemHeight + self.options.itemMargin) * (self.options.stack ? self.maxStack : 1)).attr(\"stroke\", \"rgb(154, 154, 154)\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n\t\n\t            var labelContainer = self.svg.append(\"g\").attr('class', 'c9-timeline-chart c9-label-container');\n\t\n\t            data.forEach(function (datum, index) {\n\t                var barYAxis = (self.options.itemHeight + self.options.itemMargin) * stackList[index];\n\t                if (!self.options.stack) barYAxis = 0;\n\t\n\t                //draw background\n\t                if ((!self.options.stack && index == 0 || self.options.stack) && self.options.backgroundColor) {\n\t                    var bgContainer = self.body.append(\"g\").attr('class', 'c9-timeline-chart c9-background-container');\n\t\n\t                    bgContainer.selectAll(\".c9-background-container\").data(datum.value).enter().append(\"rect\").attr(\"class\", \"c9-timeline-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.options.itemMargin / 2).attr(\"height\", self.options.itemHeight + self.options.itemMargin).attr(\"fill\", _C14.default.isArray(self.options.backgroundColor) ? self.options.backgroundColor[index % self.maxStack] : self.options.backgroundColor);\n\t                }\n\t\n\t                if ((!self.options.stack && index == 0 || self.options.stack) && self.options.striped) {\n\t                    var bgContainer = self.body.append(\"g\").attr('class', 'c9-timeline-chart c9-stripe-background-container');\n\t                    bgContainer.selectAll(\".c9-stripe-background-container\").data(datum.value).enter().insert(\"rect\").attr(\"class\", \"c9-timeline-stripe-background-bar\").attr(\"x\", 0).attr(\"width\", width).attr(\"y\", barYAxis - self.options.itemMargin / 2).attr(\"height\", self.options.itemHeight + self.options.itemMargin).attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\n\t                }\n\t\n\t                //draw item\n\t                var itemContainer = self.body.append(\"g\").attr('class', 'c9-timeline-chart c9-rect-container').attr(\"clip-path\", \"url(#clip)\");\n\t\n\t                itemContainer.selectAll(\".c9-rect-container\").data(datum.value).enter().append(function (d, i) {\n\t                    return document.createElementNS(d3.ns.prefix.svg, d.end != \"Invalid Date\" ? \"rect\" : \"circle\");\n\t                }).attr('class', 'c9-timeline-custom-rect')\n\t                // .attr(\"x\", function(d, i) { return self.getXPos(d,i,scale); })\n\t                .attr(\"x\", function (d, i) {\n\t                    return self.x(d.start);\n\t                }).attr(\"y\", function (d, i) {\n\t                    return self.getStackPosition(d, i, index);\n\t                })\n\t                // .attr(\"width\", function (d, i) {\n\t                //     return (d.end - d.start) * scale;\n\t                // })\n\t                .attr(\"width\", function (d, i) {\n\t                    return self.x(d.end) - self.x(d.start);\n\t                }).attr(\"cy\", function (d, i) {\n\t                    return self.getStackPosition(d, i, index) + self.options.itemHeight / 2;\n\t                }).attr(\"cx\", function (d, i) {\n\t                    return self.getXPos(d, i, scale);\n\t                }).attr(\"r\", self.options.itemHeight / 2).attr(\"height\", self.options.itemHeight).style(\"fill\", color(index));\n\t\n\t                if (self.options.stack && self.options.separatorColor && index < self.maxStack - 1) {\n\t                    var lineYAxis = self.options.itemHeight + self.options.itemMargin / 2 + (self.options.itemHeight + self.options.itemMargin) * stackList[index];\n\t                    self.body.append(\"svg:line\").attr(\"class\", \"c9-timeline-row-separator\").attr(\"x1\", 0).attr(\"x2\", width).attr(\"y1\", lineYAxis).attr(\"y2\", lineYAxis).attr(\"stroke-width\", 3).attr(\"stroke\", _C14.default.isArray(self.options.separatorColor) ? self.options.separatorColor[index % (self.maxStack - 1)] : self.options.separatorColor);\n\t                }\n\t\n\t                //draw the label left side item\n\t                if (self.options.stack && !_C14.default.isEmpty(datum.name) && datum.name != \"\") {\n\t                    var rowsDown = self.margin.top + (self.options.itemHeight + self.options.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.options.itemHeight * 0.75;\n\t\n\t                    labelContainer.append(\"text\").attr(\"class\", \"c9-timeline-label\").attr(\"transform\", \"translate(\" + self.options.labelMargin + \",\" + rowsDown + \")\").text(datum.name);\n\t                }\n\t                //draw icon\n\t                else if (self.options.stack && !_C14.default.isEmpty(datum.icon) && datum.icon != \"\") {\n\t                        labelContainer.append(\"image\").attr(\"class\", \"c9-timeline-label\").attr(\"transform\", \"translate(\" + self.options.labelMargin + \",\" + (self.margin.top + (self.options.itemHeight + self.options.itemMargin) * stackList[index]) + \")\").attr(\"xlink:href\", datum.icon).attr(\"width\", self.options.itemHeight).attr(\"height\", self.options.itemHeight);\n\t                    }\n\t            });\n\t\n\t            self.updateInteraction();\n\t        }\n\t\n\t        /**\r\n\t         * Update sub chart\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateSubChart',\n\t        value: function updateSubChart(data) {\n\t            var self = this;\n\t\n\t            if (self.options.subchart.show) {\n\t                var width = self.width - self.margin.left - self.margin.right,\n\t                    height = self.height - self.margin.top - self.margin.bottom;\n\t\n\t                // Set actual size for chart after initialization\n\t                var chartBox = self.body.node().getBBox();\n\t                // self.actualWidth = chartBox.width - 4 * self.point.radius;\n\t                self.actualHeight = chartBox.height;\n\t\n\t                /*----------  Sub Chart  ----------*/\n\t\n\t                self.subChartWidth = width, self.subChartHeight = self.options.subchart.height, self.subChartMargin = {\n\t                    'top': self.actualHeight + 100,\n\t                    'left': self.margin.left\n\t                };\n\t\n\t                self.subChartX = d3.time.scale().range([0, self.subChartWidth]);\n\t\n\t                self.subChartX.domain([self.options.starting, self.options.ending]);\n\t\n\t                self.subChartXAxis = d3.svg.axis().scale(self.subChartX).orient(\"bottom\");\n\t\n\t                self.brush = d3.svg.brush().x(self.subChartX).on(\"brush\", function () {\n\t                    // Update axis\n\t                    self.x.domain(self.brush.empty() ? self.subChartX.domain() : self.brush.extent());\n\t\n\t                    self.options.starting = self.x.domain()[0];\n\t                    self.options.ending = self.x.domain()[1];\n\t\n\t                    self.axis.update(self.x, self.y, 500);\n\t                    var scale = width / (self.options.ending - self.options.starting);\n\t\n\t                    // Update main path of Line Chart\n\t                    self.body.selectAll(\".c9-timeline-custom-rect\").attr(\"x\", function (d, i) {\n\t                        return self.x(d.start);\n\t                    }).attr(\"width\", function (d, i) {\n\t                        return self.x(d.end) - self.x(d.start);\n\t                    });\n\t                    // .attr(\"x\", function(d, i) { return self.getXPos(d,i, scale); });\n\t                    // .attr(\"y\", function(d, i) { return self.getStackPosition(d,i,stackList, index); })\n\t                    // .attr(\"cx\", function(d, i) { return self.getXPos(d,i, scale); })\n\t                    // .attr(\"cy\", function (d, i) {\n\t                    //     return self.getStackPosition(d, i, stackList, index) + self.options.itemHeight / 2;\n\t                    // });\n\t                });\n\t\n\t                var scale = width / (self.options.ending - self.options.starting);\n\t\n\t                var color = self.colorRange;\n\t\n\t                self.svg.attr('height', self.height + self.subChartHeight);\n\t\n\t                self.svg.selectAll(\".c9-subchart-custom\").remove();\n\t                self.svg.selectAll(\".c9-subchart-custom .c9-subchart-axis\").remove();\n\t\n\t                var subChart = self.svg.append(\"g\").attr(\"class\", \"c9-subchart-custom\")\n\t                // .attr(\"clip-path\", \"url(#clip)\")\n\t                .attr(\"transform\", \"translate(\" + self.subChartMargin.left + \",\" + self.subChartMargin.top + \")\");\n\t\n\t                var itemContainer = subChart.append('g').attr('class', 'c9-subchart-custom c9-subchart-timeline-container');\n\t                // .attr(\"clip-path\", \"url(#clip)\");\n\t\n\t                data.forEach(function (datum, index) {\n\t                    if (!datum.enable) return;\n\t\n\t                    itemContainer.selectAll(\".c9-subchart-timeline-container\").data(datum.value).enter().append(function (d, i) {\n\t                        return document.createElementNS(d3.ns.prefix.svg, d.end != \"Invalid Date\" ? \"rect\" : \"circle\");\n\t                    }).attr('class', 'c9-timeline-custom-rect')\n\t                    // .attr(\"x\", function(d, i) { return self.getXPos(d,i, scale); })\n\t                    .attr(\"x\", function (d, i) {\n\t                        return self.subChartX(d.start);\n\t                    }).attr(\"y\", function (d, i) {\n\t                        return self.getStackPosition(d, i, index, true);\n\t                    })\n\t                    // .attr(\"width\", function (d, i) {\n\t                    //     return (d.end - d.start) * scale;\n\t                    // })\n\t                    .attr(\"width\", function (d, i) {\n\t                        return self.subChartX(d.end) - self.subChartX(d.start);\n\t                    }).attr(\"cy\", function (d, i) {\n\t                        return self.getStackPosition(d, i, index) + self.options.itemHeight / 2;\n\t                    })\n\t                    // .attr(\"cx\", function(d, i) { return self.getXPos(d,i, scale); })\n\t                    .attr(\"cx\", function (d, i) {\n\t                        return self.subChartX(d.start);\n\t                    }).attr(\"r\", self.options.itemHeight / 2).attr(\"height\", self.options.itemHeight / 2).style(\"fill\", color(index));\n\t                });\n\t\n\t                itemContainer.append(\"g\").attr(\"class\", \"c9-subchart-axis\").attr(\"transform\", \"translate(0,\" + self.subChartHeight + \")\").call(self.subChartXAxis);\n\t\n\t                //append the brush for the selection of subsection  \n\t                itemContainer.append(\"g\").attr(\"class\", \"c9-subchart-brush\").call(self.brush).selectAll(\"rect\").attr(\"height\", self.subChartHeight);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Select all path as type RECT in Timeline Chart via its CLASS\r\n\t         */\n\t\n\t    }, {\n\t        key: 'selectAllRect',\n\t        value: function selectAllRect() {\n\t            var self = this;\n\t\n\t            return self.body.selectAll('.c9-timeline-custom-rect');\n\t        }\n\t\n\t        /**\r\n\t         * Update Interaction: Hover\r\n\t         * @return {} \r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this,\n\t                selector = self.selectAllRect(),\n\t                hoverOptions = self.hover.options,\n\t                hoverEnable = self.hover.enable,\n\t                onMouseOverCallback = hoverOptions.onMouseOver.callback,\n\t                onMouseOutCallback = hoverOptions.onMouseOut.callback,\n\t                onClickCallback = self.click.callback;\n\t\n\t            var tooltip = new _C12.default(self.options.tooltip);\n\t\n\t            // Main Event Dispatch for paths in pie chart\n\t            self.eventFactory = {\n\t                'click': function click(d, i) {\n\t                    if (_C14.default.isFunction(onClickCallback)) {\n\t                        onClickCallback.call(this, d);\n\t                    }\n\t                },\n\t\n\t                'mouseover': function mouseover(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOverCallback)) {\n\t                        onMouseOverCallback.call(this, d);\n\t                    }\n\t\n\t                    d3.select(this).style(\"fill\", function (d, i) {\n\t                        return self.getLightenColor(d.color || color(i));\n\t                    });\n\t\n\t                    tooltip.draw(d, self, 'mouseover');\n\t                },\n\t\n\t                'mouseout': function mouseout(d, i) {\n\t                    if (!hoverEnable) return;\n\t\n\t                    if (_C14.default.isFunction(onMouseOutCallback)) {\n\t                        onMouseOutCallback.call(this, d);\n\t                    }\n\t\n\t                    d3.select(this).style(\"fill\", function (d, i) {\n\t                        return d.color || color(i);\n\t                    });\n\t\n\t                    tooltip.draw(d, self, 'mouseout');\n\t                }\n\t            };\n\t\n\t            selector.on(self.eventFactory);\n\t        }\n\t    }, {\n\t        key: 'getXPos',\n\t        value: function getXPos(d, i, scale) {\n\t            var self = this;\n\t            return (d.start - self.options.starting) * scale;\n\t        }\n\t    }, {\n\t        key: 'getStackPosition',\n\t        value: function getStackPosition(d, i, index, isSubchart) {\n\t            var self = this;\n\t\n\t            var stackList = self.stackList;\n\t\n\t            if (self.options.stack) {\n\t                if (isSubchart) {\n\t                    var height = self.height - self.margin.top - self.margin.bottom;\n\t                    var ratio = self.subChartHeight / height;\n\t\n\t                    return (self.options.itemHeight * ratio + self.options.itemMargin) * stackList[index];\n\t                } else {\n\t                    return (self.options.itemHeight + self.options.itemMargin) * stackList[index];\n\t                }\n\t            }\n\t            return 0;\n\t        }\n\t\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /*========================================\r\n\t        =            User's Functions            =\r\n\t        ========================================*/\n\t\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         * @return {[type]}             [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            _get(TimeLine.prototype.__proto__ || Object.getPrototypeOf(TimeLine.prototype), 'on', this).call(this, eventType, callback);\n\t\n\t            var self = this;\n\t            var selector = self.selectAllRect();\n\t\n\t            // Update Event Factory\n\t            var eventFactory = {\n\t                'click.event': function clickEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseover.event': function mouseoverEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                },\n\t                'mouseout.event': function mouseoutEvent(d) {\n\t                    if (_C14.default.isFunction(callback)) {\n\t                        callback.call(this, d);\n\t                    }\n\t                }\n\t            };\n\t\n\t            var eventName = eventType + '.event';\n\t\n\t            selector.on(eventName, eventFactory[eventName]);\n\t        }\n\t\n\t        /**\r\n\t         * Main draw function\r\n\t         */\n\t\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            _get(TimeLine.prototype.__proto__ || Object.getPrototypeOf(TimeLine.prototype), 'draw', this).call(this);\n\t\n\t            var self = this;\n\t\n\t            self.updateConfig(self.config, function (data) {\n\t                var axis = new _C4.default(self.options.axis, self, self.width - self.margin.left - self.margin.right, (self.options.itemHeight + self.options.itemMargin) * self.maxStack);\n\t                var title = new _C6.default(self.options.title, self);\n\t                var legend = new _C8.default(self.options.legend, self, self.colorRange, data);\n\t\n\t                self.axis = axis;\n\t                self.title = title;\n\t                self.legend = legend;\n\t\n\t                // Draw title\n\t                self.title.draw();\n\t\n\t                // Draw axis\n\t                self.axis.draw();\n\t\n\t                self.update(data);\n\t                self.updateSubChart(data);\n\t                self.updateInteraction();\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Set option via stand-alone function\r\n\t         * @param {[type]} key   [description]\r\n\t         * @param {[type]} value [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setOption',\n\t        value: function setOption(key, value) {\n\t            _get(TimeLine.prototype.__proto__ || Object.getPrototypeOf(TimeLine.prototype), 'setOption', this).call(this, key, value);\n\t\n\t            var self = this;\n\t\n\t            _C14.default.set(key, value, self.options);\n\t\n\t            self.updateConfig(self.options);\n\t        }\n\t\n\t        /**\r\n\t         * Update chart based on new data with optional dataConfig\r\n\t         * @param  {[type]} data       [description]\r\n\t         * @param  {[type]} dataConfig [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateData',\n\t        value: function updateData(newData, newDataConfig) {\n\t            var self = this;\n\t\n\t            var newCfg = {};\n\t\n\t            if (!_C14.default.isEmpty(newDataConfig)) {\n\t\n\t                newCfg.data = {\n\t                    plain: newData,\n\t                    keys: newDataConfig\n\t                };\n\t            } else {\n\t\n\t                newCfg.data = {\n\t                    plain: newData\n\t                };\n\t            }\n\t\n\t            // Update chart\n\t            self.updateDataConfig(newCfg, function (data) {\n\t                self.update(data);\n\t                self.updateSubChart(data);\n\t\n\t                // Update Axis\n\t                self.axis.update(self.x, self.y, 100);\n\t            });\n\t        }\n\t        /*=====  End of User's Functions  ======*/\n\t\n\t    }, {\n\t        key: 'maxStack',\n\t        get: function get() {\n\t            return this._maxStack;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._maxStack = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartX',\n\t        get: function get() {\n\t            return this._subChartX;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartX = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartXAxis',\n\t        get: function get() {\n\t            return this._subChartXAxis;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartXAxis = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartWidth',\n\t        get: function get() {\n\t            return this._subChartWidth;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartWidth = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartHeight',\n\t        get: function get() {\n\t            return this._subChartHeight;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartHeight = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'subChartMargin',\n\t        get: function get() {\n\t            return this._subChartMargin;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._subChartMargin = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'brush',\n\t        get: function get() {\n\t            return this._brush;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._brush = arg;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stackList',\n\t        get: function get() {\n\t            return this._stackList;\n\t        },\n\t        set: function set(arg) {\n\t            if (arg) {\n\t                this._stackList = arg;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return TimeLine;\n\t}(_C2.default);\n\t\n\texports.default = TimeLine;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _C = __webpack_require__(1);\n\t\n\tvar _C2 = _interopRequireDefault(_C);\n\t\n\tvar _C3 = __webpack_require__(3);\n\t\n\tvar _C4 = _interopRequireDefault(_C3);\n\t\n\tvar _C5 = __webpack_require__(2);\n\t\n\tvar _C6 = _interopRequireDefault(_C5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Map = function () {\n\t    function Map(options) {\n\t        _classCallCheck(this, Map);\n\t\n\t        var self = this;\n\t        var config = {\n\t            // container\n\t            id: \"body\",\n\t            // Layers:\n\t            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\n\t            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\n\t            layers: null,\n\t            view: {\n\t                lat: 0,\n\t                lon: 0,\n\t                zoom: 2\n\t            },\n\t            data: null,\n\t            tooltip: {\n\t                format: null\n\t            }\n\t        };\n\t\n\t        self._options = _C2.default.mergeDeep(config, options);\n\t        self._dataSource = self._options.data;\n\t        self.initMapConfig();\n\t    }\n\t\n\t    /*==============================\r\n\t    =            Getter            =\r\n\t    ==============================*/\n\t\n\t    // get id() {\n\t    //     return this._options.id;\n\t    // }\n\t\n\t    // get height() {\n\t    //     return this._height;\n\t    // }\n\t\n\t    // get width() {\n\t    //     return this._width;\n\t    // }\n\t\n\t    // get view() {\n\t    //     return this._view;\n\t    // }\n\t\n\t    // get markers() {\n\t    //     return this._markers;\n\t    // }\n\t\n\t    // get layers() {\n\t    //     return this._layers;\n\t    // }\n\t\n\t    _createClass(Map, [{\n\t        key: 'initMapConfig',\n\t\n\t        /*=====  End of Setter  ======*/\n\t\n\t        /*======================================\r\n\t        =            Main Functions            =\r\n\t        ======================================*/\n\t\n\t        value: function initMapConfig() {\n\t            var self = this;\n\t\n\t            //c9Layers contain all layers\n\t            self.c9Layers = [];\n\t            //c9Markers contain all markers\n\t            // self.c9Markers = new ol.source.Vector({});\n\t            //c9Objects contain all polygons, lines\n\t            self.c9Objs = new ol.source.Vector({});\n\t            self.c9GeojsonObjs = [];\n\t            //init all thing relating to user's data\n\t\n\t            //layer\n\t            self.initLayer();\n\t\n\t            //quick markers\n\t            // self.initMarker();\n\t\n\t            //object\n\t            // self.initObj();\n\t\n\t            //init popup\n\t            var popup = document.createElement('div');\n\t            popup.id = 'c9MapPopup';\n\t            popup.className = 'c9-map-tooltip-container c9-custom-tooltip-container c9-tooltip-top';\n\t            document.body.appendChild(popup);\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var self = this;\n\t            var view = self.options.view,\n\t                id = self.options.id;\n\t\n\t            self.c9View = new ol.View({\n\t                center: ol.proj.fromLonLat([view.lon, view.lat]),\n\t                zoom: view.zoom > 2 ? view.zoom : 2,\n\t                minZoom: 2\n\t            });\n\t            self.c9Map = new ol.Map({\n\t                target: id,\n\t                layers: self.c9Layers,\n\t                view: self.c9View,\n\t                interactions: ol.interaction.defaults({ doubleClickZoom: false })\n\t            });\n\t\n\t            /******************** ADD C9 OBJECTS ********************/\n\t            self.c9ObjsLayer = new ol.layer.Vector({\n\t                source: self.c9Objs,\n\t                map: self.c9Map\n\t            });\n\t            /********************************************************/\n\t\n\t            /********************* ADD C9 POPUP *********************/\n\t            self.c9Popup = new ol.Overlay({\n\t                positioning: 'bottom-center',\n\t                element: document.getElementById('c9MapPopup')\n\t            });\n\t\n\t            //add overlay to contain popup\n\t            self.c9Map.addOverlay(self.c9Popup);\n\t            /********************************************************/\n\t\n\t            /********************* HOVER STYLE **********************/\n\t            self.c9CustomHover = new ol.layer.Vector({\n\t                source: new ol.source.Vector(),\n\t                map: self.c9Map,\n\t                style: new ol.style.Style({\n\t                    stroke: new ol.style.Stroke({\n\t                        color: 'rgb(0, 153, 255)',\n\t                        width: 3\n\t                    }),\n\t                    fill: new ol.style.Fill({\n\t                        color: 'rgba(255, 255, 255, 0.2)'\n\t                    })\n\t                })\n\t            });\n\t            /********************************************************/\n\t            //adapt data to obj\n\t            self.addData(self.dataSource);\n\t            //define interaction\n\t            self.updateInteraction();\n\t        }\n\t        /*=====  End of Main Functions  ======*/\n\t\n\t        /**\r\n\t         * Create layer\r\n\t         * @param  {String} type of layer\r\n\t         * @param  {source} source data defined by C9\r\n\t         */\n\t\n\t    }, {\n\t        key: 'createLayer',\n\t        value: function createLayer(options) {\n\t            var self = this;\n\t            if (_C2.default.isEmpty(options)) return;\n\t\n\t            var type = options.type || 'Tile',\n\t                source = options.source || { name: 'OSM' };\n\t            // style = options.style;\n\t\n\t            var layer = new ol.layer[type]();\n\t            layer.setSource(self.setupSource(source));\n\t            // if (!Helper.isEmpty(style)) layer.setStyle(style);\n\t\n\t            //adapt source data to c9obj\n\t            //support maximum 2 source level\n\t            var containFeature = true,\n\t                vs;\n\t            try {\n\t                vs = layer.getSource();\n\t                vs.getFeatures();\n\t            } catch (err) {\n\t                try {\n\t                    vs = layer.getSource().getSource();\n\t                    vs.getFeatures();\n\t                } catch (err) {\n\t                    containFeature = false;\n\t                }\n\t            }\n\t\n\t            if (containFeature) {\n\t                var readFormat = function readFormat(feature) {\n\t                    var result = {};\n\t                    feature.getKeys().forEach(function (k) {\n\t                        result[k] = feature.getProperties()[k];\n\t                    });\n\t                    result['id'] = feature.getId();\n\t                    return result;\n\t                };\n\t                var setStyle = function setStyle() {\n\t                    if (!_C2.default.isEmpty(options.style)) {\n\t                        try {\n\t                            self.setStyle({ obj: layer.getSource(), style: options.style });\n\t                        } catch (err) {\n\t                            try {\n\t                                self.setStyle({ obj: vs, style: options.style });\n\t                            } catch (err) {\n\t                                try {\n\t                                    self.setStyle({ obj: layer, style: options.style });\n\t                                } catch (err) {\n\t                                    throw 'Cannot set style for this source';\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                //register layer loaded event to set data for obj\n\t                vs.once('change', function (e) {\n\t                    if (vs.getState() == 'ready') {\n\t                        var objs = vs.getFeatures();\n\t                        self.c9GeojsonObjs.push(layer.getSource());\n\t                        // self.c9Objs.addFeatures(objs);\n\t\n\t                        objs.forEach(function (o) {\n\t                            o.set('data', readFormat(o));\n\t                            o.set('type', 'c9-geojson');\n\t                        });\n\t\n\t                        //read data from url\n\t                        if (!_C2.default.isEmpty(options.data) && _C2.default.isFunction(options.data.condition) && !_C2.default.isEmpty(options.data.file) && !_C2.default.isEmpty(options.data.file.url) && !_C2.default.isEmpty(options.data.file.type)) {\n\t                            var da = new _C6.default(options.data);\n\t                            da.getDataTarget('', function (data) {\n\t                                var condition = options.data.condition;\n\t                                var process = options.data.process;\n\t\n\t                                if (!_C2.default.isEmpty(process) && _C2.default.isFunction(process)) data = process(data);\n\t\n\t                                objs.forEach(function (o) {\n\t                                    if (_C2.default.isArray(data)) {\n\t                                        for (var i = 0; i < data.length; i++) {\n\t                                            if (condition(o, data[i])) {\n\t                                                for (var j in data[i]) {\n\t                                                    o.get('data')[j] = data[i][j];\n\t                                                }\n\t                                                break;\n\t                                            }\n\t                                        }\n\t                                    } else if (condition(o, data)) {\n\t                                        for (var i in data) {\n\t                                            o.get('data')[i] = data[i];\n\t                                        }\n\t                                    }\n\t                                });\n\t                                setStyle();\n\t                            });\n\t                        } else setStyle();\n\t                    }\n\t                });\n\t            }\n\t\n\t            self.c9Layers.push(layer);\n\t\n\t            if (!_C2.default.isEmpty(self.c9Map)) self.c9Map.addLayer(layer);\n\t\n\t            return layer;\n\t        }\n\t\n\t        /**\r\n\t         * Init Layer base on first user's data\r\n\t         */\n\t\n\t    }, {\n\t        key: 'initLayer',\n\t        value: function initLayer() {\n\t            var self = this;\n\t            var layers = self.options.layers;\n\t\n\t            if (layers instanceof Array) {\n\t                layers.forEach(function (l, i) {\n\t                    self.createLayer({ type: l.type, source: l.source, style: l.style, condition: l.condition, data: l.data });\n\t                });\n\t            } else if (_C2.default.isObject(layers)) {\n\t                self.createLayer({ type: layers.type, source: layers.source, style: layers.style, condition: layers.condition, data: layers.data });\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Setup source for layer\r\n\t         * @param  {Object} source data style defined by c9\r\n\t         * @return {String} return source (ol.source)\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setupSource',\n\t        value: function setupSource(s) {\n\t            var source = undefined;\n\t            switch (s.name) {\n\t                case 'BingMaps':\n\t                    source = new ol.source.BingMaps({\n\t                        key: s.key,\n\t                        imagerySet: s.imagerySet || 'Road'\n\t                    });\n\t                    break;\n\t                case 'Stamen':\n\t                    source = new ol.source.Stamen({\n\t                        layer: s.layer || 'watercolor'\n\t                    });\n\t                    break;\n\t                /********** TileJSON require ol >= v3.8.2 **********/\n\t                case 'TileJSON':\n\t                    source = new ol.source.TileJSON({\n\t                        url: s.url,\n\t                        crossOrigin: s.crossOrigin || 'anonymous'\n\t                    });\n\t                    break;\n\t                case 'TileArcGISRest':\n\t                    source = new ol.source.TileArcGISRest({\n\t                        url: s.url\n\t                    });\n\t                    break;\n\t                case 'Vector':\n\t                    source = new ol.source.Vector({\n\t                        url: s.url,\n\t                        format: s.format === undefined ? null : new ol.format[s.format]({\n\t                            extractStyles: s.extractStyles || false\n\t                        })\n\t                    });\n\t                    break;\n\t                case 'Cluster':\n\t                    source = new ol.source.Cluster({\n\t                        distance: s.distance || 20,\n\t                        source: this.setupSource(s.source)\n\t                    });\n\t                    break;\n\t                case 'ImageVector':\n\t                    source = new ol.source.ImageVector({\n\t                        source: this.setupSource(s.source),\n\t                        // default style\n\t                        style: new ol.style.Style({\n\t                            fill: new ol.style.Fill({\n\t                                color: 'rgba(255, 255, 255, 0.2)'\n\t                            }),\n\t                            stroke: new ol.style.Stroke({\n\t                                color: '#319FD3',\n\t                                width: 1\n\t                            })\n\t                        })\n\t                    });\n\t                    break;\n\t                default:\n\t                    source = new ol.source.OSM();\n\t                    break;\n\t\n\t            }\n\t\n\t            return source;\n\t        }\n\t\n\t        /**\r\n\t         * define some interactions\r\n\t         */\n\t\n\t    }, {\n\t        key: 'updateInteraction',\n\t        value: function updateInteraction() {\n\t            var self = this;\n\t            var LEFT_KEY = 37,\n\t                RIGHT_KEY = 39,\n\t                DEL_KEY = 46,\n\t                DURATION = 1000,\n\t                LOAD_MAP_DELAY = 500;\n\t\n\t            // add default interaction of ol3\n\t            // self.c9Map.addInteraction(self.c9DefaultHoverStyle = new ol.interaction.Select({\n\t            //     condition: ol.events.condition.pointerMove\n\t            // }));\n\t\n\t            //normal: stroke 'rgb(49, 159, 211)' width: 1\n\t            //        fill '#fff'\n\t\n\t\n\t            /******************* SOME HELPER FUNCTION ********************/\n\t            var getCenterLonLat = function getCenterLonLat(f) {\n\t                return ol.proj.transform(getCenter(f), 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            var getCenter = function getCenter(f) {\n\t                return ol.extent.getCenter(f.getGeometry().getExtent());\n\t            };\n\t            var transformCoordinates = function transformCoordinates(c) {\n\t                return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\n\t            };\n\t            /**\r\n\t             * Create pan animation on object\r\n\t             * @param  {ol.Feature}\r\n\t             */\n\t            var panAnimation = function panAnimation(feature) {\n\t                if (self.c9View.getCenter()[0] == getCenter(feature)[0] && self.c9View.getCenter()[1] == getCenter(feature)[1]) return;\n\t\n\t                var pan = ol.animation.pan({\n\t                    duration: DURATION,\n\t                    source: self.c9View.getCenter()\n\t                });\n\t                self.c9Map.beforeRender(pan);\n\t                self.c9View.setCenter(getCenter(feature));\n\t            };\n\t            /**\r\n\t             * Create marker's flash effect\r\n\t             * @param  {ol.Feature}\r\n\t             */\n\t            var createMarkerEffect = function createMarkerEffect(feature) {\n\t                var duration = 3000;\n\t                var start = new Date().getTime();\n\t                var listenerKey;\n\t\n\t                function animate(event) {\n\t                    var vectorContext = event.vectorContext;\n\t                    var frameState = event.frameState;\n\t                    var flashGeom = feature.getGeometry().clone();\n\t                    var elapsed = frameState.time - start;\n\t                    var elapsedRatio = elapsed / duration;\n\t                    // radius will be 5 at start and 30 at end.\n\t                    var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\n\t                    var opacity = ol.easing.easeOut(1 - elapsedRatio);\n\t\n\t                    var style = new ol.style.Style({\n\t                        image: new ol.style.Circle({\n\t                            radius: radius,\n\t                            snapToPixel: false,\n\t                            stroke: new ol.style.Stroke({\n\t                                color: 'rgba(255, 0, 0, ' + opacity + ')',\n\t                                width: 0.25 + opacity\n\t                            })\n\t                        })\n\t                    });\n\t\n\t                    vectorContext.setStyle(style);\n\t                    vectorContext.drawGeometry(flashGeom);\n\t                    if (elapsed > duration) {\n\t                        ol.Observable.unByKey(listenerKey);\n\t                        return;\n\t                    }\n\t                    // tell OL3 to continue postcompose animation\n\t                    self.c9Map.render();\n\t                }\n\t                listenerKey = self.c9Map.on('postcompose', animate);\n\t            };\n\t            /**\r\n\t             * Caculate distance between marker and center view, plus direction compare with center\r\n\t             * @param  {ol.Feature}\r\n\t             * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n\t             */\n\t            var distanceAndDirection = function distanceAndDirection(f) {\n\t                var center = transformCoordinates(self.c9View.getCenter());\n\t                var fCoordinates = getCenterLonLat(f);\n\t                return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), fCoordinates[0] - center[0] <= 0];\n\t            };\n\t            var formatPopup = function formatPopup(data) {\n\t                if (_C2.default.isEmpty(data)) return;\n\t                var capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n\t                    return string.charAt(0).toUpperCase() + string.slice(1);\n\t                };\n\t                var strongSpan = function strongSpan(strong, span) {\n\t                    if (span == '' || _C2.default.isEmpty(span) || _C2.default.isObject(span)) return \"\";return \"<strong>\" + capitalizeFirstLetter(strong) + \":</strong>\" + \"<span> \" + span + \"</span></br>\";\n\t                };\n\t                var result = strongSpan(\"Name\", data.name),\n\t                    v;\n\t                if (!_C2.default.isEmpty(data.coor)) result += strongSpan(\"Lon\", data.coor.lon || data.coor[0]) + strongSpan(\"Lat\", data.coor.lat || data.coor[1]);\n\t\n\t                for (var i in v = data.value) {\n\t                    result += strongSpan(i, v[i]);\n\t                }\n\t                return result;\n\t            };\n\t            /*************************************************************/\n\t\n\t            //register pointer move event to show cursor as pointer if user hover on markers\n\t            self.c9Map.on('pointermove', function (evt) {\n\t                var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n\t                    return feature;\n\t                });\n\t\n\t                // new hover style\n\t                if (f !== self.lastHoveredObj) {\n\t                    if (self.lastHoveredObj) {\n\t                        if (self.lastHoveredObj.get('type') != \"c9-geojson\" && self.lastHoveredObj.get('c9-style')) self.lastHoveredObj.setStyle(self.lastHoveredObj.get('c9-style'));else self.c9CustomHover.getSource().removeFeature(self.lastHoveredObj);\n\t                    }\n\t                    if (f) {\n\t                        var fStyle = f.get('c9-style'),\n\t                            strokeColor = 'rgb(0, 153, 255)',\n\t                            strokeWidth = 3,\n\t                            fillColor = 'rgba(255, 255, 255, 0.2)';\n\t                        if (fStyle) {\n\t                            strokeColor = fStyle.getStroke().getColor() == '#319FD3' ? 'rgb(0, 153, 255)' : self.getLightenColor(fStyle.getStroke().getColor());\n\t                            strokeWidth = fStyle.getStroke().getWidth() + 2;\n\t                            fillColor = fStyle.getFill().getColor() == 'rgba(255, 255, 255, 0.2)' ? 'rgba(255, 255, 255, 0.2)' : self.getLightenColor(fStyle.getFill().getColor());\n\t                        }\n\t                        var newStyle = new ol.style.Style({\n\t                            stroke: new ol.style.Stroke({\n\t                                color: strokeColor,\n\t                                width: strokeWidth\n\t                            }),\n\t                            fill: new ol.style.Fill({\n\t                                color: fillColor\n\t                            })\n\t                        });\n\t                        if (fStyle) f.setStyle(newStyle);else {\n\t                            self.c9CustomHover.setStyle(newStyle);\n\t                            self.c9CustomHover.getSource().addFeature(f);\n\t                        }\n\t                    }\n\t                    self.lastHoveredObj = f;\n\t                }\n\t                if (f) {\n\t                    self.c9Map.getTargetElement().style.cursor = 'pointer';\n\t                    // self.createMarkerEffect(f);\n\t                    /************* LIGHTEN COLOR ***********/\n\t                    // if (f.get('type') == 'c9-line' || f.get('type') == 'c9-polygon' || f.get('type') == 'c9-multipolygon'){\n\t                    //     var fStyle = f.getStyle();\n\t                    //     var defaultStyle = f.get('c9-style');\n\t\n\t                    //     if (fStyle.getStroke().getWidth() == defaultStyle.strokeWidth)\n\t                    //         f.setStyle(new ol.style.Style({\n\t                    //             stroke: new ol.style.Stroke({\n\t                    //                 width: fStyle.getStroke().getWidth() + 2,\n\t                    //                 color: self.getLightenColor(fStyle.getStroke().getColor())\n\t                    //             }),\n\t                    //             fill: new ol.style.Fill({\n\t                    //                 color: self.getLightenColor(fStyle.getFill().getColor())\n\t                    //             })\n\t                    //         }));\n\t                    // }\n\t\n\t                    // if (f !== self.lastHoveredObj) {\n\t                    //     if (self.lastHoveredObj) {\n\t                    //         self.c9CustomHover.getSource().removeFeature(self.lastHoveredObj);\n\t                    //     }\n\t                    //     if (f) {\n\t                    //         self.c9CustomHover.getSource().addFeature(f);\n\t                    //     }\n\t                    //     self.lastHoveredObj = f;\n\t                    // }\n\t\n\t                    /****************************************/\n\t\n\t                    /************** SHOW POPUP *************/\n\t                    self.c9Popup.getElement().style.display = 'none';\n\t\n\t                    // panAnimation(f);\n\t\n\t                    try {\n\t                        if (self.options.tooltip.format) self.options.tooltip.format(f.get('data'));\n\t                    } catch (err) {\n\t                        throw \"Check data format again\";\n\t                        return;\n\t                    }\n\t\n\t                    var content = self.options.tooltip.format ? self.options.tooltip.format(f.get('data')) : formatPopup(f.get('data'));\n\t                    if (_C2.default.isEmpty(content) || content.toString().trim() == \"\") return;\n\t\n\t                    self.c9Popup.getElement().style.display = 'block';\n\t                    self.c9Popup.getElement().innerHTML = content;\n\t                    // self.c9Popup.setPosition(getCenter(f));\n\t                    self.c9Popup.setPosition(evt.coordinate);\n\t                    /****************************************/\n\t                    // var stop = new CustomEvent(\"click\", {detail: {message: \"stop\"}});\n\t                    // self.c9Map.dispatchEvent(stop);\n\t                }\n\t                if (!f) {\n\t                    self.c9Map.getTargetElement().style.cursor = '';\n\t                    self.c9Popup.getElement().style.display = 'none';\n\t\n\t                    //remove last obj style\n\t                    // if (!Helper.isEmpty(self.lastHoveredObj) && (self.lastHoveredObj.get('type') == 'c9-line' || self.lastHoveredObj.get('type') == 'c9-polygon' || self.lastHoveredObj.get('type') == 'c9-multipolygon')) {\n\t                    //     var defaultStyle = self.lastHoveredObj.get('c9-style');\n\t                    //     self.lastHoveredObj.setStyle(defaultStyle);\n\t                    // }   \n\t                }\n\t            });\n\t\n\t            //register map first render's event to show marker's effect\n\t            self.c9Map.once('postrender', function (evt) {\n\t                setTimeout(function () {\n\t                    self.c9Objs.getFeatures().forEach(function (f, i) {\n\t                        if (f.get('type') == 'c9-marker') createMarkerEffect(f);\n\t                    });\n\t                }, LOAD_MAP_DELAY);\n\t            });\n\t\n\t            //register click event to show effect on markers\n\t            self.c9Map.on('click', function (evt) {\n\t\n\t                // if (evt instanceof CustomEvent) return;\n\t                var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n\t                    self.lastSelectedObj = feature;\n\t                    return feature;\n\t                });\n\t                if (f) {\n\t                    // self.createMarkerEffect(f);\n\t                    // self.c9Popup.getElement().style.display = 'none';\n\t\n\t                    panAnimation(f);\n\t\n\t                    // try {\n\t                    //     if (self.options.format) self.options.format(f.get('data'));\n\t                    // }\n\t                    // catch(err) {\n\t                    //     throw \"Check data format again\";\n\t                    //     return;\n\t                    // }\n\t\n\t                    // var content = self.options.format ? self.options.format(f.get('data')) : formatPopup(f.get('data'));\n\t                    // if (Helper.isEmpty(content) || content.toString().trim() == \"\") return;\n\t\n\t                    // self.c9Popup.getElement().style.display = 'block';\n\t                    // self.c9Popup.getElement().innerHTML = content;\n\t                    // self.c9Popup.setPosition(getCenter(f));\n\t\n\t                    // // var stop = new CustomEvent(\"click\", {detail: {message: \"stop\"}});\n\t                    // // self.c9Map.dispatchEvent(stop);\n\t                }\n\t                if (!f) self.c9Popup.getElement().style.display = 'none';\n\t            });\n\t\n\t            //register keydown event to change center view\n\t            document.addEventListener('keydown', function (e) {\n\t                var keydownAnimate = function keydownAnimate(k) {\n\t                    var selectedFeature = undefined;\n\t                    var minDistance = Infinity;\n\t                    self.c9Objs.getFeatures().forEach(function (f, i) {\n\t                        if (f.get('type') == \"c9-marker\") {\n\t                            var checkAnimate = distanceAndDirection(f);\n\t\n\t                            if ((checkAnimate[1] && k == LEFT_KEY || !checkAnimate[1] && k == RIGHT_KEY) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\n\t                                minDistance = checkAnimate[0];\n\t                                selectedFeature = f;\n\t                            }\n\t                        }\n\t                    });\n\t                    if (selectedFeature) {\n\t                        setTimeout(createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\n\t                        panAnimation(selectedFeature);\n\t                    }\n\t                };\n\t                switch (e.keyCode) {\n\t                    case LEFT_KEY:\n\t                        keydownAnimate(LEFT_KEY);\n\t                        break;\n\t                    case RIGHT_KEY:\n\t                        keydownAnimate(RIGHT_KEY);\n\t                        break;\n\t                    case DEL_KEY:\n\t                        // if (!Helper.isEmpty(self.lastSelectedObj) && (!Helper.isEmpty(self.lastSelectedObj.get('type')) || self.lastSelectedObj.get('type') != 'c9-geojson')) self.c9Objs.removeFeature(self.lastSelectedObj);\n\t                        break;\n\t                }\n\t            });\n\t        }\n\t\n\t        // /**\n\t        //  * marker first set up\n\t        //  */\n\t        // initMarker() {\n\t        //     var self = this;\n\t        //     //data\n\t        //     var markers = self.markers;\n\t        //     //add marker layer to layer list (c9Layers)\n\t        //     self.c9Layers.push(new ol.layer.Vector({\n\t        //         source: self.c9Markers\n\t        //     }));\n\t\n\t        //     if (markers.length === 0) return;\n\t\n\t        //     if (markers instanceof Array) {\n\t        //         markers.forEach(function(m, i) {\n\t        //             self.createMarker({lat: m.lat, lon: m.lon, imgSrc: m.img, scale: m.scale});\n\t        //         });\n\t        //     }\n\t        //     else {\n\t        //         self.createMarker({lat: markers.lat, lon: markers.lon, imgSrc: markers.img, scale: markers.scale});\n\t        //     }\n\t        // }\n\t        /**\r\n\t         * obj first set up\r\n\t         */\n\t        // initObj() {\n\t        //     var self = this;\n\t\n\t        //     //add layer Vector to layer list (c9Layers)\n\t        //     self.c9Layers.push(new ol.layer.Vector({\n\t        //         source: self.c9Objs\n\t        //     }));\n\t        // }\n\t\n\t        /**\r\n\t         * create c9 obj\r\n\t         * @data  {Object} coordinate\r\n\t         * @options  {Object} some options: strokeWidth,strokeColor,fillColor,imgSrc,scale\r\n\t         * @return {}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'createObject',\n\t        value: function createObject(options) {\n\t            var self = this;\n\t            if (_C2.default.isEmpty(options) || _C2.default.isEmpty(options.data)) return;\n\t            var data = options.data,\n\t                style = options.style;\n\t            /**\r\n\t             * Create marker\r\n\t             * @param  {Number} latitude of marker\r\n\t             * @param  {Number} longitude of marker\r\n\t             * @param  {String} image source (support for both local and net)\r\n\t             * @param  {Number} scale image if its size is too large - default = 1\r\n\t             */\n\t            var createMarker = function createMarker(data, coor, options) {\n\t\n\t                if (!_C2.default.isArray(coor) && coor.length != 2) return;\n\t\n\t                var DEFAULT_SRC = 'http://s21.postimg.org/blklb8scn/marker_icon.png';\n\t                var DEFAULT_SCALE = 1;\n\t\n\t                var lat = coor[1],\n\t                    lon = coor[0],\n\t                    imgSrc = options ? options.imgSrc || DEFAULT_SRC : DEFAULT_SRC,\n\t                    scale = options ? options.scale || DEFAULT_SCALE : DEFAULT_SCALE;\n\t\n\t                var marker = new ol.Feature({\n\t                    'data-ref': '',\n\t                    type: 'c9-marker',\n\t                    data: data,\n\t                    // 'c9-id': ,\n\t                    geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\n\t                });\n\t\n\t                /**\r\n\t                 * Create marker style\r\n\t                 * @param  {String} image source\r\n\t                 * @param  {Number} scale\r\n\t                 * @return {ol.style.Style} return marker style\r\n\t                 */\n\t                var createMarkerStyle = function createMarkerStyle(imgSrc, scale) {\n\t                    return new ol.style.Style({\n\t                        image: new ol.style.Icon({\n\t                            anchor: [0.5, 1], //middle-width and bottom-height of image\n\t                            src: imgSrc,\n\t                            scale: scale\n\t                        })\n\t                    });\n\t                };\n\t                // marker.set('c9-style', markerStyle);\n\t                marker.setStyle(createMarkerStyle(imgSrc, scale));\n\t\n\t                //add this marker to marker list (c9Objs)\n\t                self.c9Objs.addFeature(marker);\n\t                return marker;\n\t            };\n\t\n\t            var coorAndType = self.normalizeCoordinate(data.coor);\n\t            if (coorAndType.coor == null) return;\n\t\n\t            //marker\n\t            if (coorAndType.type == \"marker\") {\n\t                return createMarker(data, coorAndType.coor, style);\n\t            }\n\t\n\t            // if (data == self.c9Markers) {\n\t            //     data = [];\n\t            //     self.c9Markers.getFeatures().forEach(function (d) {\n\t            //         data.push(ol.proj.transform(d.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326'));\n\t            //     })\n\t            // }\n\t\n\t            var strokeWidth = style ? style.strokeWidth || 1 : 1,\n\t                strokeColor = style ? style.strokeColor || \"#319FD3\" : \"#319FD3\",\n\t                fillColor = style ? style.fillColor || \"rgba(255, 255, 255, 0.2)\" : \"rgba(255, 255, 255, 0.2)\";\n\t\n\t            var obj = new ol.Feature({\n\t                'data-ref': '',\n\t                type: \"c9-\" + coorAndType.type,\n\t                data: data,\n\t                geometry: coorAndType.type == \"polygon\" ? new ol.geom.Polygon(coorAndType.coor) : coorAndType.type == \"line\" ? new ol.geom.LineString(coorAndType.coor) : new ol.geom.MultiPolygon(coorAndType.coor)\n\t            });\n\t\n\t            obj.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n\t\n\t            /**\r\n\t             * Create obj style\r\n\t             * @param  {Number} stroke width\r\n\t             * @param  {String} stroke color\r\n\t             * @param  {String} fill color\r\n\t             * @return {ol.style.Style} return obj style\r\n\t             */\n\t            var createObjStyle = function createObjStyle(strokeWidth, strokeColor, fillColor) {\n\t                return new ol.style.Style({\n\t                    stroke: new ol.style.Stroke({\n\t                        width: strokeWidth,\n\t                        color: strokeColor\n\t                    }),\n\t                    fill: new ol.style.Fill({\n\t                        color: fillColor\n\t                    })\n\t                });\n\t            };\n\t\n\t            var objStyle = createObjStyle(strokeWidth, strokeColor, fillColor);\n\t            obj.set('c9-style', objStyle);\n\t            obj.setStyle(objStyle);\n\t\n\t            //add this marker to marker list (c9Objs)\n\t            self.c9Objs.addFeature(obj);\n\t            return obj;\n\t        }\n\t\n\t        /**\r\n\t         * normalize coordinate\r\n\t         * currently only support marker, linestring, polygon and multipolygon\r\n\t         * @coor  {Array} coordinate of object\r\n\t         * @return {Array} coordinate was normalized\r\n\t         */\n\t\n\t    }, {\n\t        key: 'normalizeCoordinate',\n\t        value: function normalizeCoordinate(coor) {\n\t            var normCoor = [],\n\t                type,\n\t                error = { coor: null, type: null };\n\t            if (_C2.default.isObject(coor) && coor.length == undefined || _C2.default.isArray(coor) && coor.length == 2 && !isNaN(coor[0]) && !isNaN(coor[1])) {\n\t                // marker - [] - {}\n\t                type = \"marker\";\n\t                if (coor.length == undefined) {\n\t                    if (_C2.default.isEmpty(coor.lat) || _C2.default.isEmpty(coor.lon)) return error;\n\t                    normCoor = [coor.lon, coor.lat];\n\t                } else {\n\t                    normCoor = coor;\n\t                }\n\t            } else if (_C2.default.isArray(coor)) {\n\t                // linestring - [{},{}] - [[],[]] - [{},[]] - [[],{}]\n\t                var isArrayOrObject = function isArrayOrObject(obj) {\n\t                    var result = {};\n\t                    if (_C2.default.isObject(obj) && obj.length == undefined) {\n\t                        result['check'] = !_C2.default.isEmpty(obj.lat) && !_C2.default.isEmpty(obj.lon);\n\t                        if (result['check']) result['coor'] = [obj.lon, obj.lat];\n\t                    } else {\n\t                        result['check'] = _C2.default.isArray(obj) && obj.length == 2 && !isNaN(obj[0]) && !isNaN(obj[1]);\n\t                        if (result['check']) result['coor'] = obj;\n\t                    }\n\t                    return result;\n\t                };\n\t\n\t                // check data inside to eliminate case: multipolygon contains 2 polygons\n\t                if (coor.length == 2 && isArrayOrObject(coor[0]).check && isArrayOrObject(coor[1]).check) {\n\t                    type = \"line\";\n\t                    normCoor.push(isArrayOrObject(coor[0]).coor);\n\t                    normCoor.push(isArrayOrObject(coor[1]).coor);\n\t                }\n\t                //polygon || multipolygon\n\t                else if (coor.length >= 1) {\n\t                        // multipolygon [[[[] || {}, ...]], [[[] || {}, ...]], ...]\n\t                        if (!_C2.default.isEmpty(coor[0][0]) && !_C2.default.isEmpty(coor[0][0][0])) {\n\t                            type = \"multipolygon\";\n\t                            coor.forEach(function (pc, i) {\n\t                                if (_C2.default.isArray(pc) && pc.length == 1) {\n\t                                    normCoor.push([[]]);\n\t                                    pc[0].forEach(function (c) {\n\t                                        // data - [] || {}\n\t                                        var obj = isArrayOrObject(c);\n\t                                        if (obj.check) normCoor[i][0].push(obj.coor);\n\t                                    });\n\t                                    // cannot create polygon with the number of points is less than 2\n\t                                    if (normCoor[i][0].length <= 2) return error;\n\t                                } else return error; // because data format is not true\n\t                            });\n\t                        }\n\t                        // polygon [[[] || {}, ...]]\n\t                        else {\n\t                                type = \"polygon\";\n\t                                normCoor.push([]);\n\t                                coor[0].forEach(function (c) {\n\t                                    // data - [] || {}\n\t                                    var obj = isArrayOrObject(c);\n\t                                    if (obj.check) normCoor[0].push(obj.coor);\n\t                                });\n\t                                if (normCoor[0].length <= 2) return error;\n\t                            }\n\t                    } else return error;\n\t            }\n\t            return {\n\t                coor: normCoor,\n\t                type: type\n\t            };\n\t        }\n\t\n\t        /**\r\n\t         * create obj base on user data\r\n\t         * @data  {Object} data structure: {coor: [], name: , value: }\r\n\t         * return list of created object\r\n\t         */\n\t\n\t    }, {\n\t        key: 'addData',\n\t        value: function addData(data) {\n\t            if (_C2.default.isEmpty(data) || _C2.default.isEmpty(data.plain) && _C2.default.isEmpty(data.file)) return;\n\t            var self = this;\n\t\n\t            var da = new _C6.default(data);\n\t            da.getDataTarget('map', function (data) {\n\t                self.data = data;\n\t                if (!_C2.default.isEmpty(self.c9Map)) {\n\t                    if (_C2.default.isArray(self.data)) self.data.forEach(function (d, i) {\n\t                        self.createObject({ data: d });\n\t                    });else self.createObject({ data: self.data });\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getObjects',\n\t        value: function getObjects() {\n\t            var c9GeojsonObjs = [];\n\t            this.c9GeojsonObjs.forEach(function (o) {\n\t                try {\n\t                    c9GeojsonObjs = c9GeojsonObjs.concat(o.getSource().getFeatures());\n\t                } catch (err) {\n\t                    try {\n\t                        c9GeojsonObjs = c9GeojsonObjs.concat(o.getFeatures());\n\t                    } catch (err) {}\n\t                }\n\t            });\n\t            return this.c9Objs.getFeatures().concat(c9GeojsonObjs);\n\t        }\n\t    }, {\n\t        key: 'getMap',\n\t        value: function getMap() {\n\t            return this.c9Map;\n\t        }\n\t\n\t        /**\r\n\t         * Custom Event Listener\r\n\t         * @param  {[type]}   eventType [description]\r\n\t         * @param  {Function} callback  [description]\r\n\t         */\n\t\n\t    }, {\n\t        key: 'on',\n\t        value: function on(eventType, callback) {\n\t            var self = this;\n\t            // Update Event Factory\n\t            var eventFactoryViewport = {\n\t                'click': function click(evt) {\n\t                    var f = self.c9Map.forEachFeatureAtPixel(self.c9Map.getEventPixel(evt), function (feature, layer) {\n\t                        return feature;\n\t                    });\n\t                    if (_C2.default.isFunction(callback) && f) {\n\t                        callback.call(this, f);\n\t                    }\n\t                },\n\t                'pointermove': function pointermove(evt) {\n\t                    var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\n\t                        return feature;\n\t                    });\n\t                    if (_C2.default.isFunction(callback) && f) {\n\t                        callback.call(this, f);\n\t                    }\n\t                },\n\t                'postrender': function postrender(evt) {\n\t                    if (_C2.default.isFunction(callback)) {\n\t                        callback.call(this, evt);\n\t                    }\n\t                }\n\t            };\n\t\n\t            if (eventType == \"click\") self.c9Map.getViewport().addEventListener(eventType, eventFactoryViewport[eventType]);else if (eventType == \"pointermove\") self.c9Map.on(eventType, eventFactoryViewport[eventType]);else if (eventType == \"postrender\") self.c9Map.once(eventType, eventFactoryViewport[eventType]);\n\t        }\n\t    }, {\n\t        key: 'getLightenColor',\n\t        value: function getLightenColor(color) {\n\t            if (color.includes('rgba')) {\n\t                var alpha = color.split(',')[color.split(',').length - 1].replace(')', '');\n\t                var currentColor = color.replace(',' + alpha, '').replace('a', '');\n\t                var newColor = _C2.default.shadeColor(-0.2, currentColor);\n\t                return 'rgba(' + newColor.split('(')[1].split(')')[0] + ',' + alpha.trim() + ')';\n\t            } else return _C2.default.shadeColor(-0.2, color);\n\t        }\n\t\n\t        /**\r\n\t         * set style: consist of layer, source and obj\r\n\t         * @obj   {ol.layer || ol.source || ol.Feature}\r\n\t         * @style {function || ol.style} style function || ol.style\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setStyle',\n\t        value: function setStyle(options) {\n\t            if (_C2.default.isEmpty(options) || _C2.default.isEmpty(options.obj) || _C2.default.isEmpty(options.style)) return;\n\t            //create style for obj\n\t            if (_C2.default.isFunction(options.style) || options.style instanceof ol.style.Style) {\n\t                options.obj.setStyle(options.style);\n\t            } else {\n\t                var DEFAULT_SRC = 'http://s21.postimg.org/blklb8scn/marker_icon.png';\n\t                var DEFAULT_SCALE = 1;\n\t\n\t                var strokeColor = options.style.strokeColor ? options.style.strokeColor : '#319FD3',\n\t                    strokeWidth = options.style.strokeWidth ? options.style.strokeColor : 1,\n\t                    fillColor = options.style.fillColor ? options.style.fillColor : 'rgba(255, 255, 255, 0.2)',\n\t                    imgSrc = options.style.type == 'marker' || options.style.type == 'c9-marker' ? options.style.imgSrc || DEFAULT_SRC : null,\n\t                    scale = options.style.type == 'marker' || options.style.type == 'c9-marker' ? options.style.scale || DEFAULT_SCALE : null;\n\t\n\t                var style;\n\t\n\t                if (imgSrc != null) options.obj.setStyle(style = new ol.style.Style({\n\t                    image: new ol.style.Icon({\n\t                        anchor: [0.5, 1], //middle-width and bottom-height of image\n\t                        src: imgSrc,\n\t                        scale: scale\n\t                    })\n\t                }));else options.obj.setStyle(style = new ol.style.Style({\n\t                    stroke: new ol.style.Stroke({\n\t                        color: strokeColor,\n\t                        width: strokeWidth\n\t                    }),\n\t                    fill: new ol.style.Fill({\n\t                        color: fillColor\n\t                    })\n\t                }));\n\t\n\t                options.obj.set('c9-style', style);\n\t            }\n\t        }\n\t\n\t        // TODO - set hover style\n\t\n\t        /**\r\n\t         * create a layer from geojson file\r\n\t         * @url  {String} url of geojson file\r\n\t         */\n\t\n\t    }, {\n\t        key: 'createLayerFromGeojson',\n\t        value: function createLayerFromGeojson(options) {\n\t            var self = this;\n\t            if (_C2.default.isEmpty(options) || _C2.default.isEmpty(options.url)) return;\n\t\n\t            self.createLayer({\n\t                type: \"Image\",\n\t                source: {\n\t                    name: \"ImageVector\",\n\t                    source: {\n\t                        name: 'Vector',\n\t                        url: options.url,\n\t                        format: 'GeoJSON'\n\t                    }\n\t                },\n\t                data: options.data,\n\t                style: options.style\n\t            });\n\t            //create style\n\t            // self.setStyle({obj: layer.getSource(), style: options.style});\n\t\n\t            // if (!Helper.isEmpty(options.style)) {\n\t            //     if (Helper.isFunction(style) || style instanceof ol.style.Style) {\n\t            //         layer.getSource().setStyle(options.style);\n\t            //     }\n\t            //     else {\n\t            //         var strokeColor = options.style.strokeColor ? options.style.strokeColor : '#319FD3',\n\t            //             strokeWidth = options.style.strokeWidth ? options.style.strokeColor : 1,\n\t            //             fillColor   = options.style.fillColor   ? options.style.fillColor   : 'rgba(255, 255, 255, 0.2)';\n\t\n\t            //         layer.getSource().setStyle(new ol.style.Style({\n\t            //             stroke: new ol.style.Stroke({\n\t            //                 color: strokeColor,\n\t            //                 width: strokeWidth\n\t            //             }),\n\t            //             fill: new ol.style.Fill({\n\t            //                 color: fillColor\n\t            //             })\n\t            //         }))\n\t            //     }\n\t            // }\n\t        }\n\t    }, {\n\t        key: 'dataSource',\n\t        get: function get() {\n\t            return this._dataSource;\n\t        },\n\t\n\t        /*=====  End of Getter  ======*/\n\t\n\t        /*==============================\r\n\t        =            Setter            =\r\n\t        ==============================*/\n\t\n\t        // set id(newId) {\n\t        //     if (newId) {\n\t        //         this._options.id = newId;\n\t        //     }\n\t        // }\n\t\n\t        // set height(newHeight) {\n\t        //     if (newHeight) {\n\t        //         this._height = newHeight;    \n\t        //     }\n\t        // }\n\t\n\t        // set width(newWidth) {\n\t        //     if (newWidth) {\n\t        //         this._width = newWidth;\n\t        //     }\n\t        // }\n\t\n\t        // set view(newView) {\n\t        //     if (newView) {\n\t        //         this._view = newView;\n\t        //     }\n\t        // }\n\t\n\t        // set markers(newMarkers) {\n\t        //     if (newMarkers) {\n\t        //         this._markers = newMarkers;\n\t        //     }\n\t        // }\n\t\n\t        // set layers(newLayers) {\n\t        //     if (newLayers) {\n\t        //         this._layers = newLayers;\n\t        //     }\n\t        // }\n\t\n\t        set: function set(newData) {\n\t            if (newData) {\n\t                this._dataSource = newData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'data',\n\t        get: function get() {\n\t            return this._data;\n\t        },\n\t        set: function set(newData) {\n\t            if (newData) {\n\t                this._data = newData;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'options',\n\t        get: function get() {\n\t            return this._options;\n\t        }\n\t    }]);\n\t\n\t    return Map;\n\t}();\n\t\n\texports.default = Map;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** C9.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c8874f7803bbf5165cd4\n **/","// Chart Importer\r\nimport BarChart from './charts/C9.BarChart';\r\nimport DonutChart from './charts/C9.DonutChart';\r\nimport LineChart from './charts/C9.LineChart';\r\nimport PieChart from './charts/C9.PieChart';\r\nimport TimeLine from './charts/C9.TimeLine';\r\n\r\n// Map Importer\r\nimport Map from './map/C9.Map';\r\n\r\n// Helper Importer\r\nimport Helper from './helper/C9.Helper';\r\nimport DataAdapter from './helper/C9.DataAdapter';\r\n\r\n// CSS Importer\r\nimport styles from './C9.css';\r\n\r\nmodule.exports = {\r\n\tBarChart,\r\n\tDonutChart,\r\n\tLineChart,\r\n\tPieChart,\r\n\tTimeLine,\r\n\r\n\tMap,\r\n\t\r\n\tDataAdapter,\r\n\tHelper,\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","var Helper = {\r\n    \r\n    each: function(loopable, callback, self, reverse) {\r\n        // Check to see if null or undefined firstly.\r\n        var i, len;\r\n        if (self.isArray(loopable)) {\r\n            len = loopable.length;\r\n            if (reverse) {\r\n                for (i = len - 1; i >= 0; i--) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            } else {\r\n                for (i = 0; i < len; i++) {\r\n                    callback.call(self, loopable[i], i);\r\n                }\r\n            }\r\n        } else if (typeof loopable === 'object') {\r\n            var keys = Object.keys(loopable);\r\n            len = keys.length;\r\n            for (i = 0; i < len; i++) {\r\n                callback.call(self, loopable[keys[i]], keys[i]);\r\n            }\r\n        }\r\n    },\r\n\r\n    setValue: function(value, key) {\r\n        var self = this;\r\n        self[key] = value;\r\n    },\r\n\r\n    setPrefix: function(config) {\r\n        var constPrefix = '_';\r\n        if (config) {\r\n            return constPrefix + config;\r\n        }\r\n    },\r\n\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined || (Util.isArray(value) && value.length === 0) || (Util.isArray(value) && Util.isEmpty(value[0]));\r\n    },\r\n\r\n    isObject: function(object) {\r\n        return !Util.isEmpty(object) && typeof(object) === 'object';\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return !Util.isEmpty(array) && (Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]');\r\n    },\r\n\r\n    isFunction: function(func) {\r\n        return !Util.isEmpty(func) && typeof(func) === 'function';\r\n    },\r\n\r\n    // Overlap source by target\r\n    merge: function(target, source){\r\n        var obj3 = {};\r\n        for (var attrname in source) { if (!Util.isEmpty(source[attrname])) obj3[attrname] = source[attrname]; }\r\n        for (var attrname in target) { if (!Util.isEmpty(target[attrname])) obj3[attrname] = target[attrname]; }\r\n        return obj3;\r\n    },\r\n\r\n    // Overlap target by source\r\n    mergeDeep: function(target, source) {\r\n        return mergeDeep(target, source);\r\n    },\r\n\r\n    get: function(_key, _data){\r\n        var _keys = _key.split(\".\");\r\n        var _current = _data;\r\n\r\n        for (var i = 0; i < _keys.length; i++) {\r\n\r\n            if ('undefined' == typeof(_current[_keys[i]])) {\r\n                return '';\r\n            } else {\r\n                _current = _current[_keys[i]];\r\n            }\r\n        }\r\n\r\n        return _current;\r\n    },\r\n    \r\n    set: function(_key, _value, _context) {\r\n        var _current = _context;  // a moving reference to internal objects within obj\r\n        var _keys = _key.split('.');\r\n        var len = _keys.length;\r\n        for(var i = 0; i < len-1; i++) {\r\n            var _handle = _keys[i];\r\n            if( !_current[_handle] ) _current[_handle] = {}\r\n            _current = _current[_handle];\r\n        }\r\n\r\n        _current[_keys[len-1]] = _value;\r\n    },\r\n\r\n    max: function(arr) {\r\n        return Math.max(...arr);\r\n    }, \r\n\r\n    min: function(arr) {\r\n        return Math.min(...arr);\r\n    }, \r\n\r\n    sum: function(arr) {\r\n        return arr.reduce(function(a, b) { return a + b; }, 0);\r\n    },\r\n\r\n    guid: function() {\r\n        return 'c9-xxxxxx-4xxx-yxxx'.replace(/[xy]/g, function(c) {\r\n            let r = Math.random()*16|0, \r\n                v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    },\r\n\r\n    getMinMax: function(data, type, isLogaric) {\r\n        var self  = this;\r\n        var _temp = new Array();\r\n        var _min  = 0,\r\n            _max  = 0;\r\n        if (type == \"stack\") {\r\n            data.forEach(function (d){\r\n                d.forEach(function (s){\r\n                    if (s.y0 > 0)\r\n                        _temp.push(s.y1);\r\n                    else\r\n                        _temp.push(s.y1 + s.y0);\r\n                })\r\n            })\r\n        } else {\r\n            data.forEach(function (d){\r\n                d.forEach(function (s){\r\n                    _temp.push(s.y0);\r\n                })\r\n            });\r\n        }\r\n\r\n\r\n        var _newMin = self.min(_temp);\r\n        var _newMax = self.max(_temp);\r\n        if (_newMin < _min || isLogaric)\r\n            _min = _newMin;\r\n        if (_newMax > _max)\r\n            _max = _newMax;\r\n\r\n        return {min: _min, max: _max};\r\n    },\r\n    dateParser: function(format) {\r\n        return d3.time.format(format).parse;\r\n    },\r\n    dateFormatter: function(format) {\r\n        return d3.time.format(format);\r\n    },\r\n    // Convert color 'from' to 'to' (if any) in propotion of 'p'\r\n    // Use to lighten/darken specific color\r\n    shadeColor: function(p, from, to) {\r\n        // Convert color from 'Name' to 'Hex'\r\n        from = Util.convertColorToHex(from) || from;\r\n        \r\n        if(typeof(p)!=\"number\"||p<-1||p>1||typeof(from)!=\"string\"||(from[0]!='r'&&from[0]!='#')||(typeof(to)!=\"string\"&&typeof(to)!=\"undefined\"))return null; //ErrorCheck\r\n        if(!this.sbcRip)\r\n            this.sbcRip=function(d) {\r\n                var l=d.length,RGB=new Object();\r\n                if(l>9){\r\n                    d=d.split(\",\");\r\n                    if(d.length<3||d.length>4)return null;//ErrorCheck\r\n                    RGB[0]=i(d[0].slice(4)),RGB[1]=i(d[1]),RGB[2]=i(d[2]),RGB[3]=d[3]?parseFloat(d[3]):-1;\r\n                }else{\r\n                    if(l==8||l==6||l<4)return null; //ErrorCheck\r\n                    if(l<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(l>4?d[4]+\"\"+d[4]:\"\"); //3 digit\r\n                    d=i(d.slice(1),16),RGB[0]=d>>16&255,RGB[1]=d>>8&255,RGB[2]=d&255,RGB[3]=l==9||l==5?r(((d>>24&255)/255)*10000)/10000:-1;\r\n                }\r\n                return RGB;\r\n            }\r\n        var i=parseInt,r=Math.round,h=from.length>9,h=typeof(to)==\"string\"?to.length>9?true:to==\"c\"?!h:false:h,b=p<0,p=b?p*-1:p,to=to&&to!=\"c\"?to:b?\"#000000\":\"#FFFFFF\",f=this.sbcRip(from),t=this.sbcRip(to);\r\n        if(!f||!t)return null; //ErrorCheck\r\n        if(h)return \"rgb(\"+r((t[0]-f[0])*p+f[0])+\",\"+r((t[1]-f[1])*p+f[1])+\",\"+r((t[2]-f[2])*p+f[2])+(f[3]<0&&t[3]<0?\")\":\",\"+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*10000)/10000:t[3]<0?f[3]:t[3])+\")\");\r\n        else return \"#\"+(0x100000000+(f[3]>-1&&t[3]>-1?r(((t[3]-f[3])*p+f[3])*255):t[3]>-1?r(t[3]*255):f[3]>-1?r(f[3]*255):255)*0x1000000+r((t[0]-f[0])*p+f[0])*0x10000+r((t[1]-f[1])*p+f[1])*0x100+r((t[2]-f[2])*p+f[2])).toString(16).slice(f[3]>-1||t[3]>-1?1:3);\r\n    },\r\n    //smooth scroll c9 table\r\n    scroll: function(element, to, duration) {\r\n        var self = this;\r\n        if (duration <= 0) return;\r\n        var difference = to - element.scrollTop;\r\n        var perTick = difference / duration * 10;\r\n\r\n        setTimeout(function() {\r\n            element.scrollTop = element.scrollTop + perTick;\r\n            if (element.scrollTop === to) return;\r\n            self.scroll(element, to, duration - 10);\r\n        }, 10);\r\n    }   \r\n};\r\n\r\nvar Util = {\r\n    isEmpty: function(value) {\r\n        return value === null || value === undefined;\r\n    },\r\n\r\n    isArray: function(array) {\r\n        return Array.isArray(array) || Object.prototype.toString.call(array) === '[object Array]';\r\n    },\r\n\r\n    isObject: function(object) {\r\n        return (object && typeof object === 'object' && !Array.isArray(object));\r\n    },\r\n\r\n    convertColorToHex: function(colour) {\r\n        var colours = {\r\n            \"aliceblue\":\"#f0f8ff\",\"antiquewhite\":\"#faebd7\",\"aqua\":\"#00ffff\",\"aquamarine\":\"#7fffd4\",\"azure\":\"#f0ffff\",\r\n            \"beige\":\"#f5f5dc\",\"bisque\":\"#ffe4c4\",\"black\":\"#000000\",\"blanchedalmond\":\"#ffebcd\",\"blue\":\"#0000ff\",\"blueviolet\":\"#8a2be2\",\"brown\":\"#a52a2a\",\"burlywood\":\"#deb887\",\r\n            \"cadetblue\":\"#5f9ea0\",\"chartreuse\":\"#7fff00\",\"chocolate\":\"#d2691e\",\"coral\":\"#ff7f50\",\"cornflowerblue\":\"#6495ed\",\"cornsilk\":\"#fff8dc\",\"crimson\":\"#dc143c\",\"cyan\":\"#00ffff\",\r\n            \"darkblue\":\"#00008b\",\"darkcyan\":\"#008b8b\",\"darkgoldenrod\":\"#b8860b\",\"darkgray\":\"#a9a9a9\",\"darkgreen\":\"#006400\",\"darkkhaki\":\"#bdb76b\",\"darkmagenta\":\"#8b008b\",\"darkolivegreen\":\"#556b2f\",\r\n            \"darkorange\":\"#ff8c00\",\"darkorchid\":\"#9932cc\",\"darkred\":\"#8b0000\",\"darksalmon\":\"#e9967a\",\"darkseagreen\":\"#8fbc8f\",\"darkslateblue\":\"#483d8b\",\"darkslategray\":\"#2f4f4f\",\"darkturquoise\":\"#00ced1\",\r\n            \"darkviolet\":\"#9400d3\",\"deeppink\":\"#ff1493\",\"deepskyblue\":\"#00bfff\",\"dimgray\":\"#696969\",\"dodgerblue\":\"#1e90ff\",\r\n            \"firebrick\":\"#b22222\",\"floralwhite\":\"#fffaf0\",\"forestgreen\":\"#228b22\",\"fuchsia\":\"#ff00ff\",\r\n            \"gainsboro\":\"#dcdcdc\",\"ghostwhite\":\"#f8f8ff\",\"gold\":\"#ffd700\",\"goldenrod\":\"#daa520\",\"gray\":\"#808080\",\"green\":\"#008000\",\"greenyellow\":\"#adff2f\",\r\n            \"honeydew\":\"#f0fff0\",\"hotpink\":\"#ff69b4\",\r\n            \"indianred \":\"#cd5c5c\",\"indigo\":\"#4b0082\",\"ivory\":\"#fffff0\",\"khaki\":\"#f0e68c\",\r\n            \"lavender\":\"#e6e6fa\",\"lavenderblush\":\"#fff0f5\",\"lawngreen\":\"#7cfc00\",\"lemonchiffon\":\"#fffacd\",\"lightblue\":\"#add8e6\",\"lightcoral\":\"#f08080\",\"lightcyan\":\"#e0ffff\",\"lightgoldenrodyellow\":\"#fafad2\",\r\n            \"lightgrey\":\"#d3d3d3\",\"lightgreen\":\"#90ee90\",\"lightpink\":\"#ffb6c1\",\"lightsalmon\":\"#ffa07a\",\"lightseagreen\":\"#20b2aa\",\"lightskyblue\":\"#87cefa\",\"lightslategray\":\"#778899\",\"lightsteelblue\":\"#b0c4de\",\r\n            \"lightyellow\":\"#ffffe0\",\"lime\":\"#00ff00\",\"limegreen\":\"#32cd32\",\"linen\":\"#faf0e6\",\r\n            \"magenta\":\"#ff00ff\",\"maroon\":\"#800000\",\"mediumaquamarine\":\"#66cdaa\",\"mediumblue\":\"#0000cd\",\"mediumorchid\":\"#ba55d3\",\"mediumpurple\":\"#9370d8\",\"mediumseagreen\":\"#3cb371\",\"mediumslateblue\":\"#7b68ee\",\r\n            \"mediumspringgreen\":\"#00fa9a\",\"mediumturquoise\":\"#48d1cc\",\"mediumvioletred\":\"#c71585\",\"midnightblue\":\"#191970\",\"mintcream\":\"#f5fffa\",\"mistyrose\":\"#ffe4e1\",\"moccasin\":\"#ffe4b5\",\r\n            \"navajowhite\":\"#ffdead\",\"navy\":\"#000080\",\r\n            \"oldlace\":\"#fdf5e6\",\"olive\":\"#808000\",\"olivedrab\":\"#6b8e23\",\"orange\":\"#ffa500\",\"orangered\":\"#ff4500\",\"orchid\":\"#da70d6\",\r\n            \"palegoldenrod\":\"#eee8aa\",\"palegreen\":\"#98fb98\",\"paleturquoise\":\"#afeeee\",\"palevioletred\":\"#d87093\",\"papayawhip\":\"#ffefd5\",\"peachpuff\":\"#ffdab9\",\"peru\":\"#cd853f\",\"pink\":\"#ffc0cb\",\"plum\":\"#dda0dd\",\"powderblue\":\"#b0e0e6\",\"purple\":\"#800080\",\r\n            \"red\":\"#ff0000\",\"rosybrown\":\"#bc8f8f\",\"royalblue\":\"#4169e1\",\r\n            \"saddlebrown\":\"#8b4513\",\"salmon\":\"#fa8072\",\"sandybrown\":\"#f4a460\",\"seagreen\":\"#2e8b57\",\"seashell\":\"#fff5ee\",\"sienna\":\"#a0522d\",\"silver\":\"#c0c0c0\",\"skyblue\":\"#87ceeb\",\"slateblue\":\"#6a5acd\",\"slategray\":\"#708090\",\"snow\":\"#fffafa\",\"springgreen\":\"#00ff7f\",\"steelblue\":\"#4682b4\",\r\n            \"tan\":\"#d2b48c\",\"teal\":\"#008080\",\"thistle\":\"#d8bfd8\",\"tomato\":\"#ff6347\",\"turquoise\":\"#40e0d0\",\r\n            \"violet\":\"#ee82ee\",\r\n            \"wheat\":\"#f5deb3\",\"white\":\"#ffffff\",\"whitesmoke\":\"#f5f5f5\",\r\n            \"yellow\":\"#ffff00\",\"yellowgreen\":\"#9acd32\"\r\n        };\r\n\r\n        if (typeof colours[colour.toLowerCase()] != 'undefined')\r\n            return colours[colour.toLowerCase()];\r\n\r\n        return false;\r\n    }\r\n};\r\n\r\nfunction mergeDeep(target, source) {\r\n    if (Util.isObject(target) && Util.isObject(source)) {\r\n        for (const key in source) {\r\n            if (Util.isObject(source[key])) {\r\n                if (Helper.isEmpty(target[key])) {\r\n                    Object.assign(target, {\r\n                        [key]: {}\r\n                    });\r\n                }\r\n                mergeDeep(target[key], source[key]);\r\n            } else {\r\n                Object.assign(target, {\r\n                    [key]: source[key]\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = Helper;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.Helper.js\n **/","import Helper from './C9.Helper';\r\n\r\nexport default class DataAdapter {\r\n\r\n    constructor(options, chartType, callback) {\r\n\r\n        var self = this;\r\n\r\n        var config = {\r\n            // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n            keys: {\r\n                name: \"name\",\r\n                value: \"value\",\r\n                x: \"value.x\",\r\n                y: \"value\",\r\n                coor: \"coor\",\r\n                icon: \"icon\"\r\n            },\r\n            groups: [],\r\n            stacks: [],\r\n            timeFormat: false,\r\n\r\n            // NO NEED TO ADD TO DATA OPTIONS\r\n            // Just use to define default parameters\r\n            colorRange: null,\r\n        };\r\n\r\n        self._keys      = Helper.merge(options.keys, config.keys);\r\n        self._groups    = options.groups    || config.groups;\r\n        self._stacks    = options.stacks    || config.stacks;\r\n        self._timeFormat    = options.timeFormat    || config.timeFormat;\r\n        self._colorRange= options.colorRange|| config.colorRange;\r\n\r\n        self._dataSource = [];\r\n        self._dataTarget = []; // Initialize new Array to use Array methods\r\n        self._dataRefs = [];\r\n\r\n        self._options = options;\r\n        self._chartType = chartType;\r\n        self._callback = callback;\r\n\r\n        self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get callback() {\r\n        return this._callback;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._chartType;\r\n    }\r\n\r\n    get file() {\r\n        return this._file;\r\n    }\r\n\r\n    get keys() {\r\n        return this._keys;\r\n    }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n\r\n    get groups() {\r\n        return this._groups;\r\n    }\r\n\r\n    get stacks() {\r\n        return this._stacks;\r\n    }\r\n\r\n    get colorRange() {\r\n        return this._colorRange;\r\n    }\r\n\r\n    get timeFormat() {\r\n        return this._timeFormat;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n\r\n    set file(arg) {\r\n        if (arg) {\r\n            this._file = arg;\r\n        }\r\n    }\r\n\r\n    set keys(arg) {\r\n        if (arg) {\r\n            this._keys = arg;\r\n        }\r\n    }\r\n\r\n    set dataSource(arg) {\r\n        if (arg) {\r\n            this._dataSource = arg;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n\r\n    set groups(arg) {\r\n        if (arg) {\r\n            this._groups = arg;\r\n        }\r\n    }\r\n\r\n    set stacks(arg) {\r\n        if (arg) {\r\n            this._stacks = arg;\r\n        }\r\n    }\r\n\r\n    set colorRange(arg) {\r\n        if (arg) {\r\n            this._colorRange = arg;\r\n        }\r\n    }\r\n\r\n    set timeFormat(arg) {\r\n        if (arg) {\r\n            this._timeFormat = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        // self.initDataSource();\r\n    }\r\n\r\n    // initDataSource() {\r\n    //     var self = this;\r\n\r\n    //     // if (self.hasPlainData()) {\r\n    //     //     self.executePlainData();\r\n    //     // }\r\n    //     // TESTING\r\n    //     //  else if (self.hasFile()) {\r\n    //     //     self.executeFile();\r\n    //     // }\r\n    // }\r\n\r\n    hasPlainData() {\r\n        var self = this;\r\n\r\n        // return options.plain && Helper.isArray(options.plain);\r\n        return !Helper.isEmpty(self.options.plain); // fix for map\r\n    }\r\n\r\n    hasFile() {\r\n        var self = this;\r\n\r\n        return Helper.isObject(self.options.file) \r\n            && !Helper.isEmpty(self.options.file.url) \r\n            && !Helper.isEmpty(self.options.file.type);\r\n    }\r\n\r\n    executePlainData(callback) {\r\n        var self = this;\r\n\r\n        self.dataSource = self.options.plain;\r\n\r\n        callback.call(self, self.dataSource);\r\n    }\r\n\r\n    executeFile(callback) {\r\n        var self = this;\r\n\r\n        self.file  = self.options.file;\r\n\r\n        if (!Helper.isEmpty(self.file)) {\r\n\r\n            switch(self.file.type) {\r\n                case \"csv\":\r\n                    self.getCsv(callback);\r\n                    break;\r\n                case \"tsv\":\r\n                    self.getTsv(callback);\r\n                    break;\r\n                case \"text\":\r\n                    self.getText(callback);\r\n                    break;\r\n                case \"json\":\r\n                    self.getJson(callback);\r\n                    break;\r\n                case \"xml\":\r\n                    self.getXml(callback);\r\n                    break;\r\n                case \"xhr\":\r\n                    self.getJson(callback);\r\n                    break;\r\n                default:\r\n                    self.getJson(callback);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataTypeForBarChart() {\r\n        var self = this;\r\n\r\n        if (!Helper.isEmpty(self.groups) && Helper.isArray(self.groups) && self.groups.length !== 1) {\r\n            return \"group\";\r\n        } else if (!Helper.isEmpty(self.stacks) && Helper.isArray(self.stacks)) {\r\n            return \"stack\";\r\n        }\r\n\r\n        // default grouped bar if user do not defined groups for array value\r\n        for (var i = self.dataSource.length - 1; i >= 0; i--) {\r\n            if (Helper.isArray(Helper.get(self.keys.value, self.dataSource[i])))\r\n                return \"group\";\r\n        }\r\n\r\n        return \"single\";\r\n    }\r\n\r\n    getDataTarget(type, callback) {\r\n        var self = this;\r\n\r\n        // TESTING\r\n        if (self.hasFile()) {\r\n            self.executeFile(function(data) {\r\n                self.dataSource = data;\r\n                self.generateDataTarget(type);\r\n                callback.call(self, self.dataTarget);\r\n            });\r\n\r\n        } else if (self.hasPlainData()) {\r\n            self.executePlainData(function(data) {\r\n                self.dataSource = data;\r\n                self.generateDataTarget(type);\r\n                callback.call(self, self.dataTarget);\r\n            });\r\n        }\r\n    }\r\n\r\n    generateDataTarget(type) {\r\n        var self = this;\r\n\r\n        switch(type) {\r\n            case \"bar\":\r\n                self.getDataTargetForBarChart();\r\n                break;\r\n\r\n            case \"line\":\r\n                self.getDataTargetForLineChart();\r\n                break;\r\n\r\n            case \"pie\":\r\n                self.getDataTargetForPieChart();\r\n                break;\r\n\r\n            case \"donut\":\r\n                self.getDataTargetForDonutChart();\r\n                break;\r\n\r\n            case \"timeline\":\r\n                self.getDataTargetForTimelineChart();\r\n                break;\r\n\r\n            case \"map\":\r\n                self.getDataTargetForMap();\r\n                break;\r\n\r\n            default:\r\n                self.dataTarget = self.dataSource;\r\n                break;\r\n        }\r\n    }\r\n\r\n    getName(v) {\r\n        return v.name; \r\n    }\r\n\r\n    getValue(v) {\r\n        var self = this;\r\n\r\n        return Helper.get(self.keys, v);\r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*=================================================\r\n    =            Normalize Data For Charts            =\r\n    =================================================*/\r\n    getDataTargetForBarChart() {\r\n        var self = this;\r\n\r\n        switch(self.getDataTypeForBarChart()) {\r\n            case \"single\":\r\n                let color = self.colorRange;\r\n                let groups = self.groups;\r\n\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _data = [{\r\n                        \"name\" : Helper.get(self.keys.name, data),\r\n                        \"value\": Helper.get(self.keys.value, data),\r\n                        \"y0\" : Helper.get(self.keys.value, data),\r\n                        \"y1\" : Helper.get(self.keys.value, data),\r\n                        \"group\": groups[0] || 'data' + (1),\r\n                        \"data-ref\": Helper.guid(),\r\n                        \"enable\" : true,\r\n                        \"color\": color(0),\r\n                    }];\r\n                    self.dataTarget.push(_data);\r\n                });\r\n\r\n                // return self.dataTarget;\r\n                break;\r\n\r\n            case \"group\":\r\n                var groups = self.groups;\r\n                var groupRefs = [];\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"group-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        _dsArray.forEach(function(d, i) {\r\n                            if (groupRefs.length - 1 < i)\r\n                                groupRefs.push(Helper.guid());\r\n                            if (Helper.isEmpty(groups[i]))\r\n                                groups.push('data' + (i+1));\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": d,\r\n                                \"y1\": d > 0 ? d : 0,\r\n                                \"group\": groups[i],\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"value\": d,\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"group-ref\": groupRefs[i],\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                        });\r\n                    } else {\r\n                        if (groupRefs.length == 0)\r\n                            groupRefs.push(Helper.guid());\r\n                        if (Helper.isEmpty(groups[0]))\r\n                            groups.push('data1');\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": _dsArray,\r\n                            \"y1\": _dsArray > 0 ? _dsArray : 0,\r\n                            \"group\": groups[0],\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"value\": _dsArray,\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"group-ref\": groupRefs[0],\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n\r\n                    self.dataTarget.push(_stack);\r\n                });\r\n\r\n                self.groups = groups;\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            case \"stack\":\r\n                var stacks = self.stacks;\r\n                var groupRefs = [];\r\n                // Iterate over each group\r\n                self.dataSource.forEach(function(data, index) {\r\n                    let _dsArray    = Helper.get(self.keys.value, data);\r\n\r\n                    let _stack      = [],\r\n                        _stackItem = {\r\n                            \"color\": \"#ffffff\",\r\n                            \"y0\": 0,\r\n                            \"y1\": 1,\r\n                            \"group\": \"\",\r\n                            \"name\": \"\",\r\n                            \"data-ref\": \"\",\r\n                            \"enable\"    : true,\r\n                        },\r\n                        color = self.colorRange;\r\n\r\n                    // Iterate each single bar in a group\r\n                    if (Helper.isArray(_dsArray)) {\r\n                        let _negBase = 0;\r\n                        let _posBase = 0;\r\n                        _dsArray.forEach(function(d, i) {\r\n                            if (groupRefs.length - 1 < i)\r\n                                groupRefs.push(Helper.guid());\r\n                            if (Helper.isEmpty(stacks[i]))\r\n                                stacks.push('data' + (i+1));\r\n                            _stackItem = {\r\n                                \"color\": color(i),\r\n                                \"y0\": d,\r\n                                \"y1\": d > 0 ? d + _posBase : _negBase,\r\n                                \"group\": stacks[i],\r\n                                \"name\": Helper.get(self.keys.name, data),\r\n                                \"value\": d,\r\n                                \"data-ref\": Helper.guid(),\r\n                                \"group-ref\": groupRefs[i],\r\n                                \"enable\"    : true,\r\n                            };\r\n                            _stack.push(_stackItem);\r\n                            if (d > 0) _posBase += d;\r\n                            else _negBase += d;\r\n                        });\r\n                    } else {\r\n                        if (groupRefs.length == 0)\r\n                            groupRefs.push(Helper.guid());\r\n                        if (Helper.isEmpty(stacks[0]))\r\n                            stacks.push('data1');\r\n                        _stackItem = {\r\n                            \"color\": color(0),\r\n                            \"y0\": _dsArray,\r\n                            \"y1\": _dsArray > 0 ? _dsArray : 0,\r\n                            \"group\": stacks[0],\r\n                            \"name\": Helper.get(self.keys.name, data),\r\n                            \"value\": _dsArray,\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"group-ref\": groupRefs[0],\r\n                            \"enable\"    : true,\r\n                        };\r\n                        _stack.push(_stackItem);\r\n                    }\r\n\r\n                    self.dataTarget.push(_stack);\r\n                });\r\n\r\n                self.stacks = stacks;\r\n                return self.dataTarget;\r\n                break;\r\n\r\n            default:\r\n                return self.dataSource;\r\n                break;\r\n        }\r\n    \r\n    }\r\n\r\n    getDataTargetForPieChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForDonutChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : Helper.get(self.keys.value, data),\r\n            };\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n\r\n    getDataTargetForTimelineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n\r\n        self.dataSource.forEach(function(data, index) {\r\n\r\n            let _data = {\r\n                // \"color\"     : color(index),\r\n                \"icon\"      : Helper.get(self.keys.icon, data),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"     : [],\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n\r\n            let _dsArray    = Helper.get(self.keys.value, data),\r\n                _valueArray = [],\r\n                _valueItem  = {\r\n                    \"name\": Helper.get(self.keys.name, data),\r\n                    \"start\": null ,\r\n                    \"end\": null ,\r\n                    \"color\": \"#fff\",\r\n                    \"data-ref\": null,\r\n                    \"enable\": true,\r\n                    \"icon\": null\r\n                };\r\n\r\n            if (Helper.isArray(_dsArray)) {\r\n                _dsArray.forEach(function(d, i) {\r\n                    _valueItem = {\r\n                        \"name\": Helper.get(self.keys.name, data),\r\n                        \"start\": new Date(d.start),\r\n                        \"end\": new Date(d.end) ,\r\n                        \"color\": color(index),\r\n                        \"data-ref\": Helper.guid(),\r\n                        \"enable\": true,\r\n                        \"icon\": Helper.get(self.keys.icon, data)\r\n                    };\r\n                    _valueArray.push(_valueItem);\r\n                });\r\n            } else {\r\n                _valueItem = {\r\n                    \"name\": Helper.get(self.keys.name, data),\r\n                    \"start\": new Date(_dsArray.start),\r\n                    \"end\": new Date(_dsArray.end) ,\r\n                    \"color\": color(index),\r\n                    \"data-ref\": Helper.guid(),\r\n                    \"enable\": true,\r\n                    \"icon\": Helper.get(self.keys.icon, data)\r\n                };\r\n                _valueArray.push(_valueItem);\r\n            }\r\n            _data.value = _valueArray;\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n        return self.dataTarget;\r\n\r\n    }\r\n    \r\n    getDataTargetForLineChart() {\r\n        var self = this;\r\n\r\n        let color = self.colorRange;\r\n        self.dataSource.forEach(function(data, index) {\r\n            let _data = {\r\n                \"color\"     : color(index),\r\n                \"name\"      : Helper.get(self.keys.name, data),\r\n                \"value\"    : [],\r\n                \"data-ref\"  : Helper.guid(),\r\n                \"enable\"    : true,\r\n            };\r\n\r\n            let _valueXArray = Helper.get(self.keys.x, data),\r\n                _valueYArray = Helper.get(self.keys.y, data),\r\n                _valueArray = [],\r\n                _valueItem  = {\r\n                    \"name\"  : Helper.get(self.keys.name, data),\r\n                    \"valueX\": null,\r\n                    \"valueY\": null,\r\n                    \"data-ref\": Helper.guid(),\r\n                    \"enable\": true\r\n                };\r\n\r\n            if (Helper.isArray(_valueYArray)) {\r\n                /**\r\n                 *\r\n                 * CASE 1: [{name:, value: []}, {}, ..]\r\n                 *\r\n                 */\r\n                \r\n                if (!Helper.isArray(_valueXArray)) {\r\n                    _valueYArray.forEach(function(d, i) {\r\n                        _valueItem = {\r\n                            \"name\"  : Helper.get(self.keys.name, data),\r\n                            \"valueX\": i,\r\n                            \"valueY\": d,\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\": true\r\n                        };\r\n                        _valueArray.push(_valueItem);\r\n                    });\r\n                } else \r\n\r\n                /**\r\n                 *\r\n                 * CASE 2: [{name:, value: {x: [], y:[]}, {}, ..]\r\n                 *\r\n                 */\r\n                \r\n                if (Helper.isArray(_valueXArray) && !self.timeFormat) {\r\n                    _valueYArray.forEach(function(d, i) {\r\n                        _valueItem = {\r\n                            \"name\"  : Helper.get(self.keys.name, data),\r\n                            \"valueX\": !Helper.isEmpty(_valueXArray[i]) ? _valueXArray[i] : i,\r\n                            \"valueY\": d,\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\": true\r\n                        };\r\n                        _valueArray.push(_valueItem);\r\n                    });\r\n                } else \r\n\r\n                /**\r\n                 *\r\n                 * CASE 3: [{name:, value: {x: [], y:[]}, {}, ..] with config `timeFormat`\r\n                 *\r\n                 */\r\n                \r\n                if (Helper.isArray(_valueXArray) && self.timeFormat) {\r\n                    let _parser = Helper.dateParser(self.timeFormat);\r\n\r\n                    _valueYArray.forEach(function(d, i) {\r\n                        _valueItem = {\r\n                            \"name\"  : Helper.get(self.keys.name, data),\r\n                            \"valueX\": !Helper.isEmpty(_valueXArray[i]) ? _parser(_valueXArray[i]) : i,\r\n                            \"valueY\": d,\r\n                            \"data-ref\": Helper.guid(),\r\n                            \"enable\": true\r\n                        };\r\n                        _valueArray.push(_valueItem);\r\n                    });\r\n                }\r\n            }\r\n\r\n            _data.value = _valueArray;\r\n\r\n            self.dataTarget.push(_data);\r\n        });\r\n\r\n        return self.dataTarget;\r\n\r\n    }\r\n    /*=====  End of Normalize Data For Charts  ======*/\r\n    \r\n    /*=================================================\r\n    =              Normalize Data For Map             =\r\n    =================================================*/\r\n\r\n    getDataTargetForMap() {\r\n        var self = this;\r\n\r\n        var getDataValue = function(key, data, isArray){\r\n            let _keys = key.split('.');\r\n            let _value = Helper.get(key, data);\r\n            let _v;\r\n            if (_keys.length == 1 && _keys[0] == 'value' && !isArray) {\r\n                _v = _value;\r\n            } else {\r\n                _v = new Object();\r\n                _v[_keys[_keys.length - 1]] = _value;\r\n            }\r\n            return _v;\r\n        }\r\n\r\n        var getData = function(data) {\r\n            let _data = {\r\n                \"name\": Helper.get(self.keys.name, data),\r\n                \"coor\": Helper.get(self.keys.coor, data),\r\n                \"value\": null\r\n            }\r\n            if (Helper.isArray(self.keys.value)) {\r\n                self.keys.value.forEach(function(k) {\r\n                    let _v = getDataValue(k, data, true);\r\n                    _data.value = Helper.merge(_data.value, _v);\r\n                });\r\n            }\r\n            else {\r\n                _data.value = getDataValue(self.keys.value, data, false);\r\n            }\r\n\r\n            return _data;\r\n        }\r\n\r\n        if (!Helper.isArray(self.dataSource)) \r\n            self.dataTarget = getData(self.dataSource);\r\n        else \r\n            self.dataSource.forEach(function(data) {\r\n                self.dataTarget.push(getData(data));\r\n            });\r\n\r\n        return self.dataTarget;\r\n    }\r\n\r\n    /*=====    End of Normalize Data For Map   ======*/\r\n    \r\n\r\n    /*=============================================\r\n    =            Data Input From Files            =\r\n    =============================================*/\r\n    \r\n    getCsv(callback) {\r\n\r\n        var self = this;\r\n\r\n        d3.csv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n\r\n            if (!Helper.isEmpty(callback) && Helper.isFunction(callback))\r\n                callback.call(self, data);\r\n        });\r\n    }\r\n\r\n    getTsv(callback) {\r\n\r\n        var self = this;\r\n\r\n        d3.tsv(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            if (!Helper.isEmpty(callback) && Helper.isFunction(callback))\r\n                callback.call(self, data);\r\n        });\r\n\r\n    }\r\n\r\n    getText(callback) {\r\n\r\n        var self = this;\r\n\r\n        d3.text(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            if (!Helper.isEmpty(callback) && Helper.isFunction(callback))\r\n                callback.call(self, data);\r\n        });\r\n\r\n    }\r\n\r\n    getJson(callback) {\r\n\r\n        var self = this;\r\n\r\n        d3.json(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n\r\n            if (!Helper.isEmpty(callback) && Helper.isFunction(callback))\r\n                callback.call(self, data);\r\n        });\r\n    }\r\n\r\n    getXml(callback) {\r\n\r\n        var self = this;\r\n\r\n        d3.xml(self.file.url, function(err, data) {\r\n            if (err) throw err;\r\n            \r\n            // Convert the XML document to an array of objects.\r\n            // Note that querySelectorAll returns a NodeList, not a proper Array,\r\n            // so we must use map.call to invoke array methods.\r\n            data = [].map.call(data.querySelectorAll(\"data\"), function(d) {\r\n                return {\r\n                    name: d.querySelector(\"name\").textContent,\r\n                    value: d.querySelector(\"value\").textContent\r\n                };\r\n            });\r\n\r\n            if (!Helper.isEmpty(callback) && Helper.isFunction(callback))\r\n                callback.call(self, data);\r\n        });\r\n    }\r\n    \r\n    /*=====  End of Data Input From Files  ======*/\r\n    \r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/C9.DataAdapter.js\n **/","import Helper from '../../helper/C9.Helper';\r\n\r\nexport default class Tooltip {\r\n    constructor(options) {\r\n        var self = this;\r\n\r\n        var config = {\r\n            show: true,\r\n            position: 'right', // [top, right, bottom, left]\r\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n            fontColor: '#fff',\r\n            fontSize: '11px',\r\n            format: null\r\n        };\r\n\r\n        self._options           = options;\r\n\r\n        self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get format() {\r\n        return this._format;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set format(arg) {\r\n        if (arg) {\r\n            this._format = arg;\r\n        }\r\n    }\r\n\r\n    set eventFactory(arg) {\r\n        if (arg) {\r\n            this._eventFactory = arg;\r\n        }\r\n    }\r\n\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n    }\r\n\r\n    /**\r\n     * Draw Tooltip\r\n     */\r\n    draw(data, chart, eventType) {\r\n        var self = this;\r\n\r\n        var format = self.format;\r\n\r\n        // First of all, remove all exisiting tooltips\r\n        d3.select(chart.id).selectAll('.c9-custom-tooltip-container').remove();\r\n\r\n        var selector = d3.select(chart.id);\r\n\r\n        // TODO: Add margin to tooltip configs\r\n        // Default: (100, 100) relative to mouse coordinate and chart margin transformation\r\n        var divOnHover = selector.append('div')\r\n                            .attr('class', function() { \r\n                                return 'c9-custom-tooltip-container ' + self.getTriangleClass(); \r\n                            })\r\n                            // .attr(\"transform\", function() { return 'translate(' + (d3.mouse(this)[0] - 100) +\",\"+ (d3.mouse(this)[1] - 100) + ')'; })\r\n                            .style('display', 'none')\r\n                            .style('position', 'absolute')\r\n                            .style('pointer-events', 'all')\r\n                            .style('background-color', self.options.backgroundColor)\r\n                            .style('color', self.options.fontColor)\r\n                            .style('font-size', self.options.fontSize);\r\n                            // .style('width', '100px')\r\n                            // .style('height', '50px')\r\n                            // .html(function() {\r\n                            //     return self.getFormatByChartType(chart, data);\r\n                            // });\r\n\r\n        self.eventFactory = {\r\n\r\n            'mouseover': function(_data) {\r\n                divOnHover\r\n                    .html(function() {\r\n                        return self.getFormatByChartType(chart, _data);\r\n                    })\r\n                    .transition()\r\n                    // .style('left', function() {return d3.mouse(this)[0] + 'px';})\r\n                    .style('left', function() {\r\n                        return self.getCoordinate(chart)['left'];\r\n                    })\r\n                    // .style('top', function() {return d3.mouse(this)[1]  + 'px';})\r\n                    .style('top', function() {\r\n                        return self.getCoordinate(chart)['top'];\r\n                    })\r\n                    .duration(200)\r\n                    .style(\"display\", 'block')\r\n                    .style('pointer-events', 'none');\r\n            },\r\n\r\n            'mousemove': function(_data) {\r\n                divOnHover\r\n                    .html(function() {\r\n                        return self.getFormatByChartType(chart, _data);\r\n                    })\r\n                    .transition()\r\n                    // .style('left', function() {return d3.mouse(this)[0] + 'px';})\r\n                    .style('left', function() {\r\n                        return self.getCoordinate(chart)['left'];\r\n                    })\r\n                    // .style('top', function() {return d3.mouse(this)[1]  + 'px';})\r\n                    .style('top', function() {\r\n                        return self.getCoordinate(chart)['top'];\r\n                    })\r\n                    .duration(200)\r\n                    .style(\"display\", 'block')\r\n                    .style('pointer-events', 'none');\r\n            },\r\n\r\n            'mouseout': function(_data) {\r\n                divOnHover\r\n                    .transition()\r\n                    .duration(200)      \r\n                    .style('display', 'none');\r\n\r\n            }\r\n\r\n        };\r\n\r\n        if (self.options.show) {\r\n\r\n            switch(eventType) {\r\n                case 'mouseover':\r\n                    self.eventFactory.mouseover(data);\r\n                    break;\r\n                case 'mouseout':\r\n                    self.eventFactory.mouseout(data);\r\n                    break;\r\n                case 'mousemove':\r\n                    self.eventFactory.mousemove(data);\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    getTriangleClass() {\r\n        var self = this;\r\n        let r ;\r\n\r\n        switch(self.options.position) {\r\n            case 'top':\r\n                r = 'c9-tooltip-top';\r\n                break;\r\n            case 'right':\r\n                r = 'c9-tooltip-right';\r\n                break;\r\n            case 'bottom':\r\n                r = 'c9-tooltip-bottom';\r\n                break;\r\n            case 'left':\r\n                r = 'c9-tooltip-left';\r\n                break;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    setDefaultFormatByChartType(chart, data) {\r\n        // if (Helper.isEmpty(data)) { console.log(data);return false;}\r\n        var self = this;\r\n\r\n        let chartType = chart.chartType, format;\r\n\r\n        switch(chartType) {\r\n            case 'bar':\r\n                format = function(data) {\r\n                    return '<strong>' + data.name + '</strong>' + '<br><span>' + data.value + '</span>'\r\n                };\r\n                break;\r\n            case 'pie':\r\n                format = function(data) {\r\n                    return '<strong>' + data.data.name + '</strong>' + '<br><span>' + data.data.value + '</span>' \r\n                };\r\n                break;\r\n            case 'donut':\r\n                format = function(data) {\r\n                    return '<strong>' + data.data.name + '</strong>' + '<br><span>' + data.data.value + '</span>' \r\n                };\r\n                break;\r\n            case 'line':\r\n                format = function(data) {\r\n                    let _format = '';\r\n                    data.forEach(function(d, i){\r\n                        _format += '<strong>' + d.name + '</strong>' + '<br><span> Value X: ' + d.valueX + '</span>' + '<br><span> Value Y: ' + d.valueY + '</span><br>';    \r\n                    });\r\n                    return _format;\r\n                };\r\n                break;\r\n            case 'timeline':\r\n                format = function(data) {\r\n                    return (data.name ? '<strong>' + data.name + '</strong>' : '<img src=' + data.icon + '\" width=\"' + chart.options.itemHeight + '\" height=\"' + chart.options.itemHeight + '\">') + '<br><strong>Start at: </strong><span>' + data.start + '</span><br><strong>End at: </strong><span>' + data.end + '</span>' \r\n                };\r\n                break;\r\n        }\r\n\r\n        // Update format for tooltip based on chart type\r\n        self.format     = self.options.format || format;\r\n        // console.log(self.format);\r\n    }\r\n\r\n    getCoordinate(chart) {\r\n        var self = this;\r\n        let r ;\r\n\r\n        var offset = self.getOffset(d3.select(chart.id)[0][0]);\r\n\r\n        switch(self.options.position) {\r\n            case 'top':\r\n                r = {\r\n                    'left': (d3.event.pageX - offset.left - 50) + 'px',\r\n                    'top': (d3.event.pageY - offset.top - 50) + 'px'\r\n                };\r\n                break;\r\n            case 'right':\r\n                r = {\r\n                    // 'left': (d3.event.pageX - offset.left - 50) + 'px',\r\n                    'left': (d3.event.pageX - offset.left) + 'px',\r\n                    // 'top': (d3.event.pageY - offset.top - 50) + 'px'\r\n                    'top': (d3.event.pageY - offset.top - 25) + 'px'\r\n                };\r\n                break;\r\n            case 'bottom':\r\n                r = {\r\n                    'left': (d3.event.pageX - offset.left - 50) + 'px',\r\n                    'top': (d3.event.pageY - offset.top + 50) + 'px'\r\n                };\r\n                break;\r\n            case 'left':\r\n                r = {\r\n                    // 'left': (d3.event.pageX - offset.left + 50) + 'px',\r\n                    'left': (d3.event.pageX - offset.left - 50) + 'px',\r\n                    // 'top': (d3.event.pageY - offset.top - 50) + 'px'\r\n                    'top': (d3.event.pageY - offset.top - 25) + 'px'\r\n                };\r\n                break;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getOffset(elem) {\r\n        var box = { top: 0, left: 0 };\r\n\r\n        // BlackBerry 5, iOS 3 (original iPhone)\r\n        if ( typeof elem.getBoundingClientRect !== undefined ) {\r\n          box = elem.getBoundingClientRect();\r\n        }\r\n\r\n        return {\r\n          top: box.top  + ( window.pageYOffset || elem.scrollTop )  - ( elem.clientTop  || 0 ),\r\n          left: box.left + ( window.pageXOffset || elem.scrollLeft ) - ( elem.clientLeft || 0 )\r\n        };\r\n    }\r\n\r\n    getFormatByChartType(chart, data) {\r\n        var self = this;\r\n\r\n        self.setDefaultFormatByChartType(chart, data);\r\n\r\n        let r = self.format(data);\r\n\r\n        return r;\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Tooltip.js\n **/","import Helper from '../helper/C9.Helper';\r\n\r\nexport default class Chart {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            // size (width, height), margin, padding\r\n            width: 750,\r\n            height: 500,\r\n            margin: {\r\n                top: 100,\r\n                left: 50,\r\n                right: 50,\r\n                bottom: 50\r\n            },\r\n\r\n            // interaction in chart\r\n            hover: {\r\n                enable: true,\r\n                options: {\r\n                    template: '',\r\n                    onMouseOver: {\r\n                        fadeIn: 200,\r\n                        callback: function(data) {\r\n                            // console.dir(data);\r\n                        },\r\n                    },\r\n                    onMouseOut: {\r\n                        fadeOut: 500,\r\n                        callback: function(data) {\r\n                            // console.dir(data);\r\n                        },\r\n                    },\r\n                    onMouseMove: {\r\n                        callback: function(data) {\r\n                            // console.dir(data);\r\n                        },\r\n                    }\r\n                }\r\n            },\r\n\r\n            click: {\r\n                callback: function(data) {\r\n                    // console.dir(data);\r\n                },\r\n            },\r\n\r\n            // title\r\n            title: {\r\n                show      : true,\r\n                text      : \"Sample Chart\",\r\n                position  : 'top',\r\n                fontSize  : \"14px\"\r\n            },\r\n\r\n            // legend\r\n            legend: {\r\n                show      : true,\r\n                position  : \"top\",\r\n                size      : 10,\r\n                fontSize  : \"12px\",\r\n                fontColor : \"#999\",\r\n                fontWeight: 'bold',\r\n                margin    : [5, 5, 5, 5],\r\n                space     : 10,\r\n            },\r\n\r\n            // tooltip\r\n            tooltip: {\r\n                show: true,\r\n                position: 'right', // [top, right, bottom, left]\r\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                fontColor: '#fff',\r\n                fontSize: '11px',\r\n                format: null\r\n            },\r\n\r\n            // table \r\n            table: {\r\n                container: \"body\",\r\n                show: false,\r\n                headings: [\"Name\", \"Value\"],\r\n                style: \"stripe\", // \"strip\", \"border\"\r\n                serial: true,\r\n                hover: {\r\n                    enable: true,\r\n                    callback: null\r\n                },\r\n                click: {\r\n                    enable: true,\r\n                    callback: null\r\n                }\r\n            },\r\n\r\n            // color range\r\n            colorRange: \"category20\",\r\n\r\n            // data\r\n            data: {\r\n                // ALL OPTIONS AVAILABLE IN DATA CONFIG\r\n                plain: [],\r\n                file: {\r\n                    type: null,\r\n                    url: null,\r\n                },\r\n                keys: {\r\n                    name: \"name\",\r\n                    value: \"value\",\r\n                    time: \"time\"\r\n                },\r\n                groups: [],\r\n                stacks: [],\r\n            },\r\n\r\n            axis: {\r\n                x: {\r\n                    tick: {\r\n                        rotate: 0,\r\n                        count: 10,\r\n                        size: 6,\r\n                        padding: 3,\r\n                        format: undefined,\r\n                        values: [],\r\n                        //the following use for timeline chart\r\n                        type: d3.time.hours,\r\n                        interval: 1\r\n                    },\r\n                    label: {\r\n                        text: \"Name\",\r\n                        position: \"default\"\r\n                    },\r\n                    show: true,\r\n                    grid: false,\r\n                    type: \"\"\r\n                },\r\n                y: {\r\n                    tick: {\r\n                        rotate: 0,\r\n                        count: 10,\r\n                        size: 6,\r\n                        padding: 3,\r\n                        format: undefined,\r\n                        values: []\r\n                    },\r\n                    label: {\r\n                        text: \"Value\",\r\n                        position: \"default\"\r\n                    },\r\n                    show: true,\r\n                    grid: true,\r\n                    type: \"\"\r\n                }\r\n            },\r\n\r\n            // sub-chart\r\n            subchart: {\r\n                show: false,\r\n                height: 100,\r\n            },\r\n        };\r\n\r\n        self._options   = options;\r\n\r\n        self.initConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    \r\n    get id() {\r\n        if (this._id !== 'body') {\r\n            return '#' + this._id;\r\n        }\r\n        return this._id;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get actualWidth() {\r\n        return this._actualWidth;\r\n    }\r\n\r\n    get actualHeight() {\r\n        return this._actualHeight;\r\n    }\r\n\r\n    /**\r\n     * If colorRange is Array of color then scale range according to it\r\n     * If colorRange is a String like \"category20\", \"category20b\", etc. then scale using d3.scale.category\r\n     */\r\n    get colorRange() {\r\n        var color = this._colorRange;\r\n\r\n        if (typeof color == 'string') {\r\n            try {\r\n                return d3.scale[color]();    \r\n            }\r\n            catch(err) {\r\n                return function(i) {\r\n                    return color;\r\n                };\r\n            }\r\n        } else if (typeof color == 'object') {\r\n            return d3.scale.ordinal().range(color);\r\n        }\r\n    }\r\n\r\n    get margin() {\r\n        return this._margin;\r\n    }\r\n\r\n    get dataOption() {\r\n        return this._dataOption;\r\n    }\r\n\r\n    get svg() {\r\n        return this._svg;\r\n    }\r\n\r\n    get body() {\r\n        return this._body;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get hover() {\r\n        return this._hover;\r\n    }\r\n\r\n    get click() {\r\n        return this._click;\r\n    }\r\n\r\n    get dataTarget() {\r\n        return this._dataTarget;\r\n    }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get eventFactory() {\r\n        return this._eventFactory;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    get chartType() {\r\n        return this._chartType;\r\n    }\r\n\r\n    get title() {\r\n        return this._title;\r\n    }\r\n\r\n    get axis() {\r\n        return this._axis;\r\n    }\r\n\r\n    get legend() {\r\n        return this._legend;\r\n    }\r\n\r\n    get table() {\r\n        return this._table;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this._tooltip;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set container(arg) {\r\n        if (arg) {\r\n            this._container = arg;\r\n        }\r\n    }\r\n    \r\n    set id(arg) {\r\n        if (arg) {\r\n            this._id = arg;\r\n        }\r\n    }\r\n\r\n    set width(arg) {\r\n        if (arg) {\r\n            this._width = arg;\r\n        }\r\n    }\r\n\r\n    set height(arg) {\r\n        if (arg) {\r\n            this._height = arg;\r\n        }\r\n    }\r\n\r\n    set actualWidth(arg) {\r\n        if (arg) {\r\n            this._actualWidth = arg;\r\n        }\r\n    }\r\n\r\n    set actualHeight(arg) {\r\n        if (arg) {\r\n            this._actualHeight = arg;\r\n        }\r\n    }\r\n\r\n    set colorRange(arg) {\r\n        if (arg) {\r\n            this._colorRange = arg;\r\n        }\r\n    }\r\n\r\n    set margin(arg) {\r\n        if (arg) {\r\n            this._margin = arg;\r\n        }\r\n    }\r\n\r\n    set dataOption(arg) {\r\n        if (arg) {\r\n            this._dataOption = arg;\r\n        }\r\n    }\r\n\r\n    set svg(arg) {\r\n        if (arg) {\r\n            this._svg = arg;\r\n        }\r\n    }\r\n\r\n    set body(arg) {\r\n        if (arg) {\r\n            this._body = arg;\r\n        }\r\n    }\r\n\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n\r\n    set hover(arg) {\r\n        if (arg) {\r\n            this._hover = arg;\r\n        }\r\n    }\r\n\r\n    set click(arg) {\r\n        if (arg) {\r\n            this._click = arg;\r\n        }\r\n    }\r\n\r\n    set dataTarget(arg) {\r\n        if (arg) {\r\n            this._dataTarget = arg;\r\n        }\r\n    }\r\n\r\n    set dataSource(arg) {\r\n        if (arg) {\r\n            this._dataSource = arg;\r\n        }\r\n    }\r\n\r\n    set eventFactory(arg) {\r\n        if (arg) {\r\n            this._eventFactory = arg;\r\n        }\r\n    }\r\n\r\n    set x(arg) {\r\n        if (arg) {\r\n            this._x = arg;\r\n        }\r\n    }\r\n\r\n    set y(arg) {\r\n        if (arg) {\r\n            this._y = arg;\r\n        }\r\n    }\r\n\r\n    set chartType(arg) {\r\n        if (arg) {\r\n            this._chartType = arg;\r\n        }\r\n    }\r\n\r\n    set title(arg) {\r\n        if (arg) {\r\n            this._title = arg;\r\n        }\r\n    }\r\n\r\n    set axis(arg) {\r\n        if (arg) {\r\n            this._axis = arg;\r\n        }\r\n    }\r\n\r\n    set legend(arg) {\r\n        if (arg) {\r\n            this._legend = arg;\r\n        }\r\n    }\r\n\r\n    set table(arg) {\r\n        if (arg) {\r\n            this._table = arg;\r\n        }\r\n    }\r\n\r\n    set tooltip(arg) {\r\n        if (arg) {\r\n            this._tooltip = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Init parent config\r\n     * Only in BaseClass <Chart> to init config\r\n     */\r\n    initConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        var options = self.options;\r\n\r\n        self.id        = options.id        || config.id;\r\n        self.width     = options.width     || config.width;\r\n        self.height    = options.height    || config.height;\r\n        self.colorRange= options.colorRange|| config.colorRange;\r\n        \r\n        self.margin    = Helper.merge(options.margin, config.margin);\r\n        self.hover     = Helper.merge(options.hover, config.hover);\r\n        self.click     = Helper.merge(options.click, config.click);\r\n        \r\n        self.dataOption= Helper.mergeDeep(config.data, options.data);\r\n\r\n        self.options.subchart  = Helper.merge(options.subchart, config.subchart);\r\n        self.options.table     = Helper.merge(options.table, config.table);\r\n        self.options.tooltip   = Helper.merge(options.tooltip, config.tooltip);\r\n        self.options.legend    = Helper.merge(options.legend, config.legend);\r\n        self.options.axis      = Helper.mergeDeep(config.axis, options.axis);\r\n    }\r\n\r\n    /**\r\n     * Update parent config\r\n     */\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        var options = self.options;\r\n\r\n        self.id        = options.id        || config.id;\r\n        self.width     = options.width     || config.width;\r\n        self.height    = options.height    || config.height;\r\n        self.colorRange= options.colorRange|| config.colorRange;\r\n        \r\n        self.margin    = Helper.merge(options.margin, config.margin);\r\n        self.hover     = Helper.merge(options.hover, config.hover);\r\n        self.click     = Helper.merge(options.click, config.click);\r\n        \r\n        self.dataOption= Helper.mergeDeep(config.data, options.data);\r\n\r\n        self.options.subchart  = Helper.merge(options.subchart, config.subchart);\r\n        self.options.table     = Helper.merge(options.table, config.table);\r\n        self.options.tooltip   = Helper.merge(options.tooltip, config.tooltip);\r\n        self.options.legend    = Helper.merge(options.legend, config.legend);\r\n        self.options.axis      = Helper.mergeDeep(config.axis, options.axis);\r\n    }\r\n\r\n    /**\r\n     * Draw or Re-draw Base Chart\r\n     */\r\n    draw() {\r\n        var self = this;\r\n\r\n        var margin  = self.margin,\r\n            id      = self.id,\r\n            width   = self.width - margin.left - margin.right,\r\n            height  = self.height - margin.top - margin.bottom;\r\n\r\n        self.container = d3.select(id);\r\n\r\n        // Remove existing chart at current container\r\n        self.container.selectAll(\".c9-svg\").data([]).exit().remove();\r\n\r\n        self.svg = d3.select(id)\r\n            .style('position', 'relative')\r\n            .append(\"svg\")\r\n            .attr('class', 'c9-svg')\r\n            .attr(\"width\", self.width)\r\n            .attr(\"height\", self.height)\r\n            .style('overflow', 'visible'); // to overwrite overflow: hidden by Boostrap as default\r\n\r\n\r\n        self.svg.append(\"defs\")\r\n            .append(\"clipPath\")\r\n                .attr(\"id\", \"clip\")\r\n            .append(\"rect\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height);\r\n\r\n        self.body = self.svg\r\n                    .append(\"g\")\r\n                    .attr('class', 'c9-chart c9-custom-container')\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");  \r\n\r\n    }\r\n\r\n    /**\r\n     * Get lightening color to create effect when interacting\r\n     * @param  {[type]} color [description]\r\n     */\r\n    getLightenColor(color) {\r\n        return Helper.shadeColor(0.5, color);\r\n    }\r\n\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     */\r\n    on(eventType, callback) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        // Self-update on Base Chart to make sure that self.options consisting\r\n        // of all new values\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(data, dataConfig) {\r\n\r\n    }\r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.Chart.js\n **/","import Helper from '../../helper/C9.Helper';\r\n\r\nexport default class Axis {\r\n    constructor(options, chart, width, height) {\r\n        var self = this;\r\n\r\n        var config = {\r\n                x: {\r\n                    tick: {\r\n                        rotate: 0, \r\n                        count: 10, // number of ticks to display\r\n                        size: 6, // size of tick\r\n                        padding: 3,\r\n                        format: undefined,\r\n                        values: [],\r\n                        //the following use for timeline chart\r\n                        time: undefined,\r\n                        interval: 1\r\n                    },\r\n                    label: {\r\n                        text: \"Name\",\r\n                        position: \"default\"\r\n                    },\r\n                    show: true,\r\n                    grid: false,\r\n                    type: \"\"\r\n                },\r\n                y: {\r\n                    tick: {\r\n                        rotate: 0,\r\n                        count: 10,\r\n                        size: 6,\r\n                        padding: 3,\r\n                        format: undefined,\r\n                        values: []\r\n                    },\r\n                    label: {\r\n                        text: \"Value\",\r\n                        position: \"default\"\r\n                    },\r\n                    show: true,\r\n                    grid: true,\r\n                    type: \"\"\r\n                }\r\n            };\r\n\r\n        self._options   = options;\r\n        self._chart     = chart;\r\n        self._width     = width;\r\n        self._height    = height;\r\n\r\n        self.updateConfig(config);\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    \r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    get xAxis() {\r\n        return this._xAxis;\r\n    }\r\n\r\n    get yAxis() {\r\n        return this._yAxis;\r\n    }\r\n\r\n    get chart() {\r\n        return this._chart;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    \r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    \r\n    set x(arg) {\r\n        if (arg) {\r\n            this._x = arg;\r\n        }\r\n    }\r\n\r\n    set y(arg) {\r\n        if (arg) {\r\n            this._y = arg;\r\n        }\r\n    }\r\n\r\n    set xAxis(arg) {\r\n        if (arg) {\r\n            this._xAxis = arg;\r\n        }\r\n    }\r\n\r\n    set yAxis(arg) {\r\n        if (arg) {\r\n            this._yAxis = arg;\r\n        }\r\n    }\r\n\r\n    set chart(arg) {\r\n        if (arg) {\r\n            this._chart = arg;\r\n        }\r\n    }\r\n\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n\r\n    set width(arg) {\r\n        if (arg) {\r\n            this._width = arg;\r\n        }\r\n    }\r\n\r\n    set height(arg) {\r\n        if (arg) {\r\n            this._height = arg;\r\n        }\r\n    }\r\n\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n    \r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n        \r\n        self.x = self.chart.x;\r\n        self.y = self.chart.y;\r\n\r\n        self.data       = self.chart.dataTarget;\r\n        self.isLogaricVariant = self.chart.options.isLogaric;\r\n\r\n        if (self.chart.chartType == \"timeline\") {\r\n            var xScale = d3.time.scale()\r\n                .domain([self.chart.options.starting, self.chart.options.ending])\r\n                .range([0, self.width]);\r\n\r\n            self.xAxis = d3.svg.axis()\r\n                .scale(xScale)\r\n                .orient(\"bottom\")\r\n                .tickFormat(self.options.x.tick.format === undefined ? d3.time.format(\"%I %p\") : self.options.x.tick.format)\r\n                // .tickSize(options.tickFormat === undefined ? 6 : options.tickFormat.tickSize)\r\n                .ticks(self.options.x.tick.time || self.options.x.tick.count, self.options.x.tick.interval);\r\n            // delete options.starting;\r\n            // delete options.ending;\r\n        } else {\r\n            self.xAxis = d3.svg.axis()\r\n                .scale(self.x)\r\n                .orient(\"bottom\")\r\n                .tickPadding(self.options.x.tick.padding)\r\n                .ticks(self.options.x.tick.count)\r\n                .tickValues(self.options.x.tick.values.length > 0 ? self.options.x.tick.values : undefined)\r\n                .tickFormat(self.options.x.type == \"timeseries\" ? self.options.x.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.x.tick.format ? self.options.x.tick.format : undefined);\r\n\r\n            // In LOG scale, can't specify default number of ticks\r\n            // must be filter with tickFormat instead\r\n            // refer: https://github.com/d3/d3/wiki/Quantitative-Scales#log_ticks\r\n            if (self.isLogaricVariant) {\r\n                self.yAxis = d3.svg.axis()\r\n                    .scale(self.y)\r\n                    .orient(\"left\")\r\n                    .ticks(self.options.y.tick.count, self.options.y.type == \"timeseries\" ? self.options.y.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.y.tick.format ? self.options.y.tick.format : undefined)\r\n                    .tickPadding(self.options.y.tick.padding)\r\n                    .tickValues(self.options.y.tick.values.length > 0 ? self.options.y.tick.values : undefined);\r\n            } else {\r\n                self.yAxis = d3.svg.axis()\r\n                    .scale(self.y)\r\n                    .orient(\"left\")\r\n                    .ticks(self.options.y.tick.count)\r\n                    .tickPadding(self.options.y.tick.padding)\r\n                    .tickValues(self.options.y.tick.values.length > 0 ? self.options.y.tick.values : undefined)\r\n                    .tickFormat(self.options.y.type == \"timeseries\" ? self.options.y.tick.format || d3.time.format(\"%Y-%m-%d\") : self.options.y.tick.format ? self.options.y.tick.format : undefined);\r\n            }   \r\n        }\r\n\r\n        if (self.chart.chartType != \"timeline\") {\r\n            // Grid\r\n            if (self.options.x.grid) {\r\n                self.xAxis.innerTickSize(-self.height)\r\n                    .outerTickSize(0);\r\n            }\r\n\r\n            if (self.options.y.grid) {\r\n                self.yAxis.innerTickSize(-self.width)\r\n                    .outerTickSize(0);\r\n            }\r\n        }\r\n\r\n        var textAnchor = function(angle) {\r\n            var sin = Math.sin(angle * Math.PI / 180).toFixed(15);\r\n            return sin == 0 ? \"middle\" : (sin > 0 ? \"start\" : \"end\");\r\n        };\r\n\r\n        var textDx = function(angle) {\r\n            var sin = Math.sin(angle * Math.PI / 180).toFixed(15);\r\n            return 8 * sin;\r\n        };\r\n\r\n        var textY = function(angle) {\r\n            return 11.5 - 2.5 * (angle / 15) * (angle > 0 ? 1 : -1);\r\n        };\r\n\r\n        //draw x axis\r\n        self.chart.body.append(\"g\")\r\n            .attr(\"class\", \"c9-axis c9-axis-x\")\r\n            .attr(\"transform\", \"translate(0,\" + (self.height) + \")\")\r\n            .call(self.xAxis);\r\n            \r\n        //draw tick\r\n        self.chart.svg.select(\".c9-axis.c9-axis-x\").selectAll(\"text\")\r\n            .style(\"text-anchor\", textAnchor(self.options.x.tick.rotate))\r\n            .attr(\"y\", textY(self.options.x.tick.rotate))\r\n            .attr(\"x\", 0)\r\n            .attr(\"dy\", \".71em\")\r\n            .attr(\"dx\", textDx(self.options.x.tick.rotate))\r\n            .attr(\"transform\", \"rotate(\" + self.options.x.tick.rotate + \")\");\r\n        //draw label\r\n        self.chart.svg.select(\".c9-axis.c9-axis-x\")\r\n            .append(\"text\")\r\n            .attr(\"class\", \"c9-axis c9-axis-x-text\")\r\n            .attr(\"dx\", \"-.8em\")\r\n            .attr(\"dy\", \"-.55em\")\r\n            .attr(\"x\", self.width + 20)\r\n            .attr(\"y\", 10)\r\n            .style(\"text-anchor\", \"start\")\r\n            .text(self.options.x.label.text);\r\n\r\n        //hide x axis\r\n        if (!self.options.x.show) {\r\n            self.chart.svg.select(\".c9-axis.c9-axis-x>.domain\").style(\"display\", \"none\");\r\n            if (!self.options.x.grid) self.chart.svg.selectAll(\".c9-axis.c9-axis-x>g.tick>line\").style(\"display\", \"none\");\r\n        }\r\n\r\n        if (self.chart.chartType != \"timeline\") {\r\n            self.chart.body.append(\"g\")\r\n                .attr(\"class\", \"c9-axis c9-axis-y\")\r\n                .call(self.yAxis);\r\n\r\n            self.chart.svg.select(\".c9-axis.c9-axis-y\")\r\n                .append(\"text\")\r\n                .attr(\"class\", \"c9-axis c9-axis-y-text\")\r\n                .attr(\"y\", -10)\r\n                .attr(\"dy\", \".10\")\r\n                .style(\"text-anchor\", \"end\")\r\n                .text(self.options.y.label.text);\r\n\r\n            if (!self.options.y.show) {\r\n                self.chart.svg.select(\".c9-axis.c9-axis-y>.domain\").style(\"display\", \"none\");\r\n                if (!self.options.y.grid) self.chart.svg.selectAll(\".c9-axis.c9-axis-y>g.tick>line\").style(\"display\", \"none\");\r\n            }\r\n        }\r\n    }\r\n\r\n    update(x, y, duration) {\r\n        var self = this;\r\n\r\n        if (!Helper.isEmpty(x)) {\r\n            self.x = x;\r\n\r\n            if (self.chart.chartType == 'timeline') {\r\n                var xScale = d3.time.scale()\r\n                    .domain([self.chart.options.starting, self.chart.options.ending])\r\n                    .range([0, self.width]);\r\n\r\n                self.xAxis.scale(xScale);\r\n            } else {\r\n                self.xAxis.scale(self.x);\r\n            }\r\n\r\n            self.chart.body.select('.c9-axis.c9-axis-x').transition().duration(duration).call(self.xAxis);\r\n        }\r\n        if (!Helper.isEmpty(y)) {\r\n            self.y = y;\r\n\r\n            if (self.chart.chartType == 'timeline') {\r\n                return ;\r\n            } else {\r\n                self.yAxis.scale(self.y);\r\n            }\r\n\r\n            self.chart.body.select(\".c9-axis.c9-axis-y\").transition().duration(duration).call(self.yAxis);\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n\r\n        self.update(self.x, self.y, 100);\r\n    }\r\n    /*=====  End of Main Functions  ======*/  \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Axis.js\n **/","import Helper from '../../helper/C9.Helper';\r\n\r\nexport default class Legend {\r\n    constructor(options, chart) {\r\n        var self = this;\r\n\r\n        var config = {\r\n            show      : true,\r\n            position  : \"top\",\r\n            size      : 10,\r\n            fontSize  : \"12px\",\r\n            fontColor : \"#999\",\r\n            fontWeight: 'bold',\r\n            margin    : [5, 5, 5, 5],\r\n            space     : 10,\r\n            box       : false,\r\n            // legendStyle     : \"rect\" // TODO: Allow user to choose type of legend (circle, rect, etc.)\r\n        };\r\n\r\n        \r\n        self._options   = options;\r\n        self._chart     = chart;\r\n\r\n        self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get options() {\r\n        return this._options;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get chart() {\r\n        return this._chart;\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    get itemEventFactory() {\r\n        return this._itemEventFactory;\r\n    }\r\n    \r\n    get maxWidth() {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    get maxHeight() {\r\n        return this._maxHeight;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set chart(arg) {\r\n        if (arg) {\r\n            this._chart = arg;\r\n        }\r\n    }\r\n\r\n    set item(arg) {\r\n        if (arg) {\r\n            this._item = arg;\r\n        }\r\n    }\r\n\r\n    set itemEventFactory(arg) {\r\n        if (arg) {\r\n            this._itemEventFactory = arg;\r\n        }\r\n    }\r\n    \r\n    set maxWidth(arg) {\r\n        if (arg) {\r\n            this._maxWidth = arg;\r\n        }\r\n    }\r\n\r\n    set maxHeight(arg) {\r\n        if (arg) {\r\n            this._maxHeight = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.maxWidth   = self.chart.width;\r\n        self.maxHeight  = self.chart.height;\r\n        self.data       = self.chart.dataTarget;\r\n    }\r\n\r\n    update(data) {\r\n        var self = this;\r\n\r\n        self.data = data;\r\n\r\n        if (self.options.show) {\r\n            // Remove current legend\r\n            self.chart.svg.selectAll('.c9-custom-legend.c9-custom-legend-container').remove();\r\n\r\n            // var color = self.color;\r\n            var domain = [];\r\n\r\n            if (self.chart.chartType == \"bar\") {\r\n                self.data = self.data[self.data.reduce((p, c, i, a) => a[p].length > c.length ? p : i, 0)];\r\n            }\r\n\r\n            // Legend will be appended in main SVG container\r\n            // var container = d3.select(self._body[0][0].parentNode)\r\n            var container = self.chart.svg\r\n                .append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-container\");\r\n            \r\n            // var legendBox = legendContainer.selectAll(\".c9-custom-legend.c9-custom-legend-box\").data([true]).enter();\r\n\r\n            self.item = container.selectAll(\"g.c9-custom-legend.c9-custom-legend-item\")\r\n                .data(self.data)\r\n                .enter().append(\"g\")\r\n                .attr(\"class\", \"c9-custom-legend c9-custom-legend-item\")\r\n                .attr('data-ref', function(d) { return d['data-ref']; })\r\n                .attr('data-enable', function(d) { return d['enable']; })\r\n                \r\n\r\n            self.item.append('rect')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-rect')\r\n                .attr('width', self.options.size)\r\n                .attr('height', self.options.size)\r\n                .attr('r', self.options.size)\r\n                .attr('fill', function(d){ return d.color || d[0].color; })\r\n                // .attr('stroke', function(d){ return d.color || d[0].color; })\r\n                .style('cursor', 'pointer');\r\n\r\n            self.item.append('rect')\r\n                .attr('width', 5)\r\n                .attr('height', self.options.size)\r\n                .attr('x', self.options.size)\r\n                .attr('y', 0)\r\n                .attr('opacity', 0)\r\n                .style('cursor', 'pointer');\r\n\r\n            self.item.append('text')\r\n                .attr('class', 'c9-custom-legend c9-custom-legend-text')\r\n                .attr('x', self.options.size + 5)\r\n                .attr('y', self.options.size)\r\n                .style('font-size', self.options.fontSize)\r\n                .style('font-weight', self.options.fontWeight)\r\n                .style('fill', self.options.fontColor)\r\n                .style('cursor', 'pointer')\r\n                // .attr('text-anchor', 'middle')\r\n                .text(function(d) { return self.chart.chartType == \"bar\" ? d.group : d.name; });\r\n\r\n            //caculate position for legend\r\n            var getSize = function(item) { \r\n                return item.getBoundingClientRect() \r\n            };\r\n            var getXY = function(item) {\r\n                var xy = d3.select(item).attr('transform').split(','); \r\n                return {\r\n                    x: parseFloat(xy[0].replace('translate(', '')), \r\n                    y: parseFloat(xy[1].replace(')', ''))\r\n                }; \r\n            };\r\n\r\n            var r = 0; // current row\r\n            var items = self.chart.svg.selectAll(\".c9-custom-legend-item\")[0];\r\n            var itemHeight = getSize(items[0]).height;\r\n            var numItemsCol = Math.floor((self.maxHeight - self.options.margin[0] - self.options.margin[2]) / (itemHeight + self.options.space));\r\n            \r\n            if (self.options.space > itemHeight) numItemsCol++;\r\n            \r\n            var maxWidthCol = new Array(Math.floor(items.length / numItemsCol));\r\n\r\n            items.forEach(function (i, n) {\r\n                var pos = Math.floor(n / numItemsCol);\r\n                var width = getSize(i).width;\r\n                if (maxWidthCol[pos] == undefined || width > maxWidthCol[pos]) maxWidthCol[pos] = width;\r\n            });\r\n\r\n            if  (self.options.position == \"bottom\"){\r\n                self.item.attr(\"transform\", function(d, i) {\r\n                    if (i > 0) {\r\n                        var item  = items[i];\r\n                        var preItem  = items[i - 1];\r\n                        var newR = Math.floor((getXY(preItem).x + getSize(preItem).width + self.options.space + getSize(item).width + self.options.margin[1]) / self.maxWidth);\r\n                        if (newR > 0) r++;\r\n                        return \"translate(\" + (newR > 0 ? self.options.margin[3] : getXY(preItem).x + getSize(preItem).width + self.options.space) + \",\" + (self.maxHeight - self.options.margin[0] - itemHeight - r * (itemHeight + self.options.space)) + \")\";\r\n                    } else {\r\n                        return \"translate(\" + self.options.margin[3] + \",\" + (self.maxHeight - self.options.margin[0] - itemHeight) + \")\";\r\n                    }\r\n                });\r\n            } else if (self.options.position == \"left\") {\r\n                self.item.attr(\"transform\", function(d, i) {\r\n                    var pos = Math.floor(i / numItemsCol);\r\n\r\n                    if (i > 0) {\r\n                        var prePos = Math.floor((i - 1) / numItemsCol);\r\n                        var item  = items[i];\r\n                        var preItem  = items[i - 1];\r\n                        return \"translate(\" + (pos > prePos ? (maxWidthCol[pos] + self.options.space + getXY(preItem).x) : getXY(preItem).x) + \",\" + (pos > prePos ? self.options.margin[0] : getXY(preItem).y + getSize(preItem).height + self.options.space) + \")\";\r\n                    }\r\n                    else\r\n                        return \"translate(\" + self.options.margin[3] + \",\" + self.options.margin[0] + \")\";\r\n                });\r\n            } else if (self.options.position == \"right\") {\r\n                self.item.attr(\"transform\", function(d, i) {\r\n                    var pos = Math.floor(i / numItemsCol);\r\n                    if (i > 0) {\r\n                        var prePos = Math.floor((i - 1) / numItemsCol);\r\n                        var item  = items[i];\r\n                        var preItem  = items[i - 1];\r\n                        return \"translate(\" + (pos > prePos ? (getXY(preItem).x - self.options.space - maxWidthCol[pos]) : getXY(preItem).x) + \",\" + (pos > prePos ? self.options.margin[0] : getXY(preItem).y + getSize(preItem).height + self.options.space) + \")\";\r\n                    }\r\n                    else\r\n                        return \"translate(\" + (self.maxWidth - self.options.margin[3] - maxWidthCol[pos]) + \",\" + self.options.margin[0] + \")\";\r\n                });\r\n            } else {\r\n                self.item.attr(\"transform\", function(d, i) {\r\n                    if (i > 0) {\r\n                        var item  = items[i];\r\n                        var preItem  = items[i - 1];\r\n                        var newR = Math.floor((getXY(preItem).x + getSize(preItem).width + self.options.space + getSize(item).width + self.options.margin[1]) / self.maxWidth);\r\n                        if (newR > 0) r++;\r\n                        \r\n                        return \"translate(\" + (newR > 0 ? self.options.margin[3] : (getXY(preItem).x + getSize(preItem).width + self.options.space)) + \",\" + (self.options.margin[0] + r * (itemHeight + self.options.space)) + \")\";\r\n                    }\r\n                    else\r\n                        return \"translate(\" + self.options.margin[3] + \",\" + self.options.margin[0] + \")\";\r\n                });\r\n            }\r\n            \r\n            // if (self._legendBox && legendDomain.length > 0) {\r\n            //     var box = legendContainer[0][0].getBBox();\r\n            //     legendBox.attr(\"class\", \".c9-custom-legend.c9-custom-legend-box\")\r\n            //         .attr(\"x\", 0)\r\n            //         .attr(\"y\", 0)\r\n            //         .attr(\"width\", box.width + self._legendMargin[1] + self._legendMargin[3])\r\n            //         .attr(\"height\", box.height + self._legendMargin[2] + self._legendMargin[0])\r\n            //         .style(\"fill\", \"none\")\r\n            //         .style(\"stroke\", color);\r\n            // }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n\r\n        self.update(self.chart.dataTarget);\r\n    }\r\n\r\n    /**\r\n     * Update interaction event dispatchers for legend\r\n     * For: Donut Chart, Pie Chart\r\n     */\r\n    updateInteractionForLineChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        var hoverOptions        = chart.hover.options,\r\n            hoverEnable         = chart.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = chart.click.callback;\r\n\r\n        self.itemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, item);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.attr('data-enable') == 'false') {\r\n                    selector.attr('data-enable', true);\r\n                    selector.style('opacity', '1');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.attr('data-enable', false);\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                // update line\r\n                var newData = [];\r\n                chart.dataTarget.forEach(function(_data) {\r\n                    if (_data['data-ref'] == item['data-ref']) _data.enable = enable;\r\n                    if (_data.enable) newData.push(_data);\r\n                });\r\n\r\n                chart.updateDomain(newData);\r\n                chart.axis.update(chart.x, chart.y, 750);\r\n                chart.update(newData);\r\n\r\n                // Update subchart\r\n                if (chart.options.subchart.show) {\r\n                    chart.subChartX.domain(chart.x.domain());\r\n                    chart.subChartY.domain(chart.y.domain());\r\n                    chart.svg.select('.c9-subchart-custom .c9-subchart-axis').transition().duration(750).call(chart.subChartXAxis);\r\n                    chart.updateSubChart(newData);\r\n                }\r\n\r\n                // Update overlay to make it at the bottom of structure\r\n                chart.updateOverlay();\r\n                chart.updateInteraction();\r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n\r\n                // Add pointer to cursor and make it lighten\r\n                // legendSelector.style('cursor', 'pointer');\r\n                self.lightenLegendItem(legendSelector);\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n\r\n                // Add pointer to cursor\r\n                // legendSelector.style('cursor', 'pointer');\r\n                self.normalizeLegendItem(legendSelector);\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.options.show) {\r\n            self.item.on(self.itemEventFactory);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update interaction event dispatchers for legend\r\n     * For: Donut Chart, Pie Chart\r\n     */\r\n    updateInteractionForDonutPieChart(chart, path, pie, currentData, arc) {\r\n\r\n        var self = this;\r\n\r\n        var hoverOptions        = chart.hover.options,\r\n            hoverEnable         = chart.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = chart.click.callback;\r\n\r\n        var chartType = chart.chartType;\r\n\r\n        var chartInnerBefore    = chartType == 'pie' ?  0 : chart.options.innerRadius,\r\n            chartOuterBefore    = chartType == 'pie' ?  chart.options.radius : chart.options.outerRadius,\r\n            chartInnerAfter     = chartType == 'pie' ?  0 : chart.options.innerRadius,\r\n            chartOuterAfter     = chartType == 'pie' ?  chart.options.radius * 1.2 : chart.options.outerRadius * 1.2;\r\n\r\n        self.itemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, item);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.attr('data-enable') == 'false') {\r\n                    selector.attr('data-enable', true);\r\n                    selector.attr('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.attr('data-enable', false);\r\n                    selector.attr('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                /*----------  Reset opacity after click  ----------*/\r\n                \r\n                self.item.each(function() {\r\n                    if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n\r\n                chart.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== item['data-ref']) {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n                /*----------  End Reset opacity after click  ----------*/\r\n                \r\n\r\n                chart.pie.value(function(d) {\r\n                    if (d[\"data-ref\"] == item[\"data-ref\"]) d.enable = enable;\r\n                    return (d.enable) ? d.value : 0;\r\n                });\r\n\r\n                path = path.data(chart.pie(dataSet));\r\n\r\n                path.transition()\r\n                    .duration(500)\r\n                    .attrTween('d', function(d) {\r\n                        var interpolate = d3.interpolate(chart.currentData, d);\r\n                        // Returns an interpolator between the two arbitrary values a and b. \r\n                        // The interpolator implementation is based on the type of the end value b.\r\n                        chart.currentData = interpolate(0);\r\n                        return function(t) {\r\n                            return arc(interpolate(t));\r\n                        };\r\n                    })\r\n                    // Remove stroke when re-draw arcs to avoid duplicate strokes\r\n                    .attr('stroke', 'none');;\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                // legendSelector.style('cursor', 'pointer');\r\n                self.lightenLegendItem(legendSelector);\r\n\r\n                if (legendSelector.attr('data-enable')) {\r\n                    // For Legend\r\n                    self.item.each(function() {\r\n                        if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable')) {\r\n                            d3.select(this).attr('opacity', '0.3');\r\n                        }\r\n                    });\r\n\r\n                    // For Chart\r\n                    chart.selectAllPath().each(function(){\r\n                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\r\n                            d3.select(this).attr('opacity', '0.3');\r\n                        }\r\n                    });\r\n\r\n                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                    selector\r\n                        .transition()\r\n                            .duration(500)\r\n                            .ease('bounce')\r\n                            .attr('d', d3.svg.arc()\r\n                                .innerRadius(chartInnerAfter)\r\n                                .outerRadius(chartOuterAfter)\r\n                            );\r\n                }\r\n\r\n                \r\n\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                // legendSelector.style('cursor', 'pointer');\r\n                self.normalizeLegendItem(legendSelector);\r\n\r\n                // if (legendSelector.attr('data-enable') == 'true') {\r\n                    // For Legend\r\n                    self.item.each(function() {\r\n                        if (d3.select(this).attr('data-ref') !== item['data-ref'] && d3.select(this).attr('data-enable')) {\r\n                            d3.select(this).attr('opacity', '1.0');\r\n                        }\r\n                    });\r\n\r\n                    // For Chart\r\n                    chart.selectAllPath().each(function(){\r\n                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\r\n                            d3.select(this).attr('opacity', '1.0');\r\n                        }\r\n                    });\r\n\r\n                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                    selector\r\n                        .transition()\r\n                            .duration(500)\r\n                            .ease('bounce')\r\n                            .attr('d', d3.svg.arc()\r\n                                .innerRadius(chartInnerBefore)\r\n                                .outerRadius(chartOuterBefore)\r\n                            );\r\n                // }\r\n\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.options.show)\r\n            self.item.on(self.itemEventFactory);\r\n    }\r\n\r\n    /**\r\n     * Update interaction for barchart\r\n     * @param  {[type]} chart       [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    updateInteractionForBarChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        var hoverOptions        = chart.hover.options,\r\n            hoverEnable         = chart.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = chart.click.callback;\r\n\r\n        self.itemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, item);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                var enable = true,\r\n                    dataBackup = chart.dataTarget,\r\n                    dataSet = self.data;\r\n                var totalEnable = d3.sum(dataSet.map(function(d) {\r\n                    return (d.enable) ? 1 : 0;\r\n                }));\r\n\r\n                var enableSet = [];\r\n                var enableSetOld = [];\r\n                var data = [];\r\n                // Add pointer to cursor\r\n                // selector.style('cursor', 'pointer');\r\n\r\n                // If current selector is disabled, then turn it on back\r\n                // Else, set enable to false\r\n                if (selector.attr('data-enable') == 'false') {\r\n                    selector.attr('data-enable', 'true');\r\n                    selector.style('opacity', '1.0');\r\n                } else {\r\n                    if (totalEnable < 2) return;\r\n                    selector.attr('data-enable', 'false');\r\n                    selector.style('opacity', '0.1');\r\n                    enable = false;\r\n                }\r\n\r\n                //set current data for legend\r\n                self.data.forEach(function(d, i) {\r\n                    if (d.enable)\r\n                        enableSetOld.push(d.group);\r\n                    if (d.group == item.group)\r\n                        d.enable = enable;\r\n                    if (d.enable)\r\n                        enableSet.push(d.group);\r\n                });\r\n\r\n                dataBackup.forEach(function (d){\r\n                    var negElement = [];\r\n                    var posElement = [];\r\n                    d.forEach(function (s){\r\n                        enableSet.forEach(function (e, i) {\r\n                            if (e == s.group) {\r\n                                if (s.y0 < 0) negElement.push({e: s, s: i});\r\n                                else posElement.push({e: s, s: i})\r\n                            }\r\n                        });\r\n                    });\r\n                    if (!chart.isGroup) {\r\n                        if (negElement.length > 0) {\r\n                            if (negElement[0].e.y1 < 0) negElement[0].e.y1 = 0;\r\n                            for (var i = 1; i < negElement.length; i++) {\r\n                                negElement[i].e.y1 = negElement[i-1].e.y1 + negElement[i-1].e.y0;\r\n                            };\r\n                        }\r\n                        if (posElement.length > 0) {\r\n                            if (posElement[0].e.y1 - posElement[0].e.y0 != 0) posElement[0].e.y1 = posElement[0].e.y0;\r\n                            for (var i = 1; i < posElement.length; i++) {\r\n                                posElement[i].e.y1 = posElement[i-1].e.y1 + posElement[i].e.y0;\r\n                            };\r\n                        }\r\n                    }\r\n                    var element = new Array(negElement.length + posElement.length);\r\n                    for (var i = 0; i < negElement.length; i++) {\r\n                        element[negElement[i].s] = negElement[i].e;\r\n                    };\r\n                    for (var i = 0; i < posElement.length; i++) {\r\n                        element[posElement[i].s] = posElement[i].e;\r\n                    };\r\n                    data.push(element);\r\n                });\r\n\r\n                chart.updateLegendInteraction(data, enableSet, enableSetOld, item.group);\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                var selector = d3.select(this);\r\n                // selector.style('cursor', 'pointer');\r\n                self.lightenLegendItem(selector);\r\n\r\n                if (selector.attr('data-enable') == 'true')\r\n                    d3.selectAll('.c9-custom-bar>.c9-custom-rect')\r\n                        .filter(function (d){ return d['group-ref'] != item['group-ref']; })\r\n                        .attr('opacity', 0.3);\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n                var selector = d3.select(this);\r\n                // selector.style('cursor', 'pointer');\r\n                self.normalizeLegendItem(selector);\r\n\r\n                d3.selectAll('.c9-custom-bar>.c9-custom-rect')\r\n                    .filter(function (d){ return d['group-ref'] != item['group-ref']; })\r\n                    .attr('opacity', 1);\r\n            }\r\n        \r\n        };\r\n        if (self.options.show)\r\n            self.item.on(self.itemEventFactory);\r\n    }\r\n\r\n    lightenLegendItem(item) {\r\n        var self = this;\r\n\r\n        item.select('.c9-custom-legend-rect').attr('fill', function(d){ return Helper.shadeColor(0.5, d.color || d[0].color); });\r\n        item.select('.c9-custom-legend-text').style('fill', function(d){ return Helper.shadeColor(-0.5, self.options.fontColor); });\r\n    }\r\n\r\n    normalizeLegendItem(item) {\r\n        var self = this;\r\n\r\n        item.select('.c9-custom-legend-rect').attr('fill', function(d){ return d.color || d[0].color; });\r\n        item.select('.c9-custom-legend-text').style('fill', function(d){ return self.options.fontColor; });\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Legend.js\n **/","import Helper from '../../helper/C9.Helper';\r\n\r\nexport default class Table {\r\n    constructor(options, chart) {\r\n        var self = this;\r\n\r\n        var config = {\r\n            container: \"body\",\r\n            show: false,\r\n            headings: [\"Name\", \"Value\"],\r\n            style: \"default\", // || \"stripe\"\r\n            serial: true,\r\n            hover: {\r\n                enable: true,\r\n                callback: null\r\n            },\r\n            click: {\r\n                enable: true,\r\n                callback: null\r\n            }\r\n        };\r\n\r\n\r\n        self._options   = options;\r\n        self._chart     = chart;\r\n\r\n        self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get chart() {\r\n        return this._chart;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set data(arg) {\r\n        if (arg) {\r\n            this._data = arg;\r\n        }\r\n    }\r\n\r\n    set chart(arg) {\r\n        if (arg) {\r\n            this._chart = arg;\r\n        }\r\n    }\r\n\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n\r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n    }\r\n\r\n    update(data) {\r\n        var self = this;\r\n\r\n        if (self.chart.chartType == \"bar\" || self.chart.chartType == \"line\") {\r\n            //headings\r\n            if (self.options.headings.length < 3 && !data[0].value && data[0][0][\"group-ref\"] != undefined) \r\n                self.options.headings.push(\"Group\");\r\n\r\n            //data\r\n            self.data = [];\r\n            data.forEach(function(d) {\r\n                (Helper.isArray(d) ? d : d.value).forEach(function(b) {\r\n                    self.data.push(b);\r\n                })\r\n            });\r\n        } else {\r\n            self.data = data;\r\n        }\r\n\r\n        if (self.options.show) {\r\n            d3.selectAll('.c9-table').remove();\r\n            d3.selectAll('.c9-table-container').remove();\r\n\r\n            var headTbl = d3.select(self.options.container !== 'body' ? '#' + self.options.container : 'body')\r\n                            .append(\"table\")\r\n                                .attr('class', 'c9-table c9-table-header'),\r\n                thead = headTbl.append(\"thead\"),\r\n                bodyTbl = d3.select(self.options.container !== 'body' ? '#' + self.options.container : 'body')\r\n                                .append(\"div\")\r\n                                .attr('class', 'c9-table-container')\r\n                                    .append(\"table\")\r\n                                    .attr('class', function() {\r\n                                        return self.getTableStyle();\r\n                                    }),\r\n                tbody = bodyTbl.append(\"tbody\");\r\n\r\n            // Append serial no heading\r\n            // Bind each statistic to a line of the table\r\n            // Show serial no.\r\n            var hRows = thead.append(\"tr\");\r\n\r\n            if (self.options.serial) {\r\n                hRows.append(\"th\")\r\n                    .text(\"#\");\r\n            }\r\n\r\n            hRows.selectAll(\"thead\")\r\n                .data(self.options.headings)\r\n                .enter()\r\n                .append(\"th\")\r\n                    .text(function(d) {\r\n                        return d;\r\n                    });\r\n\r\n            // Bind each statistic to a line of the table\r\n            // Show serial no.\r\n            var bRows = tbody\r\n                .selectAll(\"tr\")\r\n                .data(self.data)\r\n                    .enter()\r\n                        .append(\"tr\")\r\n                        .attr(\"data-ref\", function (d){ return d[\"data-ref\"] });\r\n\r\n            if (self.options.serial) {\r\n                bRows.append(\"td\")\r\n                    .text(function(d, i) {\r\n                        return i + 1;\r\n                    });\r\n            }\r\n\r\n            // Add statistic names to each row\r\n            bRows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.name;\r\n                    });\r\n\r\n            // Add values to each row\r\n            bRows.append(\"td\")\r\n                    .text(function(d) {\r\n                        return d.value || d.y0 || d.valueY;\r\n                    });\r\n\r\n            // Add group if chart is bar chart\r\n            if (self.chart.chartType == \"bar\" && self.options.headings.length < 3 && !data[0].value && data[0][0][\"group-ref\"] != undefined)\r\n                bRows.append(\"td\")\r\n                        .text(function(d) {\r\n                            return d.group;\r\n                        });\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n\r\n        self.update(self.chart.dataTarget);\r\n    }\r\n\r\n    updateInteractionForBarChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        var hoverOptions        = chart.hover.options,\r\n            hoverEnable         = chart.hover.enable,\r\n            onMouseOverCallback = hoverOptions.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = chart.click.callback;\r\n\r\n        self.itemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, item);\r\n                }\r\n                \r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                if (!item) return;\r\n\r\n                var selector = d3.select(this);\r\n                selector.style('cursor', 'pointer');\r\n                // if (selector.attr('data-enable') == 'true')\r\n                    d3.selectAll('.c9-custom-bar>.c9-custom-rect')\r\n                        .filter(function (d){ return d['data-ref'] != item['data-ref']; })\r\n                        .attr('opacity', 0.3);\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n                if (!item) return;\r\n                d3.select(this).style('cursor', 'pointer');\r\n                d3.selectAll('.c9-custom-bar>.c9-custom-rect')\r\n                    .filter(function (d){ return d['data-ref'] != item['data-ref']; })\r\n                    .attr('opacity', 1);\r\n            }\r\n        \r\n        };\r\n        if (self.options.show)\r\n            self.selectAllRow().on(self.itemEventFactory);\r\n    }\r\n\r\n    updateInteractionForDonutPieChart(chart) {\r\n\r\n        var self = this;\r\n\r\n        var hoverOptions        = chart.hover.options,\r\n            hoverEnable         = chart.hover.enable,\r\n            onMouseOverCallback = hoverOptions.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = chart.click.callback;\r\n\r\n        var chartType = chart.chartType;\r\n\r\n        var chartInnerBefore    = chartType == 'pie' ?  0 : chart.options.innerRadius,\r\n            chartOuterBefore    = chartType == 'pie' ?  chart.options.radius : chart.options.outerRadius,\r\n            chartInnerAfter     = chartType == 'pie' ?  0 : chart.options.innerRadius,\r\n            chartOuterAfter     = chartType == 'pie' ?  chart.options.radius * 1.2 : chart.options.outerRadius * 1.2;\r\n        self.itemEventFactory = {\r\n\r\n            'click': function(item) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, item);\r\n                }\r\n\r\n            },\r\n\r\n            'mouseover': function(item) {\r\n                if (!item)\r\n                    return;\r\n\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n                // if (legendSelector.attr('enable') == 'true') {\r\n\r\n                    // For Chart\r\n                    chart.selectAllPath().each(function(){\r\n                        if (d3.select(this).attr('data-ref') !== item['data-ref']) {\r\n                            d3.select(this).attr('opacity', '0.3');\r\n                        }\r\n                    });\r\n\r\n                    var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                    selector\r\n                        .transition()\r\n                            .duration(500)\r\n                            .ease('bounce')\r\n                            .attr('d', d3.svg.arc()\r\n                                .innerRadius(chartInnerAfter)\r\n                                .outerRadius(chartOuterAfter)\r\n                            );\r\n                // }\r\n\r\n            },\r\n\r\n            'mouseout': function(item) {\r\n                if (!item)\r\n                    return;\r\n                \r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, item);\r\n                }\r\n\r\n                var legendSelector = d3.select(this);\r\n                // Add pointer to cursor\r\n                legendSelector.style('cursor', 'pointer');\r\n\r\n                chart.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== item['data-ref']) {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n\r\n                var selector = d3.select(\"path[data-ref='\" + item['data-ref'] + \"']\");\r\n\r\n                selector\r\n                    .transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        );\r\n            }\r\n        \r\n        };\r\n\r\n        if (self.options.show)\r\n            self.selectAllRow().on(self.itemEventFactory);\r\n    }\r\n\r\n    selectAllRow(){\r\n        return d3.selectAll(\".c9-table tr\");\r\n    }\r\n\r\n    getTableStyle() {\r\n        var self = this;\r\n\r\n        if (self.options.style === 'default') {\r\n            return 'c9-table c9-table-body';\r\n        } else if (self.options.style === 'stripe') {\r\n            return 'c9-table c9-table-body c9-stripe';\r\n        }\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Table.js\n **/","import Helper from '../../helper/C9.Helper';\r\n\r\nexport default class Title {\r\n    constructor(options, chart) {\r\n        var self = this;\r\n\r\n        var config = {\r\n            show      : true,\r\n            text      : \"Sample Chart\",\r\n            position  : 'top',\r\n            fontSize  : \"14px\"\r\n        };\r\n\r\n        self._options  = options;\r\n        self._chart    = chart;\r\n\r\n        self.updateConfig(config);\r\n            \r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get chart() {\r\n        return this._chart;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/ \r\n    set chart(arg) {\r\n        if (arg) {\r\n            this._chart = arg;\r\n        }\r\n    }\r\n\r\n    set options(arg) {\r\n        if (arg) {\r\n            this._options = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    updateConfig(config) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n\r\n        if (self.options.show) {\r\n            var text = self.chart.svg\r\n                            .append(\"g\")\r\n                                .attr('class', 'c9-custom-title c9-custom-title-container')\r\n                            .append(\"text\")\r\n                                .attr(\"class\", \"c9-custom-title c9-custom-title-text\");\r\n\r\n            // Get title self.chart.width: text.node().getComputedTextLength()           \r\n            text.attr(\"x\", (((self.chart.width - text.node().getComputedTextLength()) / 2)))           \r\n            // text.attr(\"x\", (((self.chart.width - 200) / 2)))           \r\n                .attr(\"y\", self.setYLocation(self.chart.height, self.chart.margin))\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .style(\"font-size\", self.options.fontSize)  \r\n                .text(self.options.text);\r\n        }\r\n    }\r\n\r\n    setYLocation(height, margin) {\r\n        var self = this;\r\n        \r\n        if (self.options.position === 'top') {\r\n            return (margin.top / 2);\r\n        } else if (self.options.position === 'bottom') {\r\n            return (height - margin.bottom / 2);\r\n        }\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/utils/C9.Title.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\nimport Tooltip from './utils/C9.Tooltip';\r\n\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class BarChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        // var config = {\r\n        //     // barWidth: undefined,\r\n        //     isLogaric: false,\r\n        // };\r\n\r\n        self.config = {\r\n            // barWidth: undefined,\r\n            isLogaric: false,\r\n        };\r\n\r\n        // self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    // get barWidth() {\r\n    //     return this._barWidth;\r\n    // }\r\n\r\n    get groupType() {\r\n        return this._groupType;\r\n    }\r\n    \r\n    get xGroup() {\r\n        return this._xGroup;\r\n    }\r\n\r\n    get groupNames() {\r\n        return this._groupNames;\r\n    }\r\n\r\n    get isGroup() {\r\n        return this._isGroup;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    // set barWidth(arg) {\r\n    //     if (arg) {\r\n    //         this._barWidth = arg;\r\n    //     }\r\n    // }\r\n\r\n    set groupType(arg) {\r\n        if (arg) {\r\n            this._groupType = arg;\r\n        }\r\n    }\r\n\r\n    set xGroup(arg) {\r\n        if (arg) {\r\n            this._xGroup = arg;\r\n        }\r\n    }\r\n\r\n    set groupNames(arg) {\r\n        if (arg) {\r\n            this._groupNames = arg;\r\n        }\r\n    }\r\n\r\n    set isGroup(arg) {\r\n        if (arg) {\r\n            this._isGroup = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Init Bar Chart Config\r\n     */\r\n    updateConfig(config, callback){\r\n        super.updateConfig(config);\r\n\r\n        var self  = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.chartType      = \"bar\";\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        // TESTING\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n\r\n            var barChartType = da.getDataTypeForBarChart();\r\n            if (barChartType != \"single\") {\r\n                self._groupNames    = da.groups.length > 0 ? da.groups : da.stacks;  //define group names use for showing legend\r\n                self._isGroup       = barChartType == \"group\";\r\n            }\r\n\r\n            var width        = self.width - self.margin.left - self.margin.right,\r\n                height       = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n            var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\r\n                y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\r\n\r\n            var minMax = Helper.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\r\n\r\n            x.domain(self.dataTarget.map(function(d) {\r\n                return d[0].name;\r\n            }));\r\n\r\n            y.domain([minMax.min, minMax.max]);\r\n\r\n            /******** Handle for grouped, stacked bar chart ********/\r\n            if (self.groupNames) {\r\n                self.xGroup = d3.scale.ordinal();\r\n                self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n            }\r\n            \r\n            /**********************************************/\r\n\r\n            // Make flexible width according to barWidth\r\n            // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\r\n            self.x              = x;\r\n            self.y              = y;\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n\r\n\r\n        // var da = new DataAdapter(dataOption);\r\n        // self.dataTarget = da.getDataTarget(self.chartType);\r\n        // console.log(self.dataTarget);\r\n        // self.dataSource = da.dataSource;\r\n\r\n        // var barChartType = da.getDataTypeForBarChart();\r\n        // if (barChartType != \"single\") {\r\n        //     self._groupNames    = da.groups.length > 0 ? da.groups : da.stacks;  //define group names use for showing legend\r\n        //     self._isGroup       = barChartType == \"group\";\r\n        // }\r\n\r\n        // var width        = self.width - self.margin.left - self.margin.right,\r\n        //     height       = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        // // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n        // var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\r\n        //     y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\r\n\r\n        // var minMax = Helper.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\r\n\r\n        // x.domain(self.dataTarget.map(function(d) {\r\n        //     return d[0].name;\r\n        // }));\r\n\r\n        // y.domain([minMax.min, minMax.max]);\r\n\r\n        // /******** Handle for grouped, stacked bar chart ********/\r\n        // if (self.groupNames) {\r\n        //     self.xGroup = d3.scale.ordinal();\r\n        //     self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n        // }\r\n        \r\n        // /**********************************************/\r\n\r\n        // // Make flexible width according to barWidth\r\n        // // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\r\n        // self.x              = x;\r\n        // self.y              = y;\r\n    }\r\n\r\n    /**\r\n     * Update Chart Data Config\r\n     * Notes: Merge Deep change order of Config and Option\r\n     * ---------------------------------------------------\r\n     */\r\n    updateDataConfig(dataCfg, callback){\r\n        var self  = this;\r\n\r\n        self.options = Helper.mergeDeep(self.options, dataCfg);\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n\r\n            var barChartType = da.getDataTypeForBarChart();\r\n            if (barChartType != \"single\") {\r\n                self._groupNames    = da.groups.length > 0 ? da.groups : da.stacks;  //define group names use for showing legend\r\n                self._isGroup       = barChartType == \"group\";\r\n            }\r\n\r\n            var width        = self.width - self.margin.left - self.margin.right,\r\n                height       = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            // .1 to make outerPadding, according to: https://github.com/d3/d3/wiki/Ordinal-Scales\r\n            var x = d3.scale.ordinal().rangeRoundBands([0, width], .1),\r\n                y = self.options.isLogaric ? d3.scale.log().range([height, 0]) : d3.scale.linear().range([height, 0]);\r\n\r\n            var minMax = Helper.getMinMax(self.dataTarget, barChartType, self.options.isLogaric);\r\n\r\n            x.domain(self.dataTarget.map(function(d) {\r\n                return d[0].name;\r\n            }));\r\n\r\n            y.domain([minMax.min, minMax.max]);\r\n\r\n            /******** Handle for grouped, stacked bar chart ********/\r\n            if (self.groupNames) {\r\n                self.xGroup = d3.scale.ordinal();\r\n                self.xGroup.domain(self.groupNames).rangeRoundBands([0, x.rangeBand()]);\r\n            }\r\n            \r\n            /**********************************************/\r\n\r\n            // Make flexible width according to barWidth\r\n            // self.barWidth       = self.options.barWidth  ||  x.rangeBand();\r\n            self.x              = x;\r\n            self.y              = y;\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    /**\r\n     * Update chart based on data\r\n     * @param  {[type]} data [description]\r\n     */\r\n    update(data) {\r\n        var self = this;\r\n\r\n        self.body.selectAll(\".c9-chart-bar.c9-custom-rect\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data([]).exit().remove();\r\n\r\n        var color = self.colorRange,\r\n            x     = self.x,\r\n            y     = self.y,\r\n            xGroup= self.xGroup;\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".c9-chart-bar.c9-custom-bar\")\r\n                    .data(data)\r\n                    .enter()\r\n                        .append(\"g\")\r\n                        .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                        .attr(\"transform\", function(d) { return \"translate(\" + x(d[0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-chart-bar.c9-custom-rect\")\r\n            .data(function(d) { return d; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-chart-bar c9-custom-rect\")\r\n            .style(\"fill\", function (d, i) { return d.color || color(i); })\r\n            .attr(\"x\", function(d) { return self.isGroup ? xGroup(d.group) : undefined; })\r\n            .attr(\"y\", function(d) { return y(d.y1); })\r\n            .attr(\"width\", function(d) { return self.isGroup ? xGroup.rangeBand() : x.rangeBand(); })\r\n            .attr(\"height\", function(d) { return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : y(0) - y(Math.abs(d.y0)); });\r\n            \r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Update Interaction with Legend\r\n     * @param  {[type]} data          [description]\r\n     * @param  {[type]} groupNames    [description]\r\n     * @param  {[type]} groupNamesOld [description]\r\n     * @param  {[type]} newLabel      [description]\r\n     */\r\n    updateLegendInteraction(data, groupNames, groupNamesOld, newLabel){\r\n        var self = this;\r\n        var type = self.groupType;\r\n\r\n        var y = self.y;\r\n        var minMax = Helper.getMinMax(data, self.isGroup == false ? \"stack\" : null, self.options.isLogaric);\r\n        y.domain([minMax.min, minMax.max]);\r\n        self.axis.update(null, y, 750);\r\n        \r\n        var xGroup = d3.scale.ordinal();\r\n        xGroup.domain(groupNames).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var xGroupOld = d3.scale.ordinal();\r\n        xGroupOld.domain(groupNamesOld).rangeRoundBands([0, self.x.rangeBand()]);\r\n\r\n        var midGroup = undefined;\r\n        //check add new label in the middle\r\n        if (groupNames.length > groupNamesOld.length && 0 < groupNames.indexOf(newLabel) && groupNames.indexOf(newLabel) < groupNames.length - 1 )\r\n            midGroup = groupNamesOld[groupNames.indexOf(newLabel)];\r\n\r\n        // self.body.selectAll(\".c9-custom-rect\").transition().duration(750).attr(\"height\", 0).remove();\r\n        self.body.selectAll(\".c9-chart-bar.c9-custom-rect\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-chart-bar.c9-custom-bar\").data([]).exit().remove();\r\n\r\n        var bar = self.body\r\n                    .selectAll(\".c9-chart-bar.c9-custom-bar\")\r\n                    .data(data)\r\n                    .enter()\r\n                    .append(\"g\")\r\n                    .attr(\"class\", \"c9-chart-bar c9-custom-bar\")\r\n                    .attr(\"transform\", function (d, i) { return \"translate(\" + self.x(self.dataTarget[i][0].name) + \",0)\"; });\r\n\r\n        var bars = bar.selectAll(\".c9-custom-rect\")\r\n            .data(function(d) { return d; });\r\n\r\n        bars.enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"c9-chart-bar c9-custom-rect\")\r\n            .style(\"fill\", function(d) { return d.color; })\r\n            .attr(\"x\", function(d) {\r\n                // use for stack\r\n                if (!self.isGroup) return undefined;\r\n                // use for group\r\n                // group member positioning at the end of groups, so its x is the position of right edge of bar\r\n                if (groupNames.length > groupNamesOld.length && d.group == newLabel && groupNames.indexOf(newLabel) == groupNames.length - 1)\r\n                    return self.x.rangeBand();\r\n                return midGroup ? d.group == newLabel ? xGroupOld(midGroup) : xGroupOld(d.group) : xGroupOld(d.group);\r\n            })\r\n            .attr(\"y\", function(d) { return self.isGroup ? y(d.y1) : self.options.isLogaric ? y(y.domain()[1]) : y(0); })\r\n            .attr(\"width\", function(d) {\r\n                return !self.isGroup ? self.x.rangeBand() : d.group == newLabel ? 0 : xGroupOld.rangeBand();\r\n            })\r\n            .attr(\"height\", function(d) { return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : self.isGroup ? y(0) - y(Math.abs(d.y0)) : 0; });\r\n\r\n        bars.transition().duration(750)\r\n            .attr(\"x\", function(d) { return !self.isGroup ? undefined : xGroup(d.group); })\r\n            .attr(\"width\", function(d) { return !self.isGroup ? self.x.rangeBand() : xGroup.rangeBand(); })\r\n            .attr(\"y\", function(d) { return y(d.y1); })\r\n            .attr(\"height\", function(d) { return self.options.isLogaric ? y(y.domain()[0]) - y(d.y0) : y(0) - y(Math.abs(d.y0)); });\r\n            \r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Retrieve value from upper and lower bounds of each stack\r\n     * @param  {String} lower Lower bound of value\r\n     * @param  {String} upper Upper bound of value\r\n     * @return {String}       Value to return\r\n     */\r\n    retrieveValue(lower, upper) {\r\n        var d1 = Math.floor(lower) === lower ? 0 : lower.toString().split(\".\")[1].length;\r\n        var d2 = Math.floor(upper) === upper ? 0 : upper.toString().split(\".\")[1].length;\r\n        return d1 > d2 ? (upper - lower).toFixed(d1) : (upper - lower).toFixed(d2);\r\n    }\r\n    \r\n    /**\r\n     * Select all bars as type RECT in Bar Chart via its CLASS\r\n     */\r\n    selectAllBar() {\r\n        var self = this;\r\n\r\n        return self.body.selectAll('.c9-custom-rect');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            selector        = self.selectAllBar(),\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback  = self.click.callback;\r\n\r\n        var tooltip = new Tooltip(self.options.tooltip);\r\n\r\n        // Update Event Factory\r\n        self.eventFactory = {\r\n            'click': function(d) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, d);\r\n                }\r\n            },\r\n            'mouseover': function(d) {\r\n                if (!hoverEnable) return;\r\n                \r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, d);\r\n                }\r\n\r\n                // For table\r\n                if (self.options.table.show) {\r\n                    var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\r\n                    tr.filter(function(i) { return i['data-ref'] != d['data-ref'] }).selectAll('td').style('opacity', '0.5');\r\n                    var selectedItem = tr.filter(function(i) { return i['data-ref'] == d['data-ref'] });\r\n                    //set its style and scroll to its pos\r\n                    selectedItem.selectAll('td').style('opacity', '1');\r\n                    Helper.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\r\n                }\r\n\r\n                d3.select(this).style(\"fill\", function (d, i) { return self.getLightenColor(d.color || color(i)); });\r\n\r\n                tooltip.draw(d, self, 'mouseover');\r\n            },\r\n            'mouseout': function(d) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, d);\r\n                }\r\n\r\n                // For Table\r\n                if (self.options.table.show)\r\n                    d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\r\n\r\n                d3.select(this).style(\"fill\", function (d, i) { return d.color || color(i); });\r\n\r\n                tooltip.draw(d, self, 'mouseout');\r\n            }\r\n        }\r\n\r\n        selector.on(self.eventFactory);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n    \r\n\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     */\r\n    on(eventType, callback) {\r\n        super.on(eventType, callback);\r\n        \r\n        var self = this;\r\n        var selector    = self.selectAllBar();\r\n\r\n        // Update Event Factory\r\n        let eventFactory = {\r\n            'click.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseover.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseout.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventName = eventType + '.event';\r\n\r\n        selector.on(eventName, eventFactory[eventName]);\r\n    }\r\n    \r\n    /**\r\n     * [Main draw function of Bar Chart]\r\n     * @return {[type]} [description]\r\n     */\r\n    draw() {\r\n        super.draw();\r\n\r\n        var self = this;\r\n\r\n        // var axis    = new Axis(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\r\n        // var title   = new Title(self.options.title, self);\r\n        // var legend  = new Legend(self.options.legend, self, self.dataTarget);\r\n        // var table   = new Table(self.options.table, self, self.dataTarget);\r\n\r\n        // self.axis = axis;\r\n        // self.title = title;\r\n        // self.table = table;\r\n        // self.legend = legend;\r\n\r\n        // TESTING\r\n        self.updateConfig(self.config, function(data) {\r\n            var axis    = new Axis(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\r\n            var title   = new Title(self.options.title, self);\r\n            var legend  = new Legend(self.options.legend, self, self.dataTarget);\r\n            var table   = new Table(self.options.table, self, self.dataTarget);\r\n            self.axis = axis;\r\n            self.title = title;\r\n            self.table = table;\r\n            self.legend = legend;\r\n\r\n            // Draw axis\r\n            // self.axis.draw();\r\n            \r\n            // Draw title\r\n            self.title.draw();\r\n            // Update Chart based on dataTarget\r\n            self.update(data);\r\n            self.updateInteraction();\r\n\r\n            // Draw legend\r\n            self.legend.draw();\r\n            self.legend.updateInteractionForBarChart(self);\r\n\r\n            // Draw table\r\n            self.table.draw();\r\n            self.table.updateInteractionForBarChart(self);\r\n        });\r\n\r\n\r\n        // // Draw axis\r\n        // self.axis.draw();\r\n        \r\n        // // Draw title\r\n        // self.title.draw();\r\n\r\n        // // Update Chart based on dataTarget\r\n        // self.update(self.dataTarget);\r\n        // self.updateInteraction();\r\n\r\n        // // Draw legend\r\n        // self.legend.draw();\r\n        // self.legend.updateInteractionForBarChart(self);\r\n\r\n        // // Draw table\r\n        // self.table.draw();\r\n        // self.table.updateInteractionForBarChart(self);\r\n    }\r\n\r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        super.setOption(key, value);\r\n\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(newData, newDataConfig) {\r\n        var self = this;\r\n\r\n        var newCfg = {};\r\n\r\n        if (!Helper.isEmpty(newDataConfig)) {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n                keys: newDataConfig,\r\n            };\r\n\r\n        } else {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n            };\r\n\r\n        }\r\n\r\n        // Update Chart\r\n        self.updateDataConfig(newCfg, function(data) {\r\n            self.update(data);\r\n\r\n            // Update Axis\r\n            self.axis.update(self.x, self.y, 100);\r\n\r\n            // Update Legend\r\n            self.legend.update(data);\r\n            self.legend.updateInteractionForBarChart(self);\r\n\r\n            // Update Table\r\n            self.table.update(data);\r\n        });\r\n        \r\n    }\r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.BarChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\nimport Tooltip from './utils/C9.Tooltip';\r\n\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class DonutChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        var R = Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2;\r\n        self.config = {\r\n            outerRadius: R,\r\n            innerRadius: R > 80 ? R - 80 : R - 40,\r\n            // showText: true // show/hide text on middle or each donut\r\n        };\r\n\r\n        // self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set pie(arg) {\r\n        if (arg) {\r\n            this._pie = arg;\r\n        }\r\n    }\r\n\r\n    set arc(arg) {\r\n        if (arg) {\r\n            this._arc = arg;\r\n        }\r\n    }\r\n\r\n    set currentData(arg) {\r\n        if (arg) {\r\n            this._currentData = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig(config, callback) {\r\n        super.updateConfig(config);\r\n\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.chartType      = 'donut';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n            \r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateDataConfig(dataCfg, callback) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(self.options, dataCfg);\r\n\r\n        self.chartType      = 'donut';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n            \r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update Donut Chart based on new data\r\n     * @param  {[type]} data [description]\r\n     */\r\n    update(data) {\r\n        var self = this;\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange;\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .outerRadius(self.options.outerRadius)\r\n                    .innerRadius(self.options.innerRadius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        self.body.selectAll(\".c9-chart-donut.c9-custom-arc-container\").data([]).exit().remove();\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart-donut c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-donut.c9-custom-arc')\r\n                        .data(self.pie(data)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-donut c9-custom-arc');\r\n\r\n        // Append main path contains donut\r\n        // TODO: add a unique class to allow Legend could find selected donut/pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-donut c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .each(function(d) { self.currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-donut c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n        \r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                // .selectAll('g')\r\n                    .selectAll('path.c9-chart-donut.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self    = this,\r\n            selector= self.selectAllPath(),\r\n            width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange,\r\n            chartInnerBefore = self.options.innerRadius,\r\n            chartOuterBefore = self.options.outerRadius,\r\n            chartInnerAfter = self.options.innerRadius,\r\n            chartOuterAfter = self.options.outerRadius * 1.2;\r\n\r\n        var hoverOptions        = self.hover.options,\r\n            hoverEnable         = self.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback  = self.click.callback;\r\n\r\n        var tooltip = new Tooltip(self.options.tooltip);\r\n\r\n        // Main Event Dispatch for paths in donut chart\r\n        self._eventFactory = {\r\n            'click': function(d, i) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, d);\r\n                }\r\n            },\r\n\r\n            'mouseover': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, d);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                selector.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        );\r\n\r\n                // For legend\r\n                if (self.options.legend.show)\r\n                    self.legend.item.each(function() {\r\n                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\r\n                            d3.select(this).attr('opacity', '0.3');\r\n                        }\r\n                    });\r\n\r\n                // For Table\r\n                if (self.options.table.show) {\r\n                    var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\r\n                    tr.filter(function(i) { return i['data-ref'] != d.data['data-ref'] }).selectAll('td').style('opacity', '0.5');\r\n                    var selectedItem = tr.filter(function(i) { return i['data-ref'] == d.data['data-ref'] });\r\n                    //set its style and scroll to its pos\r\n                    selectedItem.selectAll('td').style('opacity', '1');\r\n                    Helper.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\r\n                }\r\n\r\n                // For Chart\r\n                self.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\r\n                        d3.select(this).attr('opacity', '0.3');\r\n                    }\r\n                });\r\n\r\n                // For Tooltip\r\n                tooltip.draw(d, self, 'mouseover');\r\n            },\r\n            \r\n            'mouseout': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, d);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                selector.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        );\r\n\r\n                // For legend\r\n                if (self.options.legend.show)\r\n                self.legend.item.each(function() {\r\n                    if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable') == 'true') {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n\r\n                // For Table\r\n                if (self.options.table.show)\r\n                    d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\r\n                \r\n                // For Chart\r\n                self.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n\r\n                // For Tooltip\r\n                tooltip.draw(d, self, 'mouseout');\r\n            }\r\n\r\n        };\r\n\r\n        selector.on(self._eventFactory);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n    \r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    on(eventType, callback) {\r\n        super.on(eventType, callback);\r\n        \r\n        var self = this;\r\n        var selector    = self.selectAllPath();\r\n\r\n        // Update Event Factory\r\n        let eventFactory = {\r\n            'click.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseover.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseout.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventName = eventType + '.event';\r\n\r\n        selector.on(eventName, eventFactory[eventName]);\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Donut Chart\r\n     */\r\n    draw() {\r\n        super.draw();\r\n\r\n        var self = this;\r\n        \r\n        self.updateConfig(self.config, function(data) {\r\n            var title   = new Title(self.options.title, self);\r\n            var legend  = new Legend(self.options.legend, self, self.dataTarget);\r\n            var table   = new Table(self.options.table, self, self.dataTarget);\r\n\r\n            self.title = title;\r\n            self.legend = legend;\r\n            self.table = table;\r\n\r\n            // Draw title\r\n            self.title.draw();\r\n\r\n            // Update interaction of this own chart\r\n            self.update(self.dataTarget);\r\n            self.updateInteraction();\r\n\r\n            self.legend = legend;\r\n            self.table = table;\r\n\r\n            // Draw legend\r\n            self.legend.draw();\r\n            self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);\r\n\r\n            // Draw table\r\n            self.table.draw();\r\n            self.table.updateInteractionForDonutPieChart(self);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        super.setOption(key, value);\r\n\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(newData, newDataConfig) {\r\n        var self = this;\r\n\r\n        var newCfg = {};\r\n\r\n        if (!Helper.isEmpty(newDataConfig)) {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n                keys: newDataConfig,\r\n            };\r\n\r\n        } else {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n            };\r\n\r\n        }\r\n        \r\n        self.updateDataConfig(newCfg, function(data) {\r\n            // Update Chart\r\n            self.update(data);\r\n\r\n            // Update Legend\r\n            self.legend.update(data);\r\n            self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);    \r\n        \r\n            // Update Table\r\n            self.table.update(data);\r\n            self.table.updateInteractionForDonutPieChart(self);\r\n        });\r\n    }\r\n    \r\n    \r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.DonutChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\nimport Tooltip from './utils/C9.Tooltip';\r\n\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class LineChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self    = this;\r\n\r\n        self.config  = {\r\n            point: {\r\n                show: true,\r\n                fill: \"steelblue\",\r\n                stroke: \"steelblue\",\r\n                'stroke-width': 1,\r\n                opacity: 1.0,\r\n                radius: 5,\r\n            },\r\n            area: {\r\n                show: true\r\n            },\r\n            line: {\r\n                style: \"solid\", // \"dash\", \"dot\"\r\n                width: 2\r\n            },\r\n            interpolate: \"linear\", // refer: https://www.dashingd3js.com/svg-paths-and-d3js\r\n        };\r\n\r\n        // self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get isTimeDomain() {\r\n        return this._isTimeDomain;\r\n    }\r\n\r\n    get bisectDate() {\r\n        return this._bisectDate;\r\n    }\r\n\r\n    get hoverLine() {\r\n        return this._hoverLine;\r\n    }\r\n\r\n    get subChartX() {\r\n        return this._subChartX;\r\n    }\r\n\r\n    get subChartY() {\r\n        return this._subChartY;\r\n    }\r\n\r\n    get subChartWidth() {\r\n        return this._subChartWidth;\r\n    }\r\n\r\n    get subChartHeight() {\r\n        return this._subChartHeight;\r\n    }\r\n\r\n    get subChartMargin() {\r\n        return this._subChartMargin;\r\n    }\r\n\r\n    get subChartXAxis() {\r\n        return this._subChartXAxis;\r\n    }\r\n\r\n    get brush() {\r\n        return this._brush;\r\n    }\r\n\r\n    get subChartAreaGen() {\r\n        return this._subChartAreaGen;\r\n    }\r\n\r\n    get lineGen() {\r\n        return this._lineGen;\r\n    }\r\n\r\n    get areaGen() {\r\n        return this._areaGen;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set isTimeDomain(arg) {\r\n        if (arg) {\r\n            this._isTimeDomain = arg;\r\n        }\r\n    }\r\n\r\n    set bisectDate(arg) {\r\n        if (arg) {\r\n            this._bisectDate = arg;\r\n        }\r\n    }\r\n\r\n    set hoverLine(arg) {\r\n        if (arg) {\r\n            this._hoverLine = arg;\r\n        }\r\n    }\r\n\r\n    set subChartX(arg) {\r\n        if (arg) {\r\n            this._subChartX = arg;\r\n        }\r\n    }\r\n\r\n    set subChartY(arg) {\r\n        if (arg) {\r\n            this._subChartY = arg;\r\n        }\r\n    }\r\n\r\n    set subChartWidth(arg) {\r\n        if (arg) {\r\n            this._subChartWidth = arg;\r\n        }\r\n    }\r\n\r\n    set subChartHeight(arg) {\r\n        if (arg) {\r\n            this._subChartHeight = arg;\r\n        }\r\n    }\r\n\r\n    set subChartMargin(arg) {\r\n        if (arg) {\r\n            this._subChartMargin = arg;\r\n        }\r\n    }\r\n\r\n    set subChartXAxis(arg) {\r\n        if (arg) {\r\n            this._subChartXAxis = arg;\r\n        }\r\n    }\r\n\r\n    set brush(arg) {\r\n        if (arg) {\r\n            this._brush = arg;\r\n        }\r\n    }\r\n\r\n    set subChartAreaGen(arg) {\r\n        if (arg) {\r\n            this._subChartAreaGen = arg;\r\n        }\r\n    }\r\n\r\n    set lineGen(arg) {\r\n        if (arg) {\r\n            this._lineGen = arg;\r\n        }\r\n    }\r\n\r\n    set areaGen(arg) {\r\n        if (arg) {\r\n            this._areaGen = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    /**\r\n     * Init Line Chart Config\r\n     */\r\n    updateConfig(config, callback) {\r\n        super.updateConfig(config);\r\n\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.chartType = \"line\";\r\n        self.bisectDate = d3.bisector(function(d) { return d.valueX; }).left;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n            self.isTimeDomain   = da.timeFormat;\r\n\r\n            var width   = self.width - self.margin.left - self.margin.right,\r\n                height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            self.x = (self.isTimeDomain) ? d3.time.scale().range([0, width]) : d3.scale.linear().range([0, width]),\r\n            self.y = d3.scale.linear().range([height, 0]);\r\n\r\n            self.updateDomain(self.dataTarget);\r\n\r\n            self.lineGen = d3.svg.line()\r\n                            .x(function(d) { return self.x(d.valueX); })\r\n                            .y(function(d) { return self.y(d.valueY); })\r\n                            .interpolate(self.options.interpolate);\r\n\r\n            self.areaGen = d3.svg.area()\r\n                            .x(function(d) { return self.x(d.valueX); })\r\n                            .y0(function(d) { return self.y(d.valueY); })\r\n                            .y1(height)\r\n                            .interpolate(self.options.interpolate);\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update data config\r\n     */\r\n    updateDataConfig(dataCfg, callback) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(self.options, dataCfg);\r\n\r\n        self.chartType = \"line\";\r\n        self.bisectDate = d3.bisector(function(d) { return d.valueX; }).left;\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n            self.isTimeDomain   = da.timeFormat;\r\n\r\n            var width   = self.width - self.margin.left - self.margin.right,\r\n                height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            self.x = (self.isTimeDomain) ? d3.time.scale().range([0, width]) : d3.scale.linear().range([0, width]),\r\n            self.y = d3.scale.linear().range([height, 0]);\r\n\r\n            self.updateDomain(self.dataTarget);\r\n\r\n            self.lineGen = d3.svg.line()\r\n                            .x(function(d) { return self.x(d.valueX); })\r\n                            .y(function(d) { return self.y(d.valueY); })\r\n                            .interpolate(self.options.interpolate);\r\n\r\n            self.areaGen = d3.svg.area()\r\n                            .x(function(d) { return self.x(d.valueX); })\r\n                            .y0(function(d) { return self.y(d.valueY); })\r\n                            .y1(height)\r\n                            .interpolate(self.options.interpolate);\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateOverlay() {\r\n        var self = this;\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        //** Create a invisible rect for mouse tracking\r\n        var paddingX = (self.x.domain()[1] - self.x.domain()[0]) * 0.01,\r\n            paddingY = (self.y.domain()[1] - self.y.domain()[0]) * 0.05;\r\n\r\n        self.body.selectAll(\".c9-chart-line.c9-rect-overlay\").remove();\r\n\r\n        self.body\r\n            .append('rect')\r\n            .attr('class', 'c9-chart-line c9-rect-overlay')\r\n            // .attr('width', self.actualWidth)\r\n            // .attr('height', self.actualHeight)\r\n            .attr('width', width - self.x(paddingX))\r\n            .attr('height', height)\r\n            .attr('x', self.x(paddingX) / 2)\r\n            .style('fill', 'none')\r\n            .style('pointer-events', 'all');\r\n    }\r\n\r\n    updateHoverLine() {\r\n        var self = this;\r\n\r\n        //** Add the line to the group\r\n        self.hoverLine = self.body\r\n                .append('g')\r\n                .attr('class', 'c9-chart-line c9-comparator-line')\r\n                .append('line')\r\n                .style('stroke', 'grey')\r\n                .style('stroke-opacity', 0);\r\n\r\n        self.hoverCircle = self.hoverLine\r\n                .append('circle')\r\n                .attr('class', 'c9-chart-line c9-comparator-line')\r\n                .attr('r', self.options.point.radius);\r\n    }\r\n\r\n    /**\r\n     * Update LineChart Domain\r\n     * @param  {[type]} data [description]\r\n     */\r\n    updateDomain(data) {\r\n        var self = this;\r\n\r\n        var valueXArray = d3.merge(data.map(function(_data) {\r\n            return _data.value.map(function(d) {\r\n                return d.valueX;\r\n            })\r\n        }));\r\n\r\n        var valueYArray = d3.merge(data.map(function(_data) {\r\n            return _data.value.map(function(d) {\r\n                return d.valueY;\r\n            })\r\n        }));\r\n\r\n        self.x.domain(d3.extent(valueXArray));\r\n\r\n        self.y.domain(d3.extent(valueYArray));\r\n\r\n        // Update domain if all values positive / negative\r\n        if (self.y.domain()[0] > 0 && self.y.domain()[1] > 0) {\r\n            self.y.domain([0, self.y.domain()[1]]);\r\n        } else if (self.y.domain()[0] < 0 && self.y.domain()[1] < 0) {\r\n            self.y.domain([self.y.domain()[0], 0]);\r\n        }\r\n\r\n        // Check if its is timeDomain then skip\r\n        if (!self.isTimeDomain) {\r\n            var xDomain = self.x.domain(), paddingX = (self.x.domain()[1] - self.x.domain()[0]) * 0.01;\r\n            var yDomain = self.y.domain(), paddingY = (self.y.domain()[1] - self.y.domain()[0]) * 0.05;\r\n                \r\n            self.x.domain([xDomain[0] - paddingX, xDomain[1] + paddingX]);\r\n            self.y.domain([yDomain[0], yDomain[1] + paddingY]);\r\n        }\r\n        // else {\r\n        //     var xDomain = self.x.domain(), paddingX = (self.x.domain()[1] - self.x.domain()[0]);\r\n        //     var yDomain = self.y.domain(), paddingY = (self.y.domain()[1] - self.y.domain()[0]);\r\n        //         console.log(xDomain[0]);\r\n        //     self.x.domain([xDomain[0] - new Date(paddingX), xDomain[1] + new Date(paddingX)]);\r\n        //     self.y.domain([yDomain[0], yDomain[1] + paddingY]);\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Update main path of Line Chart when brushing\r\n     */\r\n    update(data) {\r\n        var self = this;\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        self.updateDomain(data);\r\n\r\n        self.body.selectAll(\".c9-chart-line.c9-area-container\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-chart-line.c9-path-container\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-chart-line.c9-point-container\").data([]).exit().remove();\r\n\r\n        if (self.options.area.show) {\r\n            var areaContainer = self.body.append('g')\r\n                                .attr('class', 'c9-chart-line c9-area-container')\r\n                                .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n            areaContainer.selectAll(\".c9-chart-line.c9-path-area-custom\")\r\n            // self.body.selectAll(\"dot\")\r\n                .data(data)\r\n                .enter()\r\n                .append('path')\r\n                .filter(function(d) {\r\n                    return d.enable;\r\n                })\r\n                // .attr(\"clip-path\", \"url(#clip)\")\r\n                .attr('class', 'c9-chart-line c9-path-area-custom')\r\n                .attr('d', function(d) {\r\n                    return self.areaGen(d.value);\r\n                })\r\n                .attr('data-ref', function(d) {\r\n                    return 'c9-' + d['data-ref'];\r\n                })\r\n                .style('fill', function(d) {\r\n                    return d.color;\r\n                })\r\n                .style('stroke', 'none')\r\n                .style('opacity', '0.5');\r\n        }\r\n\r\n        var pathContainer = self.body.append('g')\r\n                            .attr('class', 'c9-chart-line c9-path-container')\r\n                            .attr(\"clip-path\", \"url(#clip)\");\r\n            \r\n        pathContainer.selectAll(\".c9-chart-line.c9-path-line-custom\")\r\n        // self.body.selectAll(\"dot\")\r\n            .data(data)\r\n            .enter()\r\n            .append('path')\r\n            .filter(function(d) {\r\n                return d.enable;\r\n            })\r\n            .attr('class', 'c9-chart-line c9-path-line-custom')\r\n            .attr('d', function(d) {\r\n                return self.lineGen(d.value);\r\n            })\r\n            .attr('data-ref', function(d) {\r\n                return 'c9-' + d['data-ref'];\r\n            })\r\n            .style('stroke', function(d) {\r\n                return d.color;\r\n            })\r\n            .style('stroke-dasharray', function() {\r\n                return self.getLineStyle();\r\n            })\r\n            .style('stroke-width', self.options.line.width)\r\n            .style('fill', 'none');\r\n\r\n        if (self.options.point.show) {\r\n            var pointContainer = self.body.append('g')\r\n                                    .attr('class', 'c9-chart-line c9-point-container')\r\n                                    .attr(\"clip-path\", \"url(#clip)\");\r\n            \r\n            data.forEach(function(d) {\r\n                if (!d.enable) return;\r\n                pointContainer.selectAll(\".c9-chart-line.c9-point-container\")\r\n                // self.body.selectAll(\"dot\")\r\n                    .data(d.value)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    // .attr(\"clip-path\", \"url(#clip)\")\r\n                    .attr('class', 'c9-chart-line c9-circle-custom')\r\n                    .attr(\"r\", self.options.point.radius)\r\n                    .attr(\"cx\", function(_d) {\r\n                        return self.x(_d.valueX);\r\n                    })\r\n                    .attr(\"cy\", function(_d) {\r\n                        return self.y(_d.valueY);\r\n                    })\r\n                    .attr(\"data-ref\", function(data) {\r\n                        return data[\"data-ref\"];\r\n                    })\r\n                    .style(\"fill\", self.options.point.fill)\r\n                    .style(\"stroke\", self.options.point.stroke)\r\n                    .style(\"stroke-width\", self.options.point['stroke-width'])\r\n                    .style(\"opacity\", self.options.point.opacity);\r\n            });\r\n        }\r\n\r\n        /*----------  Set actual size for chart after initialization  ----------*/\r\n        var chartBox = self.body.node().getBBox();\r\n        self.actualWidth = chartBox.width - 4 * self.options.point.radius;\r\n        self.actualHeight = chartBox.height;\r\n        /*----------  End of Set actual size for chart after initialization  ----------*/\r\n\r\n        self.updateInteraction();\r\n    }  \r\n\r\n    /**\r\n     * Update sub chart\r\n     */\r\n    updateSubChart(data) {\r\n        var self = this;\r\n\r\n        if (self.options.subchart.show) {\r\n            var width   = self.width - self.margin.left - self.margin.right,\r\n                height  = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            /*----------  Sub Chart  ----------*/\r\n            self.subChartWidth = width,\r\n            self.subChartHeight = self.options.subchart.height;\r\n            if (Helper.isEmpty(self.subChartMargin)) {\r\n                self.subChartMargin = {\r\n                    'top': self.actualHeight + 100,\r\n                    'left': self.margin.left\r\n                }\r\n            }\r\n\r\n            self.subChartX = (self._isTimeDomain) ? d3.time.scale().range([0, self.subChartWidth]) : d3.scale.linear().range([0, self.subChartWidth]),\r\n            self.subChartY = d3.scale.linear().range([self.subChartHeight, 0]);\r\n\r\n            self.subChartX.domain(self.x.domain());\r\n            self.subChartY.domain(self.y.domain());\r\n\r\n            self.subChartXAxis = d3.svg.axis()\r\n                            .scale(self.subChartX)\r\n                            .orient(\"bottom\");\r\n\r\n            self.brush = d3.svg.brush()\r\n                            .x(self.subChartX)\r\n                            .on(\"brush\", function() {\r\n                                // Update axis\r\n                                self.x.domain(self.brush.empty() ? self.subChartX.domain() :self.brush.extent());\r\n                                self.axis.update(self.x, self.y, 500);\r\n\r\n                                // Update main path of Line Chart\r\n                                if (self.options.area.show) {\r\n                                    self.body.selectAll(\"path.c9-chart-line.c9-path-area-custom\")\r\n                                        .attr(\"d\",  function(d) { return self.areaGen(d.value) });\r\n                                }\r\n                                self.body.selectAll(\"path.c9-chart-line.c9-path-line-custom\")\r\n                                        .attr(\"d\",  function(d) { return self.lineGen(d.value) });\r\n\r\n                                if (self.options.point.show) {\r\n                                    self.body.selectAll(\"circle.c9-chart-line.c9-circle-custom\")\r\n                                            .attr(\"cx\", function(d) { return self.x(d.valueX); })\r\n                                            .attr(\"cy\", function(d) { return self.y(d.valueY); });\r\n                                }\r\n                            });\r\n\r\n            self.subChartAreaGen = d3.svg.area()\r\n                            .x(function(d) { return self.subChartX(d.valueX) })\r\n                            .y0(function(d) { return self.subChartY(d.valueY) })\r\n                            .y1(self.subChartHeight)\r\n                            .interpolate(self.options.interpolate);\r\n\r\n            self.svg.attr('height', self.height + self.subChartHeight);\r\n\r\n            self.svg.selectAll(\".c9-subchart-custom\").remove();\r\n            self.svg.selectAll(\".c9-subchart-custom .c9-subchart-axis\").remove();\r\n\r\n            var subChart = self.svg.append(\"g\")\r\n                            .attr(\"class\", \"c9-subchart-custom\")\r\n                            .attr(\"transform\", \"translate(\" + self.subChartMargin.left + \",\" + self.subChartMargin.top + \")\");\r\n\r\n            var subChartAreaContainer = subChart.append('g')\r\n                                    .attr('class', 'c9-subchart-custom c9-subchart-area-container')\r\n                                    .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n            data.forEach(function(d,i) {\r\n                if (!d.enable) return;\r\n\r\n                subChartAreaContainer.append(\"path\")\r\n                    // .attr(\"clip-path\", \"url(#clip)\")\r\n                    .attr(\"class\", \"c9-subchart-area\")\r\n                    .attr(\"d\", function() { return self.subChartAreaGen(d.value) })\r\n                    .attr('data-ref', 'c9-'+d['data-ref'])\r\n                    .style('fill', d.color)\r\n                    .style('stroke', 'none')\r\n                    .style('opacity', '0.5');\r\n            });\r\n            \r\n\r\n            subChart.append(\"g\")\r\n                .attr(\"class\", \"c9-subchart-axis\")\r\n                .attr(\"transform\", \"translate(0,\" + self.subChartHeight + \")\")\r\n                .call(self.subChartXAxis);\r\n\r\n            //append the brush for the selection of subsection  \r\n            subChart.append(\"g\")\r\n                .attr(\"class\", \"c9-subchart-brush\")\r\n                .call(self.brush)\r\n                .selectAll(\"rect\")\r\n                .attr(\"height\", self.subChartHeight);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select all circle as type CIRCLE in Line Chart via its CLASS\r\n     */\r\n    selectAllCircle() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                .selectAll('circle.c9-chart-line.c9-circle-custom');\r\n    }\r\n\r\n    /**\r\n     * Select all rect as type RECT in Line Chart via its CLASS\r\n     */\r\n    selectRectLayer() {\r\n        var self = this;\r\n\r\n        return d3\r\n                .selectAll('svg rect.c9-chart-line.c9-rect-overlay');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     */\r\n    updateInteraction() {\r\n        var self = this,\r\n            selector        = self.selectRectLayer(),\r\n            hoverEnable     = self.hover.enable,\r\n            hoverOptions    = self.hover.options,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onMouseMoveCallback  = hoverOptions.onMouseMove.callback,\r\n            onClickCallback  = self.click.callback;\r\n\r\n        var tooltip = new Tooltip(self.options.tooltip);\r\n\r\n        // Update Event Factory\r\n        self.eventFactory = {\r\n            // 'click': function(d) {\r\n            //     if (Helper.isFunction(onClickCallback)) {\r\n            //         onClickCallback.call(this, d);\r\n            //     }\r\n            // },\r\n            // 'mouseover': function(d) {\r\n            //     if (!hoverEnable) return;\r\n                \r\n            //     if (Helper.isFunction(onMouseOverCallback)) {\r\n            //         onMouseOverCallback.call(this, d);\r\n            //     }\r\n\r\n            //     // tooltip.draw(d, self, 'mouseover');\r\n            // },\r\n            'mouseout': function(d) {\r\n                if (!hoverEnable) return;\r\n\r\n                // if (Helper.isFunction(onMouseOutCallback)) {\r\n                //     onMouseOutCallback.call(this, d);\r\n                // }\r\n\r\n                self.hoverLine.style('stroke-opacity', 0);\r\n\r\n                // Remove circle style before\r\n                self.selectAllCircle()[0].forEach(function(circle) {\r\n                    d3.select(circle)\r\n                        .style('fill', self.options.point.fill)\r\n                        .style('fill-opacity', self.options.point.opacity);\r\n                }); \r\n\r\n                tooltip.draw(d, self, 'mouseout');\r\n            },\r\n            'mousemove': function(d) {\r\n                if (!hoverEnable) return;\r\n\r\n\r\n                var mouse   = d3.mouse(this),\r\n                    mouseX  = mouse[0],\r\n                    mouseY  = mouse[1],\r\n\r\n                    curValueX   = self.x.invert(mouseX);\r\n\r\n                var sameTimeArr = [],\r\n                    sameTimeValueArr = [];\r\n\r\n                self.dataTarget.forEach(function(d, i) {\r\n                    sameTimeArr[i] = d.value;\r\n                    sameTimeArr[i].sort(function(a, b) { return a.valueX - b.valueX; });\r\n                    var idx = self._isTimeDomain ? self.bisectDate(sameTimeArr[i], new Date(curValueX)) : self.bisectDate(sameTimeArr[i], curValueX);\r\n                    \r\n                    var d0, d1;\r\n                    \r\n                    d0 = (idx === 0) ? sameTimeArr[i][idx] : sameTimeArr[i][idx - 1];\r\n                    d1 = !Helper.isEmpty(sameTimeArr[i][idx]) ? sameTimeArr[i][idx] : sameTimeArr[i][idx-1] ;\r\n\r\n                    // Check d0, d1 still in boundary or not\r\n                    // To work well with brushing\r\n                    d0 = self.checkBoundary(d0.valueX) === -1 ? d1 : d0;\r\n                    d1 = self.checkBoundary(d1.valueX) === 1 ? d0 : d1;\r\n\r\n                    // work out which date value is closest to the mouse\r\n                    sameTimeValueArr[i] = (curValueX - d0.valueX > d1.valueX - curValueX) ? d1 : d0;\r\n                });\r\n\r\n                if (Helper.isFunction(onMouseMoveCallback)) {\r\n                    onMouseMoveCallback.call(this, sameTimeValueArr);\r\n                }\r\n                \r\n                var x = self.x(!Helper.isEmpty(sameTimeValueArr[0].valueX) ? sameTimeValueArr[0].valueX : sameTimeValueArr[1].valueX);\r\n                var y = self.y(!Helper.isEmpty(sameTimeValueArr[0].valueY) ? sameTimeValueArr[0].valueY : sameTimeValueArr[1].valueY);\r\n\r\n                // console.log(x);\r\n\r\n                // Remove circle style before\r\n                self.selectAllCircle()[0].forEach(function(circle) {\r\n                    d3.select(circle)\r\n                        .style('fill', self.options.point.fill)\r\n                        .style('fill-opacity', self.options.point.opacity);\r\n                }); \r\n\r\n                // Update circle style after mouse move\r\n                for (let i=0; i < sameTimeValueArr.length; i++) {\r\n                    let circle = d3.select(\"circle[data-ref='\" + sameTimeValueArr[i]['data-ref'] + \"']\");\r\n                    circle\r\n                    .style('fill', self.getLightenColor(self.options.point.fill))\r\n                    .style('fill-opacity', 1);\r\n                }\r\n\r\n                // focus.select('#focusCircle')\r\n                //     .attr('cx', x)\r\n                //     .attr('cy', y);\r\n                self.hoverLine\r\n                    .attr('x1', x).attr('y1', self.y(self.y.domain()[0]))\r\n                    .attr('x2', x).attr('y2', self.y(self.y.domain()[1]))\r\n                    .style('stroke-opacity', 1);\r\n                // self.hoverLine\r\n                //     .attr('x1', self.x(self.x.domain()[0])).attr('y1', y)\r\n                //     .attr('x2', self.x(self.x.domain()[1])).attr('y2', y)\r\n                //     .attr('stroke-opacity', 1);\r\n\r\n                //** Display Hover line\r\n                // self.hoverLine\r\n                //     .attr('x1', self.x(sameTimeValueArr[0].valueX))\r\n                //     .attr('x2', self.x(sameTimeValueArr[0].valueX))\r\n                //     .attr('stroke-opacity', 1);\r\n\r\n                tooltip.draw(sameTimeValueArr, self, 'mousemove');\r\n            }\r\n        }\r\n\r\n        selector.on(self.eventFactory);\r\n    }\r\n\r\n    getLineStyle() {\r\n        var self = this;\r\n\r\n        let r;\r\n\r\n        switch(self.options.line.style) {\r\n            case 'dot':\r\n                r = \"1, 1\";\r\n                break;\r\n            case 'solid':\r\n                r = 'none';\r\n                break;\r\n            case 'dash':\r\n                r = \"3, 3\";\r\n                break;\r\n            default:\r\n                r = 'none';\r\n                break;\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    checkBoundary(value) {\r\n        var self = this;\r\n\r\n        var bound = self.width - self.margin.left - self.margin.right,\r\n            checkWidth = self.x(value);\r\n\r\n        return checkWidth < 0 ? -1 : (checkWidth > bound) ? 1 : 0;\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     */\r\n    on(eventType, callback) {\r\n        super.on(eventType, callback);\r\n        \r\n        var self = this;\r\n        var selector    = self.selectRectLayer();\r\n\r\n        // Update Event Factory\r\n        let eventFactory = {\r\n            'mousemove.event': function(d) {\r\n\r\n                var mouse   = d3.mouse(this),\r\n                    mouseX  = mouse[0],\r\n                    mouseY  = mouse[1],\r\n\r\n                    curValueX   = self.x.invert(mouseX);\r\n\r\n                var sameTimeArr = [],\r\n                    sameTimeValueArr = [];\r\n\r\n                self.dataTarget.forEach(function(d, i) {\r\n                    sameTimeArr[i] = d.value;\r\n                    sameTimeArr[i].sort(function(a, b) { return a.valueX - b.valueX; });\r\n                    var idx = self._isTimeDomain ? self.bisectDate(sameTimeArr[i], new Date(curValueX)) : self.bisectDate(sameTimeArr[i], curValueX);\r\n                    \r\n                    var d0, d1;\r\n                    \r\n                    d0 = (idx === 0) ? sameTimeArr[i][idx] : sameTimeArr[i][idx - 1];\r\n                    d1 = sameTimeArr[i][idx];\r\n\r\n                    // work out which date value is closest to the mouse\r\n                    sameTimeValueArr[i] = (curValueX - d0.valueX > d1.valueX - curValueX) ? d1 : d0;\r\n                });\r\n\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, sameTimeValueArr);\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventName = eventType + '.event';\r\n\r\n        selector.on(eventName, eventFactory[eventName]);\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Line Chart\r\n     */\r\n    draw() {\r\n        super.draw();\r\n\r\n        var self = this;\r\n\r\n        self.updateConfig(self.config, function(data) {\r\n            var axis    = new Axis(self.options.axis, self, self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom);\r\n            var title   = new Title(self.options.title, self);\r\n            var legend  = new Legend(self.options.legend, self);\r\n            var table  = new Table(self.options.table, self, data);\r\n\r\n            self.axis = axis;\r\n            self.title = title;\r\n            self.legend = legend;\r\n            self.table = table;\r\n\r\n            // Draw title\r\n            self.title.draw();\r\n\r\n            // Draw axis\r\n            self.axis.draw();\r\n\r\n            self.update(data);\r\n            self.updateSubChart(data);\r\n            self.updateOverlay();\r\n            self.updateHoverLine();\r\n            self.updateInteraction();\r\n\r\n            // Draw legend\r\n            self.legend.draw();\r\n            self.legend.updateInteractionForLineChart(self);\r\n\r\n            // Draw table\r\n            self.table.draw();\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        super.setOption(key, value);\r\n\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(newData, newDataConfig) {\r\n        var self = this;\r\n\r\n        var newCfg = {};\r\n\r\n        if (!Helper.isEmpty(newDataConfig)) {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n                keys: newDataConfig,\r\n            };\r\n\r\n        } else {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n            };\r\n\r\n        }\r\n        \r\n        self.updateDataConfig(newCfg, function(data) {\r\n            // Update Chart\r\n            self.update(data);\r\n            self.updateSubChart(data);\r\n\r\n            // Update Axis\r\n            self.axis.update(self.x, self.y, 100);\r\n\r\n            // Update Legend\r\n            self.legend.update(data);\r\n            self.legend.updateInteractionForLineChart(self);\r\n\r\n            // Update Table\r\n            self.table.update(data);\r\n        });\r\n    }\r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.LineChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\nimport Tooltip from './utils/C9.Tooltip';\r\n\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class PieChart extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        self.config = {\r\n            radius: Math.min(self.width - self.margin.left - self.margin.right, self.height - self.margin.top - self.margin.bottom) / 2,\r\n            // showText: true\r\n        };\r\n\r\n        // self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get pie() {\r\n        return this._pie;\r\n    }\r\n\r\n    get arc() {\r\n        return this._arc;\r\n    }\r\n\r\n    get currentData() {\r\n        return this._currentData;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set pie(arg) {\r\n        if (arg) {\r\n            this._pie = arg;\r\n        }\r\n    }\r\n\r\n    set arc(arg) {\r\n        if (arg) {\r\n            this._arc = arg;\r\n        }\r\n    }\r\n\r\n    set currentData(arg) {\r\n        if (arg) {\r\n            this._currentData = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateConfig(config, callback) {\r\n        super.updateConfig(config);\r\n\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.chartType  = 'pie';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n            \r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update Donut Chart Config\r\n     */\r\n    updateDataConfig(dataCfg, callback) {\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(self.options, dataCfg);\r\n\r\n        self.chartType  = 'pie';\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update Donut Chart based on new data\r\n     * @param  {[type]} data [description]\r\n     */\r\n    update(data) {\r\n        var self = this;\r\n\r\n        var width   = self.width - self.margin.left - self.margin.right,\r\n            height  = self.height - self.margin.top - self.margin.bottom,\r\n            color   = self.colorRange;\r\n\r\n        self.arc = d3.svg.arc()\r\n                    .innerRadius(0)\r\n                    .outerRadius(self.options.radius);\r\n\r\n        //we can sort data here\r\n        self.pie = d3.layout.pie()\r\n                    .sort(null)\r\n                    .value(function(d) { return d.value; });\r\n\r\n        self.body.selectAll(\".c9-chart-pie.c9-custom-arc-container\").data([]).exit().remove();\r\n\r\n        //draw chart\r\n        var arcs = self.body\r\n                    .append('g')\r\n                        .attr('class', 'c9-chart-pie c9-custom-arc-container')\r\n                        .attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')\r\n                        .selectAll('.c9-chart-pie.c9-custom-arc')\r\n                        .data(self.pie(data)).enter()\r\n                        .append('g')\r\n                            .attr('class', 'c9-chart-pie c9-custom-arc');\r\n\r\n        // Append main path contains pie\r\n        arcs.append('path')\r\n                .attr('class', 'c9-chart-pie c9-custom-path')\r\n                .attr('data-ref', function(d) { return d.data['data-ref']; })\r\n                .attr('d', self.arc)\r\n                .attr('fill', function(d, i) { return color(i); })\r\n                .attr('stroke', '#ffffff')\r\n                .each(function(d) { self.currentData = d; }); \r\n                // Current data used for calculate interpolation \r\n                // between current arc vs disabled arc\r\n\r\n\r\n        // Append middle text display name\r\n        // if (self.options.showText) {\r\n        //     arcs.append('text')\r\n        //             .attr('class', 'c9-chart-pie c9-custom-text')\r\n        //             .attr('transform', function(d) { return 'translate(' + self.arc.centroid(d) + ')'; })\r\n        //             .attr('dy', '.35em')\r\n        //             .attr('text-anchor', 'middle')\r\n        //             .text(function(d) { return d.data.name; });\r\n        // }\r\n        \r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Select all path as type PATH in Donut Chart via its CLASS\r\n     */\r\n    selectAllPath() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                    .selectAll('path.c9-chart-pie.c9-custom-path');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self    = this,\r\n            selector= self.selectAllPath(),\r\n            color   = self.colorRange,\r\n            chartInnerBefore = 0,\r\n            chartOuterBefore = self.options.radius,\r\n            chartInnerAfter = 0,\r\n            chartOuterAfter = self.options.radius * 1.2,\r\n            hoverOptions        = self.hover.options,\r\n            hoverEnable         = self.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = self.click.callback;\r\n\r\n        var tooltip = new Tooltip(self.options.tooltip);\r\n\r\n        // Main Event Dispatch for paths in pie chart\r\n        self.eventFactory = {\r\n            'click': function(d, i) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, d);\r\n                }\r\n            },\r\n\r\n            'mouseover': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, d);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                selector.transition()\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerAfter)\r\n                            .outerRadius(chartOuterAfter)\r\n                        );\r\n\r\n                // For legend\r\n                if (self.options.legend.show) {\r\n                    self.legend.item.each(function() {\r\n                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable')) {\r\n                            d3.select(this).attr('opacity', '0.3');\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // For Table\r\n                if (self.options.table.show) {\r\n                    var tr = d3.selectAll('.c9-table-container>.c9-table-body tr');\r\n                    tr.filter(function(i) { return i['data-ref'] != d.data['data-ref'] }).selectAll('td').style('opacity', '0.5');\r\n                    var selectedItem = tr.filter(function(i) { return i['data-ref'] == d.data['data-ref'] });\r\n                    //set its style and scroll to its pos\r\n                    selectedItem.selectAll('td').style('opacity', '1');\r\n                    Helper.scroll(d3.select('.c9-table-container')[0][0], selectedItem[0][0].offsetTop, 200);\r\n                }\r\n\r\n                // For Chart\r\n                self.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\r\n                        d3.select(this).attr('opacity', '0.3');\r\n                    }\r\n                });\r\n\r\n                // For Tooltip\r\n                tooltip.draw(d, self, 'mouseover');\r\n            },\r\n            \r\n            'mouseout': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, d);\r\n                }\r\n\r\n                var selector = d3.select(this);\r\n                selector.transition()\r\n                        .duration(500)\r\n                        .ease('bounce')\r\n                        .attr('d', d3.svg.arc()\r\n                            .innerRadius(chartInnerBefore)\r\n                            .outerRadius(chartOuterBefore)\r\n                        );\r\n\r\n                // For legend\r\n                if (self.options.legend.show)\r\n                    self.legend.item.each(function() {\r\n                        if (d3.select(this).attr('data-ref') !== d.data['data-ref'] && d3.select(this).attr('data-enable')) {\r\n                            d3.select(this).attr('opacity', '1.0');\r\n                        }\r\n                    });\r\n\r\n                // For Table\r\n                if (self.options.table.show) {\r\n                    d3.selectAll('.c9-table-container>.c9-table-body tr').selectAll('td').style('opacity', '');\r\n                }\r\n                \r\n\r\n                // For Chart\r\n                self.selectAllPath().each(function(){\r\n                    if (d3.select(this).attr('data-ref') !== d.data['data-ref']) {\r\n                        d3.select(this).attr('opacity', '1.0');\r\n                    }\r\n                });\r\n\r\n                // For Tooltip\r\n                tooltip.draw(d, self, 'mouseout');\r\n            }\r\n        }\r\n\r\n        selector.on(self.eventFactory);\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    on(eventType, callback) {\r\n        super.on(eventType, callback);\r\n        \r\n        var self = this;\r\n        var selector    = self.selectAllPath();\r\n\r\n        // Update Event Factory\r\n        let eventFactory = {\r\n            'click.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseover.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseout.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventName = eventType + '.event';\r\n\r\n        selector.on(eventName, eventFactory[eventName]);\r\n    }\r\n\r\n    /**\r\n     * Main draw function of Pie Chart\r\n     */\r\n    draw() {\r\n        super.draw();\r\n\r\n        var self = this;\r\n\r\n        self.updateConfig(self.config, function(data) {\r\n            var title   = new Title(self.options.title, self);\r\n            var legend  = new Legend(self.options.legend, self, self.dataTarget);\r\n            var table   = new Table(self.options.table, self, self.dataTarget);\r\n\r\n            self.title = title;\r\n            self.legend = legend;\r\n            self.table = table;\r\n\r\n            // Draw title\r\n            self.title.draw();\r\n\r\n            // Update interaction of this own chart\r\n            self.update(data);\r\n            self.updateInteraction();\r\n            \r\n            // Draw legend\r\n            self.legend.draw();\r\n            self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);    \r\n            \r\n            // Draw table\r\n            self.table.draw();\r\n            self.table.updateInteractionForDonutPieChart(self);\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        super.setOption(key, value);\r\n\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(newData, newDataConfig) {\r\n        var self = this;\r\n\r\n        var newCfg = {};\r\n\r\n        if (!Helper.isEmpty(newDataConfig)) {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n                keys: newDataConfig,\r\n            };\r\n\r\n        } else {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n            };\r\n\r\n        }\r\n\r\n        self.updateDataConfig(newCfg, function(data) {\r\n            // Update Chart\r\n            self.update(self.dataTarget);\r\n\r\n            // Update Legend\r\n            self.legend.update(self.dataTarget);\r\n            self.legend.updateInteractionForDonutPieChart(self, self.selectAllPath(), self.pie, self.currentData, self.arc);    \r\n        \r\n            // Update Table\r\n            self.table.update(self.dataTarget);\r\n            self.table.updateInteractionForDonutPieChart(self);\r\n        });\r\n        \r\n    }\r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n    \r\n    \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.PieChart.js\n **/","import Chart from './C9.Chart';\r\n\r\nimport Axis from './utils/C9.Axis';\r\nimport Title from './utils/C9.Title';\r\nimport Legend from './utils/C9.Legend';\r\nimport Table from './utils/C9.Table';\r\nimport Tooltip from './utils/C9.Tooltip';\r\n\r\nimport Helper from '../helper/C9.Helper';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\n\r\nexport default class TimeLine extends Chart {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        var self = this;\r\n\r\n        self.config = {\r\n            separatorColor: \"rgb(154, 154, 154)\",\r\n            backgroundColor: null,\r\n            starting: 0,\r\n            ending: 0,\r\n            stack: true,\r\n            itemHeight: 25,\r\n            itemMargin: 15,\r\n            labelMargin: 50,\r\n            striped: null\r\n        };\r\n\r\n        // self.updateConfig(config);\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n    get maxStack() {\r\n        return this._maxStack;\r\n    }\r\n\r\n    get subChartX() {\r\n        return this._subChartX;\r\n    }\r\n\r\n    get subChartXAxis() {\r\n        return this._subChartXAxis;\r\n    }\r\n\r\n    get subChartWidth() {\r\n        return this._subChartWidth;\r\n    }\r\n\r\n    get subChartHeight() {\r\n        return this._subChartHeight;\r\n    }\r\n\r\n    get subChartMargin() {\r\n        return this._subChartMargin;\r\n    }\r\n\r\n    get brush() {\r\n        return this._brush;\r\n    }\r\n\r\n    get stackList() {\r\n        return this._stackList;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n\r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n    set maxStack(arg) {\r\n        if (arg) {\r\n            this._maxStack = arg;\r\n        }\r\n    }\r\n\r\n    set subChartX(arg) {\r\n        if (arg) {\r\n            this._subChartX = arg;\r\n        }\r\n    }\r\n\r\n    set subChartXAxis(arg) {\r\n        if (arg) {\r\n            this._subChartXAxis = arg;\r\n        }\r\n    }\r\n\r\n    set subChartWidth(arg) {\r\n        if (arg) {\r\n            this._subChartWidth = arg;\r\n        }\r\n    }\r\n\r\n    set subChartHeight(arg) {\r\n        if (arg) {\r\n            this._subChartHeight = arg;\r\n        }\r\n    }\r\n\r\n    set subChartMargin(arg) {\r\n        if (arg) {\r\n            this._subChartMargin = arg;\r\n        }\r\n    }\r\n\r\n    set brush(arg) {\r\n        if (arg) {\r\n            this._brush = arg;\r\n        }\r\n    }\r\n\r\n    set stackList(arg) {\r\n        if (arg) {\r\n            this._stackList = arg;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n\r\n    updateConfig(config, callback) {\r\n        super.updateConfig(config);\r\n\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(config, self.options);\r\n\r\n        self.chartType          = \"timeline\";\r\n        self.maxStack           = 1;\r\n        self.stackList          = {};\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n\r\n            var maxStack = 0,\r\n                minTime = 0,\r\n                maxTime = 0,\r\n                width = self.width - self.margin.left - self.margin.right,\r\n                height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            // count number of stack and calculate min time, max time from data\r\n            if (self.options.stack || self.options.ending === 0 || self.options.starting === 0) {\r\n                \r\n                self.dataTarget.forEach(function (datum, index) {\r\n\r\n                    if (self.options.stack && Object.keys(self.stackList).indexOf(index) == -1) {\r\n                        self.stackList[index] = maxStack;\r\n                        maxStack++;\r\n                    }\r\n\r\n                    datum.value.forEach(function (time, i) {\r\n                        if(self.options.starting === 0)\r\n                            if (time.start < minTime || minTime === 0)\r\n                                minTime = time.start;\r\n                        if(self.options.ending === 0) {\r\n                            if (time.start > maxTime)\r\n                                maxTime = time.start;\r\n                            if (time.end > maxTime)\r\n                                maxTime = time.end;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (self.options.ending === 0) {\r\n                  self.options.ending = maxTime;\r\n                }\r\n                if (self.options.starting === 0) {\r\n                  self.options.starting = minTime;\r\n                }\r\n            }\r\n\r\n            self.maxStack = maxStack;\r\n\r\n            self.x = d3.time.scale()\r\n                    .domain([self.options.starting, self.options.ending])\r\n                    .range([0, self.width]);\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateDataConfig(dataCfg, callback) {\r\n\r\n        var self = this;\r\n\r\n        self.options = Helper.mergeDeep(self.options, dataCfg);\r\n\r\n        self.chartType          = \"timeline\";\r\n        self.maxStack           = 1;\r\n        self.stackList          = {};\r\n\r\n        var dataOption          = self.dataOption;\r\n        dataOption.colorRange   = self.colorRange;\r\n\r\n        var da = new DataAdapter(dataOption, self.chartType, null);\r\n        da.getDataTarget(self.chartType, function(data) {\r\n            self.dataTarget = data;\r\n\r\n            var maxStack = 0,\r\n                minTime = 0,\r\n                maxTime = 0,\r\n                width = self.width - self.margin.left - self.margin.right,\r\n                height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            // Count number of stack and calculate min time, max time from data\r\n            // Update from existing data, so starting|ending both existed, no need\r\n            // to check\r\n            if (self.options.stack || self.options.ending === 0 || self.options.starting === 0) {\r\n                \r\n                self.dataTarget.forEach(function (datum, index) {\r\n\r\n                    if (self.options.stack && Object.keys(self.stackList).indexOf(index) == -1) {\r\n                        self.stackList[index] = maxStack;\r\n                        maxStack++;\r\n                    }\r\n\r\n                    datum.value.forEach(function (time, i) {\r\n                        // if(self.options.starting === 0)\r\n                            if (time.start < minTime || minTime === 0)\r\n                                minTime = time.start;\r\n                        // if(self.options.ending === 0) {\r\n                            if (time.start > maxTime)\r\n                                maxTime = time.start;\r\n                            if (time.end > maxTime)\r\n                                maxTime = time.end;\r\n                        // }\r\n                    });\r\n                });\r\n\r\n                // if (self.options.ending === 0) {\r\n                  self.options.ending = maxTime;\r\n                // }\r\n                // if (self.options.starting === 0) {\r\n                  self.options.starting = minTime;\r\n                // }\r\n            }\r\n\r\n            self.maxStack = maxStack;\r\n\r\n            self.x = d3.time.scale()\r\n                    .domain([self.options.starting, self.options.ending])\r\n                    .range([0, self.width]);\r\n\r\n            if (Helper.isFunction(callback)) {\r\n                callback.call(self, self.dataTarget);\r\n            }\r\n        });\r\n    }\r\n\r\n    update(data) {\r\n        var self = this;\r\n\r\n        var width = self.width - self.margin.left - self.margin.right,\r\n            height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n        var scale = width / (self.options.ending - self.options.starting);\r\n\r\n        var color = self.colorRange;\r\n\r\n        var stackList = self.stackList;\r\n\r\n        self.body.selectAll(\".c9-timeline-border-bar\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-timeline-chart.c9-background-container\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-timeline-chart.c9-stripe-background-container\").data([]).exit().remove();\r\n        self.body.selectAll(\".c9-timeline-chart.c9-rect-container\").data([]).exit().remove();\r\n        self.svg.selectAll(\".c9-timeline-chart.c9-label-container\").remove();\r\n        self.body.selectAll(\".c9-timeline-row-separator\").remove();\r\n\r\n        // Update clip-parth\r\n        self.svg.select('#clip').select('rect').attr('height', (self.options.itemHeight + self.options.itemMargin) * data.length);\r\n\r\n        //draw border\r\n        self.body.append(\"rect\")\r\n            .attr(\"class\", \"c9-timeline-border-bar\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"width\", width)\r\n            .attr(\"y\", 0 - self.options.itemMargin / 2)\r\n            .attr(\"height\", (self.options.itemHeight + self.options.itemMargin) * (self.options.stack ? self.maxStack : 1))\r\n            .attr(\"stroke\", \"rgb(154, 154, 154)\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"fill\", \"none\");\r\n\r\n        var labelContainer = self.svg.append(\"g\")\r\n                                .attr('class', 'c9-timeline-chart c9-label-container');\r\n\r\n        data.forEach( function(datum, index) {\r\n            var barYAxis = ((self.options.itemHeight + self.options.itemMargin) * stackList[index]);\r\n            if (!self.options.stack) barYAxis = 0;\r\n\r\n            //draw background\r\n            if (((!self.options.stack && index == 0) || self.options.stack) && self.options.backgroundColor) { \r\n                var bgContainer = self.body.append(\"g\")\r\n                                    .attr('class', 'c9-timeline-chart c9-background-container');\r\n\r\n                bgContainer.selectAll(\".c9-background-container\")\r\n                    .data(datum.value).enter()\r\n                    .append(\"rect\")\r\n                    .attr(\"class\", \"c9-timeline-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.options.itemMargin / 2)\r\n                    .attr(\"height\", self.options.itemHeight + self.options.itemMargin)\r\n                    .attr(\"fill\", Helper.isArray(self.options.backgroundColor) ? self.options.backgroundColor[index % self.maxStack] : self.options.backgroundColor);\r\n            }\r\n\r\n            if (((!self.options.stack && index == 0) || self.options.stack) && self.options.striped) { \r\n                var bgContainer = self.body.append(\"g\")\r\n                                    .attr('class', 'c9-timeline-chart c9-stripe-background-container');\r\n                bgContainer.selectAll(\".c9-stripe-background-container\")\r\n                    .data(datum.value).enter()\r\n                    .insert(\"rect\")\r\n                    .attr(\"class\", \"c9-timeline-stripe-background-bar\")\r\n                    .attr(\"x\", 0)\r\n                    .attr(\"width\", width)\r\n                    .attr(\"y\", barYAxis - self.options.itemMargin / 2)\r\n                    .attr(\"height\", self.options.itemHeight + self.options.itemMargin)\r\n                    .attr(\"fill\", index % 2 ? \"rgb(255, 255, 255)\" : \"rgb(230, 230, 230)\");\r\n            }\r\n\r\n            //draw item\r\n            var itemContainer = self.body.append(\"g\")\r\n                                    .attr('class', 'c9-timeline-chart c9-rect-container')\r\n                                    .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n            itemContainer.selectAll(\".c9-rect-container\")\r\n                .data(datum.value).enter()\r\n                .append(function (d, i) {\r\n                    return document.createElementNS(d3.ns.prefix.svg, d.end != \"Invalid Date\" ? \"rect\" : \"circle\");\r\n                })\r\n                .attr('class', 'c9-timeline-custom-rect')\r\n                // .attr(\"x\", function(d, i) { return self.getXPos(d,i,scale); })\r\n                .attr(\"x\", function(d, i) { return self.x(d.start); })\r\n                .attr(\"y\", function(d, i) { return self.getStackPosition(d, i, index); })\r\n                // .attr(\"width\", function (d, i) {\r\n                //     return (d.end - d.start) * scale;\r\n                // })\r\n                .attr(\"width\", function (d, i) {\r\n                    return self.x(d.end) - self.x(d.start);\r\n                })\r\n                .attr(\"cy\", function (d, i) {\r\n                    return self.getStackPosition(d, i, index) + self.options.itemHeight / 2;\r\n                })\r\n                .attr(\"cx\", function(d, i) { return self.getXPos(d,i,scale); })\r\n                .attr(\"r\", self.options.itemHeight / 2)\r\n                .attr(\"height\", self.options.itemHeight)\r\n                .style(\"fill\", color(index));\r\n\r\n            if (self.options.stack && self.options.separatorColor && index < self.maxStack - 1) {\r\n                var lineYAxis = ( self.options.itemHeight + self.options.itemMargin / 2 + (self.options.itemHeight + self.options.itemMargin) * stackList[index]);\r\n                self.body.append(\"svg:line\")\r\n                  .attr(\"class\", \"c9-timeline-row-separator\")\r\n                  .attr(\"x1\", 0)\r\n                  .attr(\"x2\", width)\r\n                  .attr(\"y1\", lineYAxis)\r\n                  .attr(\"y2\", lineYAxis)\r\n                  .attr(\"stroke-width\", 3)\r\n                  .attr(\"stroke\", Helper.isArray(self.options.separatorColor) ? self.options.separatorColor[index % (self.maxStack - 1)] : self.options.separatorColor);\r\n            }\r\n\r\n            //draw the label left side item\r\n            if (self.options.stack && !Helper.isEmpty(datum.name) && datum.name != \"\") { \r\n                var rowsDown = self.margin.top + (self.options.itemHeight + self.options.itemMargin) * (stackList[index] === undefined ? 0 : stackList[index]) + self.options.itemHeight * 0.75;\r\n\r\n                labelContainer.append(\"text\")\r\n                    .attr(\"class\", \"c9-timeline-label\")\r\n                    .attr(\"transform\", \"translate(\" + self.options.labelMargin + \",\" + rowsDown + \")\")\r\n                    .text(datum.name);\r\n            }\r\n            //draw icon\r\n            else if (self.options.stack && !Helper.isEmpty(datum.icon) && datum.icon != \"\") {\r\n                labelContainer.append(\"image\")\r\n                    .attr(\"class\", \"c9-timeline-label\")\r\n                    .attr(\"transform\", \"translate(\"+ self.options.labelMargin +\",\"+ (self.margin.top + (self.options.itemHeight + self.options.itemMargin) * stackList[index])+\")\")\r\n                    .attr(\"xlink:href\", datum.icon)\r\n                    .attr(\"width\", self.options.itemHeight)\r\n                    .attr(\"height\", self.options.itemHeight);\r\n            }\r\n        });\r\n\r\n        self.updateInteraction();\r\n    }\r\n\r\n    /**\r\n     * Update sub chart\r\n     */\r\n    updateSubChart(data) {\r\n        var self = this;\r\n\r\n        if (self.options.subchart.show) {\r\n            var width = self.width - self.margin.left - self.margin.right,\r\n                height = self.height - self.margin.top - self.margin.bottom;\r\n\r\n            // Set actual size for chart after initialization\r\n            var chartBox = self.body.node().getBBox();\r\n            // self.actualWidth = chartBox.width - 4 * self.point.radius;\r\n            self.actualHeight = chartBox.height;\r\n\r\n            /*----------  Sub Chart  ----------*/\r\n            \r\n            self.subChartWidth = width,\r\n            self.subChartHeight = self.options.subchart.height,\r\n            self.subChartMargin = {\r\n                'top': self.actualHeight + 100,\r\n                'left': self.margin.left\r\n            };\r\n\r\n            self.subChartX = d3.time.scale().range([0, self.subChartWidth]);\r\n\r\n            self.subChartX.domain([self.options.starting, self.options.ending]);\r\n\r\n            self.subChartXAxis = d3.svg.axis()\r\n                            .scale(self.subChartX)\r\n                            .orient(\"bottom\");\r\n\r\n            self.brush = d3.svg.brush()\r\n                            .x(self.subChartX)\r\n                            .on(\"brush\", function() {\r\n                                // Update axis\r\n                                self.x.domain(self.brush.empty() ? self.subChartX.domain() : self.brush.extent());\r\n\r\n                                self.options.starting = self.x.domain()[0];\r\n                                self.options.ending = self.x.domain()[1];\r\n\r\n                                self.axis.update(self.x, self.y, 500);\r\n                                var scale = width / (self.options.ending - self.options.starting);\r\n\r\n                                // Update main path of Line Chart\r\n                                self.body.selectAll(\".c9-timeline-custom-rect\")\r\n                                        .attr(\"x\", function(d, i) { return self.x(d.start); })\r\n                                        .attr(\"width\", function (d, i) {\r\n                                            return self.x(d.end) - self.x(d.start);\r\n                                        });\r\n                                        // .attr(\"x\", function(d, i) { return self.getXPos(d,i, scale); });\r\n                                        // .attr(\"y\", function(d, i) { return self.getStackPosition(d,i,stackList, index); })\r\n                                        // .attr(\"cx\", function(d, i) { return self.getXPos(d,i, scale); })\r\n                                        // .attr(\"cy\", function (d, i) {\r\n                                        //     return self.getStackPosition(d, i, stackList, index) + self.options.itemHeight / 2;\r\n                                        // });\r\n                            });\r\n\r\n            var scale = width / (self.options.ending - self.options.starting);\r\n\r\n            var color = self.colorRange;\r\n\r\n            self.svg.attr('height', self.height + self.subChartHeight);\r\n\r\n            self.svg.selectAll(\".c9-subchart-custom\").remove();\r\n            self.svg.selectAll(\".c9-subchart-custom .c9-subchart-axis\").remove();\r\n\r\n            var subChart = self.svg.append(\"g\")\r\n                            .attr(\"class\", \"c9-subchart-custom\")\r\n                            // .attr(\"clip-path\", \"url(#clip)\")\r\n                            .attr(\"transform\", \"translate(\" + self.subChartMargin.left + \",\" + self.subChartMargin.top + \")\");\r\n\r\n            var itemContainer = subChart.append('g')\r\n                                    .attr('class', 'c9-subchart-custom c9-subchart-timeline-container');\r\n                                    // .attr(\"clip-path\", \"url(#clip)\");\r\n\r\n            data.forEach(function(datum, index) {\r\n                if (!datum.enable) return;\r\n\r\n                itemContainer.selectAll(\".c9-subchart-timeline-container\")\r\n                    .data(datum.value).enter()\r\n                    .append(function (d, i) {\r\n                        return document.createElementNS(d3.ns.prefix.svg, d.end != \"Invalid Date\" ? \"rect\" : \"circle\");\r\n                    })\r\n                    .attr('class', 'c9-timeline-custom-rect')\r\n                    // .attr(\"x\", function(d, i) { return self.getXPos(d,i, scale); })\r\n                    .attr(\"x\", function(d, i) { return self.subChartX(d.start); })\r\n                    .attr(\"y\", function(d, i) { return self.getStackPosition(d, i , index, true); })\r\n                    // .attr(\"width\", function (d, i) {\r\n                    //     return (d.end - d.start) * scale;\r\n                    // })\r\n                    .attr(\"width\", function (d, i) {\r\n                        return self.subChartX(d.end) - self.subChartX(d.start);\r\n                    })\r\n                    .attr(\"cy\", function (d, i) {\r\n                        return self.getStackPosition(d, i, index) + self.options.itemHeight / 2;\r\n                    })\r\n                    // .attr(\"cx\", function(d, i) { return self.getXPos(d,i, scale); })\r\n                    .attr(\"cx\", function(d, i) { return self.subChartX(d.start); })\r\n                    .attr(\"r\", self.options.itemHeight / 2)\r\n                    .attr(\"height\", self.options.itemHeight / 2)\r\n                    .style(\"fill\", color(index));\r\n            });\r\n            \r\n\r\n            itemContainer.append(\"g\")\r\n                .attr(\"class\", \"c9-subchart-axis\")\r\n                .attr(\"transform\", \"translate(0,\" + self.subChartHeight + \")\")\r\n                .call(self.subChartXAxis);\r\n\r\n            //append the brush for the selection of subsection  \r\n            itemContainer.append(\"g\")\r\n                .attr(\"class\", \"c9-subchart-brush\")\r\n                .call(self.brush)\r\n                .selectAll(\"rect\")\r\n                .attr(\"height\", self.subChartHeight);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select all path as type RECT in Timeline Chart via its CLASS\r\n     */\r\n    selectAllRect() {\r\n        var self = this;\r\n\r\n        return self.body\r\n                    .selectAll('.c9-timeline-custom-rect');\r\n    }\r\n\r\n    /**\r\n     * Update Interaction: Hover\r\n     * @return {} \r\n     */\r\n    updateInteraction() {\r\n        var self    = this,\r\n            selector= self.selectAllRect(),\r\n            hoverOptions        = self.hover.options,\r\n            hoverEnable         = self.hover.enable,\r\n            onMouseOverCallback = hoverOptions.onMouseOver.callback,\r\n            onMouseOutCallback  = hoverOptions.onMouseOut.callback,\r\n            onClickCallback     = self.click.callback;\r\n\r\n        var tooltip = new Tooltip(self.options.tooltip);\r\n\r\n        // Main Event Dispatch for paths in pie chart\r\n        self.eventFactory = {\r\n            'click': function(d, i) {\r\n                if (Helper.isFunction(onClickCallback)) {\r\n                    onClickCallback.call(this, d);\r\n                }\r\n            },\r\n\r\n            'mouseover': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOverCallback)) {\r\n                    onMouseOverCallback.call(this, d);\r\n                }\r\n\r\n                d3.select(this).style(\"fill\", function (d, i) { return self.getLightenColor(d.color || color(i)); });\r\n\r\n                tooltip.draw(d, self, 'mouseover');\r\n            },\r\n            \r\n            'mouseout': function(d, i) {\r\n                if (!hoverEnable) return;\r\n\r\n                if (Helper.isFunction(onMouseOutCallback)) {\r\n                    onMouseOutCallback.call(this, d);\r\n                }\r\n\r\n                d3.select(this).style(\"fill\", function (d, i) { return d.color || color(i); });\r\n\r\n                tooltip.draw(d, self, 'mouseout');\r\n            }\r\n        };\r\n\r\n        selector.on(self.eventFactory);\r\n    }\r\n\r\n    getXPos(d, i, scale) {\r\n        var self = this;\r\n        return (d.start - self.options.starting) * scale;\r\n    }\r\n\r\n    getStackPosition(d, i, index, isSubchart) {\r\n        var self = this;\r\n\r\n        var stackList = self.stackList;\r\n\r\n        if (self.options.stack) {\r\n            if (isSubchart) {\r\n                var height = self.height - self.margin.top - self.margin.bottom;\r\n                var ratio = self.subChartHeight / height;\r\n\r\n                return (self.options.itemHeight  * ratio + self.options.itemMargin) * stackList[index];\r\n            } else {\r\n                return (self.options.itemHeight + self.options.itemMargin) * stackList[index];\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /*========================================\r\n    =            User's Functions            =\r\n    ========================================*/\r\n\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    on(eventType, callback) {\r\n        super.on(eventType, callback);\r\n        \r\n        var self = this;\r\n        var selector    = self.selectAllRect();\r\n\r\n        // Update Event Factory\r\n        let eventFactory = {\r\n            'click.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseover.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            },\r\n            'mouseout.event': function(d) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, d);\r\n                }\r\n            }\r\n        }\r\n\r\n        let eventName = eventType + '.event';\r\n\r\n        selector.on(eventName, eventFactory[eventName]);\r\n    }\r\n    \r\n    /**\r\n     * Main draw function\r\n     */\r\n    draw() {\r\n        super.draw();\r\n\r\n        var self = this;\r\n        \r\n        self.updateConfig(self.config, function(data) {\r\n            var axis    = new Axis(self.options.axis, self, self.width - self.margin.left - self.margin.right, (self.options.itemHeight + self.options.itemMargin) * self.maxStack);\r\n            var title   = new Title(self.options.title, self);  \r\n            var legend  = new Legend(self.options.legend, self, self.colorRange, data);\r\n\r\n            self.axis = axis;\r\n            self.title = title;\r\n            self.legend = legend;\r\n\r\n            // Draw title\r\n            self.title.draw();\r\n\r\n            // Draw axis\r\n            self.axis.draw();\r\n\r\n            self.update(data);\r\n            self.updateSubChart(data);\r\n            self.updateInteraction();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set option via stand-alone function\r\n     * @param {[type]} key   [description]\r\n     * @param {[type]} value [description]\r\n     */\r\n    setOption(key, value) {\r\n        super.setOption(key, value);\r\n\r\n        var self = this;\r\n\r\n        Helper.set(key, value, self.options);\r\n\r\n        self.updateConfig(self.options);\r\n    }\r\n\r\n    /**\r\n     * Update chart based on new data with optional dataConfig\r\n     * @param  {[type]} data       [description]\r\n     * @param  {[type]} dataConfig [description]\r\n     */\r\n    updateData(newData, newDataConfig) {\r\n        var self = this;\r\n\r\n        var newCfg = {};\r\n\r\n        if (!Helper.isEmpty(newDataConfig)) {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n                keys: newDataConfig,\r\n            };\r\n\r\n        } else {\r\n\r\n            newCfg.data = {\r\n                plain: newData,\r\n            };\r\n\r\n        }\r\n        \r\n        // Update chart\r\n        self.updateDataConfig(newCfg, function(data) {\r\n            self.update(data);\r\n            self.updateSubChart(data);\r\n\r\n            // Update Axis\r\n            self.axis.update(self.x, self.y, 100);\r\n        });\r\n    }\r\n    /*=====  End of User's Functions  ======*/\r\n    \r\n    \r\n    \r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/C9.TimeLine.js\n **/","import Helper from '../helper/C9.Helper';\r\nimport Tooltip from '../charts/utils/C9.Tooltip';\r\nimport DataAdapter from '../helper/C9.DataAdapter';\r\nexport default class Map {\r\n    constructor(options) {\r\n        var self    = this;\r\n        var config  = {\r\n            // container\r\n            id: \"body\",\r\n            // Layers:\r\n            // BingMaps, OSM, Raster, Tile, TileImage, Vector, VectorTile,...\r\n            // REF: http://openlayers.org/en/latest/apidoc/ol.source.html?stableonly=true\r\n            layers: null, \r\n            view: {\r\n                lat: 0,\r\n                lon: 0,\r\n                zoom: 2\r\n            },\r\n            data: null,\r\n            tooltip: {\r\n                format: null\r\n            }\r\n        };\r\n\r\n        self._options = Helper.mergeDeep(config, options);\r\n        self._dataSource      = self._options.data;\r\n        self.initMapConfig();\r\n    }\r\n\r\n    /*==============================\r\n    =            Getter            =\r\n    ==============================*/\r\n\r\n    // get id() {\r\n    //     return this._options.id;\r\n    // }\r\n\r\n    // get height() {\r\n    //     return this._height;\r\n    // }\r\n\r\n    // get width() {\r\n    //     return this._width;\r\n    // }\r\n\r\n    // get view() {\r\n    //     return this._view;\r\n    // }\r\n\r\n    // get markers() {\r\n    //     return this._markers;\r\n    // }\r\n\r\n    // get layers() {\r\n    //     return this._layers;\r\n    // }\r\n\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /*=====  End of Getter  ======*/\r\n    \r\n    \r\n    /*==============================\r\n    =            Setter            =\r\n    ==============================*/\r\n\r\n    // set id(newId) {\r\n    //     if (newId) {\r\n    //         this._options.id = newId;\r\n    //     }\r\n    // }\r\n\r\n    // set height(newHeight) {\r\n    //     if (newHeight) {\r\n    //         this._height = newHeight;    \r\n    //     }\r\n    // }\r\n\r\n    // set width(newWidth) {\r\n    //     if (newWidth) {\r\n    //         this._width = newWidth;\r\n    //     }\r\n    // }\r\n\r\n    // set view(newView) {\r\n    //     if (newView) {\r\n    //         this._view = newView;\r\n    //     }\r\n    // }\r\n\r\n    // set markers(newMarkers) {\r\n    //     if (newMarkers) {\r\n    //         this._markers = newMarkers;\r\n    //     }\r\n    // }\r\n\r\n    // set layers(newLayers) {\r\n    //     if (newLayers) {\r\n    //         this._layers = newLayers;\r\n    //     }\r\n    // }\r\n\r\n    set dataSource(newData) {\r\n        if (newData) {\r\n            this._dataSource = newData;\r\n        }\r\n    }\r\n\r\n    set data(newData) {\r\n        if (newData) {\r\n            this._data = newData;\r\n        }\r\n    }\r\n    /*=====  End of Setter  ======*/\r\n    \r\n    \r\n    /*======================================\r\n    =            Main Functions            =\r\n    ======================================*/\r\n    \r\n    initMapConfig() {\r\n        var self = this;\r\n\r\n        //c9Layers contain all layers\r\n        self.c9Layers = [];\r\n        //c9Markers contain all markers\r\n        // self.c9Markers = new ol.source.Vector({});\r\n        //c9Objects contain all polygons, lines\r\n        self.c9Objs = new ol.source.Vector({});\r\n        self.c9GeojsonObjs = [];\r\n        //init all thing relating to user's data\r\n\r\n        //layer\r\n        self.initLayer();\r\n        \r\n        //quick markers\r\n        // self.initMarker();\r\n\r\n        //object\r\n        // self.initObj();\r\n\r\n        //init popup\r\n        var popup = document.createElement('div');\r\n        popup.id = 'c9MapPopup';\r\n        popup.className = 'c9-map-tooltip-container c9-custom-tooltip-container c9-tooltip-top';\r\n        document.body.appendChild(popup);\r\n    }\r\n\r\n    draw() {\r\n        var self = this;\r\n        var view = self.options.view,\r\n            id   = self.options.id;\r\n\r\n        self.c9View = new ol.View({\r\n            center: ol.proj.fromLonLat([view.lon, view.lat]),\r\n            zoom: view.zoom > 2 ? view.zoom : 2,\r\n            minZoom: 2,\r\n        });\r\n        self.c9Map = new ol.Map({\r\n            target: id,\r\n            layers: self.c9Layers,\r\n            view: self.c9View,\r\n            interactions : ol.interaction.defaults({doubleClickZoom: false})\r\n        });\r\n\r\n        /******************** ADD C9 OBJECTS ********************/\r\n        self.c9ObjsLayer = new ol.layer.Vector({ \r\n            source: self.c9Objs,\r\n            map: self.c9Map\r\n        });\r\n        /********************************************************/\r\n\r\n        /********************* ADD C9 POPUP *********************/\r\n        self.c9Popup = new ol.Overlay({\r\n            positioning: 'bottom-center',\r\n            element: document.getElementById('c9MapPopup')\r\n        });\r\n\r\n        //add overlay to contain popup\r\n        self.c9Map.addOverlay(self.c9Popup);\r\n        /********************************************************/\r\n\r\n        /********************* HOVER STYLE **********************/\r\n        self.c9CustomHover = new ol.layer.Vector({\r\n            source: new ol.source.Vector(),\r\n            map: self.c9Map,\r\n            style: new ol.style.Style({\r\n                stroke: new ol.style.Stroke({\r\n                    color: 'rgb(0, 153, 255)',\r\n                    width: 3\r\n                }),\r\n                fill: new ol.style.Fill({\r\n                    color: 'rgba(255, 255, 255, 0.2)'\r\n                })\r\n            })\r\n        });\r\n        /********************************************************/\r\n        //adapt data to obj\r\n        self.addData(self.dataSource);\r\n        //define interaction\r\n        self.updateInteraction();\r\n    }\r\n    /*=====  End of Main Functions  ======*/\r\n\r\n    /**\r\n     * Create layer\r\n     * @param  {String} type of layer\r\n     * @param  {source} source data defined by C9\r\n     */\r\n    createLayer(options){\r\n        var self = this;\r\n        if (Helper.isEmpty(options)) return;\r\n        \r\n        var type = options.type || 'Tile',\r\n            source = options.source || {name: 'OSM'};\r\n            // style = options.style;\r\n\r\n        var layer = new ol.layer[type];\r\n        layer.setSource(self.setupSource(source));\r\n        // if (!Helper.isEmpty(style)) layer.setStyle(style);\r\n\r\n        //adapt source data to c9obj\r\n        //support maximum 2 source level\r\n        var containFeature = true, vs;\r\n        try {\r\n            vs = layer.getSource();\r\n            vs.getFeatures();\r\n        }\r\n        catch (err) {\r\n            try {\r\n                vs = layer.getSource().getSource();\r\n                vs.getFeatures();\r\n            }\r\n            catch (err) {\r\n                containFeature = false;    \r\n            }\r\n        }\r\n\r\n        if (containFeature) {\r\n            var readFormat = function(feature) {\r\n                var result = {};\r\n                feature.getKeys().forEach(function(k) {\r\n                    result[k] = feature.getProperties()[k];\r\n                });\r\n                result['id'] = feature.getId();\r\n                return result;\r\n            }\r\n            var setStyle = function(){\r\n                if (!Helper.isEmpty(options.style)) {\r\n                    try {\r\n                        self.setStyle({obj: layer.getSource(), style: options.style});\r\n                    }\r\n                    catch (err) {\r\n                        try {\r\n                            self.setStyle({obj: vs, style: options.style});\r\n                        }\r\n                        catch (err) {\r\n                            try {\r\n                                self.setStyle({obj: layer, style: options.style});    \r\n                            }\r\n                            catch (err) {\r\n                                throw 'Cannot set style for this source';\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            };\r\n            //register layer loaded event to set data for obj\r\n            vs.once('change', function(e) {\r\n                if (vs.getState() == 'ready') {\r\n                    var objs = vs.getFeatures();\r\n                    self.c9GeojsonObjs.push(layer.getSource());\r\n                    // self.c9Objs.addFeatures(objs);\r\n\r\n                    objs.forEach(function(o) {\r\n                        o.set('data', readFormat(o));\r\n                        o.set('type', 'c9-geojson');\r\n                    })\r\n\r\n                    //read data from url\r\n                    if (!Helper.isEmpty(options.data) && Helper.isFunction(options.data.condition) && !Helper.isEmpty(options.data.file) && !Helper.isEmpty(options.data.file.url) && !Helper.isEmpty(options.data.file.type)) {\r\n                        var da = new DataAdapter(options.data);\r\n                        da.getDataTarget('', function(data) {\r\n                            var condition = options.data.condition;\r\n                            var process = options.data.process;\r\n\r\n                            if (!Helper.isEmpty(process) && Helper.isFunction(process))\r\n                                data = process(data);\r\n\r\n                            objs.forEach(function(o) {\r\n                                if (Helper.isArray(data)) {\r\n                                    for (var i = 0; i < data.length; i++) {\r\n                                        if (condition(o, data[i])) {\r\n                                            for (var j in data[i]) {\r\n                                                o.get('data')[j] = data[i][j];\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                } \r\n                                else \r\n                                    if (condition(o, data)) {\r\n                                        for (var i in data) {\r\n                                            o.get('data')[i] = data[i];\r\n                                        }\r\n                                    }\r\n                            });\r\n                            setStyle();\r\n                        });\r\n                    }\r\n                    else \r\n                        setStyle();\r\n                        \r\n                }\r\n            })\r\n        }\r\n\r\n        self.c9Layers.push(layer);\r\n\r\n        if (!Helper.isEmpty(self.c9Map))\r\n            self.c9Map.addLayer(layer);\r\n\r\n        return layer;\r\n    }\r\n\r\n    /**\r\n     * Init Layer base on first user's data\r\n     */\r\n    initLayer() {\r\n        var self = this;\r\n        var layers = self.options.layers;\r\n\r\n        if (layers instanceof Array) {\r\n            layers.forEach(function(l, i) {\r\n                self.createLayer({type: l.type, source: l.source, style: l.style, condition: l.condition, data: l.data});\r\n            })\r\n        }\r\n        else if (Helper.isObject(layers)){\r\n            self.createLayer({type: layers.type, source: layers.source, style: layers.style, condition: layers.condition, data: layers.data});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setup source for layer\r\n     * @param  {Object} source data style defined by c9\r\n     * @return {String} return source (ol.source)\r\n     */\r\n    setupSource(s){\r\n        var source = undefined;\r\n        switch (s.name) {\r\n            case 'BingMaps':\r\n                source = new ol.source.BingMaps({\r\n                    key: s.key,\r\n                    imagerySet: s.imagerySet || 'Road'\r\n                });\r\n                break;\r\n            case 'Stamen':\r\n                source = new ol.source.Stamen({\r\n                    layer: s.layer || 'watercolor'\r\n                });\r\n                break;\r\n            /********** TileJSON require ol >= v3.8.2 **********/\r\n            case 'TileJSON':\r\n                source = new ol.source.TileJSON({\r\n                    url: s.url,\r\n                    crossOrigin: s.crossOrigin || 'anonymous'\r\n                });\r\n                break;\r\n            case 'TileArcGISRest':\r\n                source = new ol.source.TileArcGISRest({\r\n                    url: s.url\r\n                });\r\n                break;\r\n            case 'Vector':\r\n                source = new ol.source.Vector({\r\n                    url: s.url,\r\n                    format: s.format === undefined ? null : new ol.format[s.format]({\r\n                        extractStyles: s.extractStyles || false\r\n                    })\r\n                });\r\n                break;\r\n            case 'Cluster':\r\n                source = new ol.source.Cluster({\r\n                    distance: s.distance || 20,\r\n                    source: this.setupSource(s.source)\r\n                });\r\n                break;\r\n            case 'ImageVector':\r\n                source = new ol.source.ImageVector({\r\n                    source: this.setupSource(s.source),\r\n                    // default style\r\n                    style: new ol.style.Style({\r\n                        fill: new ol.style.Fill({\r\n                            color: 'rgba(255, 255, 255, 0.2)'\r\n                        }),\r\n                        stroke: new ol.style.Stroke({\r\n                            color: '#319FD3',\r\n                            width: 1\r\n                        })\r\n                    })\r\n                });\r\n                break;\r\n            default: \r\n                source = new ol.source.OSM();\r\n                break;\r\n\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * define some interactions\r\n     */\r\n    updateInteraction(){\r\n        var self = this;\r\n        const LEFT_KEY = 37, RIGHT_KEY = 39, DEL_KEY = 46, DURATION = 1000, LOAD_MAP_DELAY = 500;\r\n\r\n        // add default interaction of ol3\r\n        // self.c9Map.addInteraction(self.c9DefaultHoverStyle = new ol.interaction.Select({\r\n        //     condition: ol.events.condition.pointerMove\r\n        // }));\r\n\r\n        //normal: stroke 'rgb(49, 159, 211)' width: 1\r\n        //        fill '#fff'\r\n        \r\n\r\n        /******************* SOME HELPER FUNCTION ********************/\r\n        var getCenterLonLat = function(f) {\r\n            return ol.proj.transform(getCenter(f), 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        var getCenter = function(f) {\r\n            return ol.extent.getCenter(f.getGeometry().getExtent());\r\n        }\r\n        var transformCoordinates = function(c) {\r\n            return ol.proj.transform(c, 'EPSG:3857', 'EPSG:4326');\r\n        }\r\n        /**\r\n         * Create pan animation on object\r\n         * @param  {ol.Feature}\r\n         */\r\n        var panAnimation = function(feature){\r\n            if (self.c9View.getCenter()[0] == getCenter(feature)[0] && self.c9View.getCenter()[1] == getCenter(feature)[1]) return;\r\n\r\n            var pan = ol.animation.pan({\r\n                duration: DURATION,\r\n                source: (self.c9View.getCenter())\r\n            });\r\n            self.c9Map.beforeRender(pan);\r\n            self.c9View.setCenter(getCenter(feature));\r\n        }\r\n        /**\r\n         * Create marker's flash effect\r\n         * @param  {ol.Feature}\r\n         */\r\n        var createMarkerEffect = function(feature){\r\n            var duration = 3000;\r\n            var start = new Date().getTime();\r\n            var listenerKey;\r\n\r\n            function animate(event) {\r\n                var vectorContext = event.vectorContext;\r\n                var frameState = event.frameState;\r\n                var flashGeom = feature.getGeometry().clone();\r\n                var elapsed = frameState.time - start;\r\n                var elapsedRatio = elapsed / duration;\r\n                // radius will be 5 at start and 30 at end.\r\n                var radius = ol.easing.easeOut(elapsedRatio) * 25 + 5;\r\n                var opacity = ol.easing.easeOut(1 - elapsedRatio);\r\n\r\n                var style = new ol.style.Style({\r\n                    image: new ol.style.Circle({\r\n                        radius: radius,\r\n                        snapToPixel: false,\r\n                        stroke: new ol.style.Stroke({\r\n                            color: 'rgba(255, 0, 0, ' + opacity + ')',\r\n                            width: 0.25 + opacity\r\n                        })\r\n                    })\r\n                });\r\n\r\n                vectorContext.setStyle(style);\r\n                vectorContext.drawGeometry(flashGeom);\r\n                if (elapsed > duration) {\r\n                    ol.Observable.unByKey(listenerKey);\r\n                    return;\r\n                }\r\n                // tell OL3 to continue postcompose animation\r\n                self.c9Map.render();\r\n            }\r\n            listenerKey = self.c9Map.on('postcompose', animate);\r\n        }\r\n        /**\r\n         * Caculate distance between marker and center view, plus direction compare with center\r\n         * @param  {ol.Feature}\r\n         * @return {[Number, Boolean]} Array of distance value and direction value (left if true, right if false)\r\n         */\r\n        var distanceAndDirection = function(f) {\r\n            var center = transformCoordinates(self.c9View.getCenter());\r\n            var fCoordinates = getCenterLonLat(f);\r\n            return [Math.sqrt(Math.pow(fCoordinates[0] - center[0], 2) + Math.pow(fCoordinates[1] - center[1], 2)), (fCoordinates[0] - center[0]) <= 0];\r\n        }\r\n        var formatPopup = function(data) {\r\n            if (Helper.isEmpty(data)) return;\r\n            var capitalizeFirstLetter = function(string) { return string.charAt(0).toUpperCase() + string.slice(1); }\r\n            var strongSpan = function(strong, span) { if (span == '' || Helper.isEmpty(span) || Helper.isObject(span)) return \"\"; return \"<strong>\" + capitalizeFirstLetter(strong) + \":</strong>\" + \"<span> \" + span + \"</span></br>\"; };\r\n            var result = strongSpan(\"Name\", data.name), v;\r\n            if (!Helper.isEmpty(data.coor)) result += (strongSpan(\"Lon\", data.coor.lon || data.coor[0]) + strongSpan(\"Lat\", data.coor.lat || data.coor[1]));\r\n\r\n            for (var i in v = data.value) {\r\n                result += strongSpan(i, v[i]);\r\n            }\r\n            return result;\r\n        }\r\n        /*************************************************************/\r\n        \r\n        //register pointer move event to show cursor as pointer if user hover on markers\r\n        self.c9Map.on('pointermove', function(evt) {\r\n            var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                return feature;\r\n            });\r\n\r\n            // new hover style\r\n            if (f !== self.lastHoveredObj) {\r\n                if (self.lastHoveredObj) {\r\n                    if (self.lastHoveredObj.get('type') != \"c9-geojson\" && self.lastHoveredObj.get('c9-style'))\r\n                        self.lastHoveredObj.setStyle(self.lastHoveredObj.get('c9-style'));\r\n                    else\r\n                        self.c9CustomHover.getSource().removeFeature(self.lastHoveredObj);\r\n                }\r\n                if (f) {\r\n                    var fStyle = f.get('c9-style'), strokeColor = 'rgb(0, 153, 255)', strokeWidth = 3, fillColor = 'rgba(255, 255, 255, 0.2)';\r\n                    if (fStyle) {\r\n                        strokeColor = fStyle.getStroke().getColor() == '#319FD3' ? 'rgb(0, 153, 255)' : self.getLightenColor(fStyle.getStroke().getColor());\r\n                        strokeWidth = fStyle.getStroke().getWidth() + 2;\r\n                        fillColor   = fStyle.getFill().getColor() == 'rgba(255, 255, 255, 0.2)' ? 'rgba(255, 255, 255, 0.2)' : self.getLightenColor(fStyle.getFill().getColor());\r\n                    }\r\n                    var newStyle = new ol.style.Style({\r\n                        stroke: new ol.style.Stroke({\r\n                            color: strokeColor,\r\n                            width: strokeWidth\r\n                        }),\r\n                        fill: new ol.style.Fill({\r\n                            color: fillColor\r\n                        })\r\n                    });\r\n                    if (fStyle) \r\n                        f.setStyle(newStyle);\r\n                    else {\r\n                        self.c9CustomHover.setStyle(newStyle);\r\n                        self.c9CustomHover.getSource().addFeature(f);    \r\n                    }\r\n                }\r\n                self.lastHoveredObj = f;\r\n            }\r\n            if (f) {\r\n                self.c9Map.getTargetElement().style.cursor = 'pointer';\r\n                // self.createMarkerEffect(f);\r\n                /************* LIGHTEN COLOR ***********/\r\n                // if (f.get('type') == 'c9-line' || f.get('type') == 'c9-polygon' || f.get('type') == 'c9-multipolygon'){\r\n                //     var fStyle = f.getStyle();\r\n                //     var defaultStyle = f.get('c9-style');\r\n\r\n                //     if (fStyle.getStroke().getWidth() == defaultStyle.strokeWidth)\r\n                //         f.setStyle(new ol.style.Style({\r\n                //             stroke: new ol.style.Stroke({\r\n                //                 width: fStyle.getStroke().getWidth() + 2,\r\n                //                 color: self.getLightenColor(fStyle.getStroke().getColor())\r\n                //             }),\r\n                //             fill: new ol.style.Fill({\r\n                //                 color: self.getLightenColor(fStyle.getFill().getColor())\r\n                //             })\r\n                //         }));\r\n                // }\r\n\r\n                // if (f !== self.lastHoveredObj) {\r\n                //     if (self.lastHoveredObj) {\r\n                //         self.c9CustomHover.getSource().removeFeature(self.lastHoveredObj);\r\n                //     }\r\n                //     if (f) {\r\n                //         self.c9CustomHover.getSource().addFeature(f);\r\n                //     }\r\n                //     self.lastHoveredObj = f;\r\n                // }\r\n\r\n                /****************************************/\r\n\r\n                /************** SHOW POPUP *************/\r\n                self.c9Popup.getElement().style.display = 'none';\r\n\r\n                // panAnimation(f);\r\n                \r\n                try {\r\n                    if (self.options.tooltip.format) self.options.tooltip.format(f.get('data'));\r\n                }\r\n                catch(err) {\r\n                    throw \"Check data format again\";\r\n                    return;\r\n                }\r\n\r\n                var content = self.options.tooltip.format ? self.options.tooltip.format(f.get('data')) : formatPopup(f.get('data'));\r\n                if (Helper.isEmpty(content) || content.toString().trim() == \"\") return;\r\n\r\n                self.c9Popup.getElement().style.display = 'block';\r\n                self.c9Popup.getElement().innerHTML = content;\r\n                // self.c9Popup.setPosition(getCenter(f));\r\n                self.c9Popup.setPosition(evt.coordinate);\r\n                /****************************************/\r\n                // var stop = new CustomEvent(\"click\", {detail: {message: \"stop\"}});\r\n                // self.c9Map.dispatchEvent(stop);\r\n            }\r\n            if (!f) {\r\n                self.c9Map.getTargetElement().style.cursor = '';\r\n                self.c9Popup.getElement().style.display = 'none';\r\n\r\n                //remove last obj style\r\n                // if (!Helper.isEmpty(self.lastHoveredObj) && (self.lastHoveredObj.get('type') == 'c9-line' || self.lastHoveredObj.get('type') == 'c9-polygon' || self.lastHoveredObj.get('type') == 'c9-multipolygon')) {\r\n                //     var defaultStyle = self.lastHoveredObj.get('c9-style');\r\n                //     self.lastHoveredObj.setStyle(defaultStyle);\r\n                // }   \r\n            }\r\n        });\r\n\r\n        //register map first render's event to show marker's effect\r\n        self.c9Map.once('postrender', function(evt) {\r\n            setTimeout(function(){\r\n                self.c9Objs.getFeatures().forEach(function(f, i){\r\n                    if (f.get('type') == 'c9-marker')\r\n                        createMarkerEffect(f);\r\n                })\r\n            }, LOAD_MAP_DELAY);\r\n        });\r\n\r\n        //register click event to show effect on markers\r\n        self.c9Map.on('click', function(evt){\r\n\r\n            // if (evt instanceof CustomEvent) return;\r\n            var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                self.lastSelectedObj = feature;\r\n                return feature;\r\n            });\r\n            if (f) {\r\n                // self.createMarkerEffect(f);\r\n                // self.c9Popup.getElement().style.display = 'none';\r\n\r\n                panAnimation(f);\r\n                \r\n                // try {\r\n                //     if (self.options.format) self.options.format(f.get('data'));\r\n                // }\r\n                // catch(err) {\r\n                //     throw \"Check data format again\";\r\n                //     return;\r\n                // }\r\n\r\n                // var content = self.options.format ? self.options.format(f.get('data')) : formatPopup(f.get('data'));\r\n                // if (Helper.isEmpty(content) || content.toString().trim() == \"\") return;\r\n\r\n                // self.c9Popup.getElement().style.display = 'block';\r\n                // self.c9Popup.getElement().innerHTML = content;\r\n                // self.c9Popup.setPosition(getCenter(f));\r\n\r\n                // // var stop = new CustomEvent(\"click\", {detail: {message: \"stop\"}});\r\n                // // self.c9Map.dispatchEvent(stop);\r\n            }\r\n            if (!f)\r\n                self.c9Popup.getElement().style.display = 'none';\r\n        });\r\n\r\n        //register keydown event to change center view\r\n        document.addEventListener('keydown', function(e) {\r\n            var keydownAnimate = function(k) {\r\n                var selectedFeature = undefined;\r\n                var minDistance = Infinity;\r\n                self.c9Objs.getFeatures().forEach(function(f, i) {\r\n                    if (f.get('type') == \"c9-marker\") {\r\n                        var checkAnimate = distanceAndDirection(f);\r\n\r\n                        if (((checkAnimate[1] && k == LEFT_KEY) || (!checkAnimate[1] && k == RIGHT_KEY)) && checkAnimate[0] < minDistance && checkAnimate[0] != 0) {\r\n                            minDistance = checkAnimate[0];\r\n                            selectedFeature = f;\r\n                        }\r\n                    }\r\n                });\r\n                if (selectedFeature) {\r\n                    setTimeout(createMarkerEffect(selectedFeature), LOAD_MAP_DELAY);\r\n                    panAnimation(selectedFeature);\r\n                }\r\n            }\r\n            switch(e.keyCode) {\r\n                case LEFT_KEY:\r\n                    keydownAnimate(LEFT_KEY);\r\n                    break;\r\n                case RIGHT_KEY:\r\n                    keydownAnimate(RIGHT_KEY);\r\n                    break;\r\n                case DEL_KEY:\r\n                    // if (!Helper.isEmpty(self.lastSelectedObj) && (!Helper.isEmpty(self.lastSelectedObj.get('type')) || self.lastSelectedObj.get('type') != 'c9-geojson')) self.c9Objs.removeFeature(self.lastSelectedObj);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    // /**\r\n    //  * marker first set up\r\n    //  */\r\n    // initMarker() {\r\n    //     var self = this;\r\n    //     //data\r\n    //     var markers = self.markers;\r\n    //     //add marker layer to layer list (c9Layers)\r\n    //     self.c9Layers.push(new ol.layer.Vector({\r\n    //         source: self.c9Markers\r\n    //     }));\r\n\r\n    //     if (markers.length === 0) return;\r\n\r\n    //     if (markers instanceof Array) {\r\n    //         markers.forEach(function(m, i) {\r\n    //             self.createMarker({lat: m.lat, lon: m.lon, imgSrc: m.img, scale: m.scale});\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         self.createMarker({lat: markers.lat, lon: markers.lon, imgSrc: markers.img, scale: markers.scale});\r\n    //     }\r\n    // }\r\n    /**\r\n     * obj first set up\r\n     */\r\n    // initObj() {\r\n    //     var self = this;\r\n\r\n    //     //add layer Vector to layer list (c9Layers)\r\n    //     self.c9Layers.push(new ol.layer.Vector({\r\n    //         source: self.c9Objs\r\n    //     }));\r\n    // }\r\n\r\n    /**\r\n     * create c9 obj\r\n     * @data  {Object} coordinate\r\n     * @options  {Object} some options: strokeWidth,strokeColor,fillColor,imgSrc,scale\r\n     * @return {}\r\n     */\r\n    createObject(options){\r\n        var self = this;\r\n        if (Helper.isEmpty(options) || Helper.isEmpty(options.data)) return;\r\n        var data = options.data, style = options.style;\r\n        /**\r\n         * Create marker\r\n         * @param  {Number} latitude of marker\r\n         * @param  {Number} longitude of marker\r\n         * @param  {String} image source (support for both local and net)\r\n         * @param  {Number} scale image if its size is too large - default = 1\r\n         */\r\n        var createMarker = function(data, coor, options){\r\n\r\n            if (!Helper.isArray(coor) && coor.length != 2) return;\r\n\r\n            const DEFAULT_SRC = 'http://s21.postimg.org/blklb8scn/marker_icon.png'\r\n            const DEFAULT_SCALE = 1;\r\n\r\n            var lat    = coor[1],\r\n                lon    = coor[0],\r\n                imgSrc = options ? (options.imgSrc || DEFAULT_SRC) : DEFAULT_SRC,\r\n                scale  = options ? (options.scale  || DEFAULT_SCALE) : DEFAULT_SCALE;\r\n\r\n            var marker = new ol.Feature({\r\n                'data-ref': '',\r\n                type: 'c9-marker',\r\n                data: data,\r\n                // 'c9-id': ,\r\n                geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat]))\r\n            });\r\n\r\n            /**\r\n             * Create marker style\r\n             * @param  {String} image source\r\n             * @param  {Number} scale\r\n             * @return {ol.style.Style} return marker style\r\n             */\r\n            var createMarkerStyle = function(imgSrc, scale){\r\n                return new ol.style.Style({\r\n                    image: new ol.style.Icon({\r\n                        anchor: [0.5, 1], //middle-width and bottom-height of image\r\n                        src: imgSrc,\r\n                        scale: scale\r\n                    })\r\n                });\r\n            }\r\n            // marker.set('c9-style', markerStyle);\r\n            marker.setStyle(createMarkerStyle(imgSrc, scale));\r\n\r\n            //add this marker to marker list (c9Objs)\r\n            self.c9Objs.addFeature(marker);\r\n            return marker;\r\n        }\r\n\r\n        var coorAndType = self.normalizeCoordinate(data.coor);\r\n        if (coorAndType.coor == null) return;\r\n\r\n        //marker\r\n        if (coorAndType.type == \"marker\") {\r\n            return createMarker(data, coorAndType.coor, style);\r\n        }\r\n\r\n        // if (data == self.c9Markers) {\r\n        //     data = [];\r\n        //     self.c9Markers.getFeatures().forEach(function (d) {\r\n        //         data.push(ol.proj.transform(d.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326'));\r\n        //     })\r\n        // }\r\n\r\n        var strokeWidth = style ? (style.strokeWidth || 1) : 1,\r\n            strokeColor = style ? (style.strokeColor || \"#319FD3\") : \"#319FD3\",\r\n            fillColor   = style ? (style.fillColor || \"rgba(255, 255, 255, 0.2)\") : \"rgba(255, 255, 255, 0.2)\";\r\n\r\n        var obj = new ol.Feature({\r\n            'data-ref': '',\r\n            type: \"c9-\" + coorAndType.type,\r\n            data: data,\r\n            geometry: coorAndType.type == \"polygon\" ? new ol.geom.Polygon(coorAndType.coor) : coorAndType.type == \"line\" ? new ol.geom.LineString(coorAndType.coor) : new ol.geom.MultiPolygon(coorAndType.coor)\r\n        });\r\n\r\n        obj.getGeometry().transform('EPSG:4326', 'EPSG:3857');\r\n\r\n        /**\r\n         * Create obj style\r\n         * @param  {Number} stroke width\r\n         * @param  {String} stroke color\r\n         * @param  {String} fill color\r\n         * @return {ol.style.Style} return obj style\r\n         */\r\n        var createObjStyle = function(strokeWidth, strokeColor, fillColor){\r\n            return new ol.style.Style({\r\n                stroke: new ol.style.Stroke({\r\n                    width: strokeWidth,\r\n                    color: strokeColor                \r\n                }),\r\n                fill: new ol.style.Fill({\r\n                    color: fillColor\r\n                })\r\n            });\r\n        }\r\n\r\n        var objStyle = createObjStyle(strokeWidth, strokeColor, fillColor);\r\n        obj.set('c9-style', objStyle);\r\n        obj.setStyle(objStyle);\r\n\r\n        //add this marker to marker list (c9Objs)\r\n        self.c9Objs.addFeature(obj);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * normalize coordinate\r\n     * currently only support marker, linestring, polygon and multipolygon\r\n     * @coor  {Array} coordinate of object\r\n     * @return {Array} coordinate was normalized\r\n     */\r\n    normalizeCoordinate(coor){\r\n        var normCoor = [], type, error = {coor: null, type: null};\r\n        if ((Helper.isObject(coor) && coor.length == undefined) || (Helper.isArray(coor) && coor.length == 2 && !isNaN(coor[0]) && !isNaN(coor[1]))) {\r\n            // marker - [] - {}\r\n            type = \"marker\";\r\n            if (coor.length == undefined) {\r\n                if (Helper.isEmpty(coor.lat) || Helper.isEmpty(coor.lon))\r\n                    return error;\r\n                normCoor = [coor.lon, coor. lat];\r\n            }\r\n            else {\r\n                normCoor = coor;\r\n            }\r\n            \r\n        } else if (Helper.isArray(coor)) {\r\n            // linestring - [{},{}] - [[],[]] - [{},[]] - [[],{}]\r\n            var isArrayOrObject = function(obj) {\r\n                var result = {};\r\n                if (Helper.isObject(obj) && obj.length == undefined) {\r\n                    result['check'] = !Helper.isEmpty(obj.lat) && !Helper.isEmpty(obj.lon);\r\n                    if (result['check']) result['coor'] = [obj.lon, obj.lat];\r\n                }\r\n                else {\r\n                    result['check'] = Helper.isArray(obj) && obj.length == 2 && !isNaN(obj[0]) && !isNaN(obj[1]);\r\n                    if (result['check']) result['coor'] = obj;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            // check data inside to eliminate case: multipolygon contains 2 polygons\r\n            if (coor.length == 2 && isArrayOrObject(coor[0]).check && isArrayOrObject(coor[1]).check) {\r\n                type = \"line\";\r\n                normCoor.push(isArrayOrObject(coor[0]).coor);\r\n                normCoor.push(isArrayOrObject(coor[1]).coor);\r\n            }\r\n            //polygon || multipolygon\r\n            else if (coor.length >= 1){\r\n                // multipolygon [[[[] || {}, ...]], [[[] || {}, ...]], ...]\r\n                if (!Helper.isEmpty(coor[0][0]) && !Helper.isEmpty(coor[0][0][0])) {\r\n                    type = \"multipolygon\";\r\n                    coor.forEach(function(pc, i) {\r\n                        if (Helper.isArray(pc) && pc.length == 1) {\r\n                            normCoor.push([[]]);\r\n                            pc[0].forEach(function(c) {\r\n                                // data - [] || {}\r\n                                var obj = isArrayOrObject(c);\r\n                                if (obj.check) normCoor[i][0].push(obj.coor);\r\n                            })\r\n                            // cannot create polygon with the number of points is less than 2\r\n                            if (normCoor[i][0].length <= 2) return error; \r\n                        }\r\n                        else return error; // because data format is not true\r\n                    })    \r\n                }\r\n                // polygon [[[] || {}, ...]]\r\n                else {\r\n                    type = \"polygon\";\r\n                    normCoor.push([]);\r\n                    coor[0].forEach(function(c) {\r\n                        // data - [] || {}\r\n                        var obj = isArrayOrObject(c);\r\n                        if (obj.check) normCoor[0].push(obj.coor);\r\n                    })\r\n                    if (normCoor[0].length <= 2) return error;\r\n                }\r\n                \r\n            }\r\n            else return error;\r\n        }\r\n        return {\r\n            coor: normCoor,\r\n            type: type\r\n        };\r\n    }\r\n\r\n    /**\r\n     * create obj base on user data\r\n     * @data  {Object} data structure: {coor: [], name: , value: }\r\n     * return list of created object\r\n     */\r\n    addData(data){\r\n        if (Helper.isEmpty(data) || (Helper.isEmpty(data.plain) && Helper.isEmpty(data.file))) return;\r\n        var self = this;\r\n\r\n        var da = new DataAdapter(data);\r\n        da.getDataTarget('map', function(data) {\r\n            self.data = data;\r\n            if (!Helper.isEmpty(self.c9Map)) {\r\n                if (Helper.isArray(self.data))\r\n                    self.data.forEach(function(d, i){\r\n                        self.createObject({data: d});\r\n                    })\r\n                else\r\n                    self.createObject({data: self.data});\r\n            }\r\n        });\r\n    }\r\n\r\n    getObjects(){\r\n        var c9GeojsonObjs = [];\r\n        this.c9GeojsonObjs.forEach(function(o){\r\n            try {\r\n                c9GeojsonObjs = c9GeojsonObjs.concat(o.getSource().getFeatures());    \r\n            }\r\n            catch (err) {\r\n                try {\r\n                    c9GeojsonObjs = c9GeojsonObjs.concat(o.getFeatures());\r\n                }\r\n                catch (err) {\r\n                }\r\n            }\r\n        });\r\n        return this.c9Objs.getFeatures().concat(c9GeojsonObjs);\r\n    }\r\n\r\n    getMap(){\r\n        return this.c9Map;\r\n    }\r\n\r\n    /**\r\n     * Custom Event Listener\r\n     * @param  {[type]}   eventType [description]\r\n     * @param  {Function} callback  [description]\r\n     */\r\n    on(eventType, callback) {\r\n        var self = this;\r\n        // Update Event Factory\r\n        let eventFactoryViewport = {\r\n            'click': function(evt) {\r\n                var f = self.c9Map.forEachFeatureAtPixel(self.c9Map.getEventPixel(evt), function(feature, layer){\r\n                    return feature;\r\n                });\r\n                if (Helper.isFunction(callback) && f) {\r\n                    callback.call(this, f);\r\n                }\r\n            },\r\n            'pointermove': function(evt) {\r\n                var f = self.c9Map.forEachFeatureAtPixel(evt.pixel, function(feature, layer){\r\n                    return feature;\r\n                });\r\n                if (Helper.isFunction(callback) && f) {\r\n                    callback.call(this, f);\r\n                }\r\n            },\r\n            'postrender': function(evt) {\r\n                if (Helper.isFunction(callback)) {\r\n                    callback.call(this, evt);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (eventType == \"click\")\r\n            self.c9Map.getViewport().addEventListener(eventType, eventFactoryViewport[eventType]);\r\n        else if (eventType == \"pointermove\")\r\n            self.c9Map.on(eventType, eventFactoryViewport[eventType]);\r\n        else if (eventType == \"postrender\")\r\n            self.c9Map.once(eventType, eventFactoryViewport[eventType]);\r\n    }\r\n\r\n    getLightenColor(color) {\r\n        if (color.includes('rgba')) {\r\n            var alpha = color.split(',')[color.split(',').length - 1].replace(')', '');\r\n            var currentColor = color.replace(',' + alpha, '').replace('a', '');\r\n            var newColor = Helper.shadeColor(-0.2, currentColor);\r\n            return 'rgba(' + newColor.split('(')[1].split(')')[0] + ',' + alpha.trim() + ')';\r\n        }\r\n        else\r\n            return Helper.shadeColor(-0.2, color);\r\n    }\r\n\r\n    /**\r\n     * set style: consist of layer, source and obj\r\n     * @obj   {ol.layer || ol.source || ol.Feature}\r\n     * @style {function || ol.style} style function || ol.style\r\n     */\r\n    setStyle(options){\r\n        if (Helper.isEmpty(options) || Helper.isEmpty(options.obj) || Helper.isEmpty(options.style)) return;\r\n        //create style for obj\r\n        if (Helper.isFunction(options.style) || options.style instanceof ol.style.Style) {\r\n            options.obj.setStyle(options.style);\r\n        }\r\n        else {\r\n            const DEFAULT_SRC = 'http://s21.postimg.org/blklb8scn/marker_icon.png'\r\n            const DEFAULT_SCALE = 1;\r\n\r\n            var strokeColor = options.style.strokeColor ? options.style.strokeColor : '#319FD3',\r\n                strokeWidth = options.style.strokeWidth ? options.style.strokeColor : 1,\r\n                fillColor   = options.style.fillColor ? options.style.fillColor     : 'rgba(255, 255, 255, 0.2)',\r\n                imgSrc      = options.style.type == 'marker' || options.style.type == 'c9-marker' ? (options.style.imgSrc || DEFAULT_SRC)   : null,\r\n                scale       = options.style.type == 'marker' || options.style.type == 'c9-marker' ? (options.style.scale  || DEFAULT_SCALE) : null;\r\n\r\n            var style;\r\n\r\n            if (imgSrc != null)\r\n                options.obj.setStyle(style = new ol.style.Style({\r\n                    image: new ol.style.Icon({\r\n                        anchor: [0.5, 1], //middle-width and bottom-height of image\r\n                        src: imgSrc,\r\n                        scale: scale\r\n                    })\r\n                }))\r\n            else\r\n                options.obj.setStyle(style = new ol.style.Style({\r\n                    stroke: new ol.style.Stroke({\r\n                        color: strokeColor,\r\n                        width: strokeWidth\r\n                    }),\r\n                    fill: new ol.style.Fill({\r\n                        color: fillColor\r\n                    })\r\n                }))\r\n\r\n            options.obj.set('c9-style', style);\r\n        }\r\n    }\r\n\r\n    // TODO - set hover style\r\n\r\n    /**\r\n     * create a layer from geojson file\r\n     * @url  {String} url of geojson file\r\n     */\r\n    createLayerFromGeojson(options) {\r\n        var self = this;\r\n        if (Helper.isEmpty(options) || Helper.isEmpty(options.url)) return;\r\n\r\n        self.createLayer({\r\n            type: \"Image\",\r\n            source: {\r\n                name: \"ImageVector\",\r\n                source: {\r\n                    name: 'Vector',\r\n                    url: options.url,\r\n                    format: 'GeoJSON'\r\n                }\r\n            },\r\n            data: options.data,\r\n            style: options.style\r\n        });\r\n        //create style\r\n        // self.setStyle({obj: layer.getSource(), style: options.style});\r\n        \r\n        // if (!Helper.isEmpty(options.style)) {\r\n        //     if (Helper.isFunction(style) || style instanceof ol.style.Style) {\r\n        //         layer.getSource().setStyle(options.style);\r\n        //     }\r\n        //     else {\r\n        //         var strokeColor = options.style.strokeColor ? options.style.strokeColor : '#319FD3',\r\n        //             strokeWidth = options.style.strokeWidth ? options.style.strokeColor : 1,\r\n        //             fillColor   = options.style.fillColor   ? options.style.fillColor   : 'rgba(255, 255, 255, 0.2)';\r\n\r\n        //         layer.getSource().setStyle(new ol.style.Style({\r\n        //             stroke: new ol.style.Stroke({\r\n        //                 color: strokeColor,\r\n        //                 width: strokeWidth\r\n        //             }),\r\n        //             fill: new ol.style.Fill({\r\n        //                 color: fillColor\r\n        //             })\r\n        //         }))\r\n        //     }\r\n        // }\r\n\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/map/C9.Map.js\n **/"],"sourceRoot":""}